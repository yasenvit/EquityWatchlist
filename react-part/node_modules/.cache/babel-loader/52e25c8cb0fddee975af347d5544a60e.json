{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/yavit/OneDrive/Desktop/EquityEcho/WatchlistFundamentals/react-part/src/components/Quotes.js\";\nimport React, { Component, Fragment } from 'react';\nimport apiCall from '../util/apiCall';\nimport QuoteSheet from './QuoteSheet';\nexport default class Quotes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.delSymbol = symbol => {\n      const endpoint = \"/api/\".concat(window.sessionStorage.getItem(\"apikey\"), \"/active/delete/\").concat(symbol);\n      const promise = apiCall(endpoint, 'get');\n      promise.then(blob => blob.json()).then(json => {\n        this.setState({\n          activeTickers: json.symbols\n        });\n      });\n    };\n\n    this.state = {\n      activeQuotes: [],\n      activeTickers: [],\n      error: \"\"\n    };\n    this.checkList();\n  }\n\n  checkList() {\n    const endpoint = \"/api/\".concat(window.sessionStorage.getItem(\"apikey\"), \"/active/list\");\n    const promise = apiCall(endpoint, 'get');\n    promise.then(blob => blob.json()).then(json => {\n      this.setState({\n        activeTickers: json.symbols\n      });\n    });\n  }\n\n  getQuotes(symbols) {\n    const activeTickers = symbols.join();\n    const endpoint = \"/api/list/\".concat(activeTickers, \"/quote\");\n    const promise = apiCall(endpoint, 'get');\n    promise.then(blob => blob.json()).then(json => {\n      this.setState({\n        activeQuotes: json.quotes\n      });\n    });\n  }\n\n  addSymbol(symbol) {\n    console.log(\"function addsymbol\", symbol);\n    const endpoint = \"/api/\".concat(window.sessionStorage.getItem(\"apikey\"), \"/active/add/\").concat(symbol);\n    const promise = apiCall(endpoint, 'get');\n    promise.then(blob => blob.json()).then(json => {\n      if (json.error.length > 0) {\n        alert(json.error);\n      } else {\n        this.setState({\n          activeTickers: json.symbols\n        });\n      }\n    });\n  }\n\n  /*\r\n  componentDidUpdate(prevState) {\r\n      if(this.state.activeTickers && this.state.activeTickers.length>0){\r\n        if(!this.state.activeQuotes || this.state.activeQuotes.length===0) {\r\n          this.getQuotes(this.state.activeTickers)\r\n        }\r\n      } \r\n    }\r\n  */\n  componentDidMount() {\n    if (this.state.activeTickers && this.state.activeTickers.length > 0) {\n      this.getQuotes(this.state.activeTickers);\n    }\n  }\n\n  render() {\n    console.log(\"----------------\", this.state.activeTickers);\n    console.log(\"++++++++++++++\", this.state.activeQuotes);\n    let output = React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    });\n\n    if (this.state.activeQuotes) {\n      output = React.createElement(QuoteSheet, {\n        addSymbol: this.addSymbol,\n        delSymbol: this.delSymbol,\n        activeTickers: this.state.activeTickers,\n        activeQuotes: this.state.activeQuotes,\n        setChartsTicker: this.props.setChartsTicker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, output);\n  }\n\n}","map":{"version":3,"sources":["/mnt/c/Users/yavit/OneDrive/Desktop/EquityEcho/WatchlistFundamentals/react-part/src/components/Quotes.js"],"names":["React","Component","Fragment","apiCall","QuoteSheet","Quotes","constructor","props","delSymbol","symbol","endpoint","window","sessionStorage","getItem","promise","then","blob","json","setState","activeTickers","symbols","state","activeQuotes","error","checkList","getQuotes","join","quotes","addSymbol","console","log","length","alert","componentDidMount","render","output","setChartsTicker"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport apiCall from '../util/apiCall';\r\nimport QuoteSheet from './QuoteSheet'\r\n\r\n\r\nexport default class Quotes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          activeQuotes: [],\r\n          activeTickers : [],\r\n          error: \"\"\r\n        };\r\n        this.checkList()\r\n      }\r\n\r\n    checkList() {\r\n        const endpoint = `/api/${window.sessionStorage.getItem(\"apikey\")}/active/list`\r\n        const promise = apiCall(endpoint,'get')\r\n        promise.then(blob => blob.json()).then(json => {\r\n          this.setState({\r\n            activeTickers: json.symbols\r\n          })\r\n        })\r\n      }\r\n\r\n    getQuotes (symbols) {\r\n        const activeTickers = symbols.join()\r\n        const endpoint = `/api/list/${activeTickers}/quote`\r\n        const promise = apiCall(endpoint,'get')\r\n        promise.then(blob => blob.json()).then (json=> {\r\n          this.setState({\r\n            activeQuotes: json.quotes\r\n          })\r\n        })\r\n    }\r\n\r\n    addSymbol(symbol) {\r\n        console.log(\"function addsymbol\", symbol)\r\n        const endpoint = `/api/${window.sessionStorage.getItem(\"apikey\")}/active/add/${symbol}`\r\n        const promise = apiCall(endpoint,'get')\r\n        promise.then(blob => blob.json()).then(json => {\r\n          if (json.error.length > 0) {\r\n            alert(json.error)\r\n          } else {\r\n            this.setState({activeTickers: json.symbols})\r\n          }\r\n        })\r\n      }\r\n\r\n      delSymbol=(symbol) =>{\r\n        const endpoint = `/api/${window.sessionStorage.getItem(\"apikey\")}/active/delete/${symbol}`\r\n        const promise = apiCall(endpoint,'get')\r\n        promise.then(blob => blob.json()).then(json => {\r\n        this.setState({activeTickers: json.symbols})\r\n          })\r\n      }\r\n    /*\r\n    componentDidUpdate(prevState) {\r\n        if(this.state.activeTickers && this.state.activeTickers.length>0){\r\n          if(!this.state.activeQuotes || this.state.activeQuotes.length===0) {\r\n            this.getQuotes(this.state.activeTickers)\r\n          }\r\n        } \r\n      }\r\n    */\r\n   componentDidMount() {\r\n     if(this.state.activeTickers && this.state.activeTickers.length>0) {\r\n      this.getQuotes(this.state.activeTickers)\r\n     }\r\n   }\r\n    render() {\r\n      console.log(\"----------------\", this.state.activeTickers)\r\n      console.log(\"++++++++++++++\", this.state.activeQuotes)\r\n          let output = (<Fragment></Fragment>)\r\n          if(this.state.activeQuotes) {\r\n            output=(\r\n            <QuoteSheet\r\n            addSymbol={this.addSymbol}\r\n            delSymbol={this.delSymbol} \r\n            activeTickers={this.state.activeTickers}\r\n            activeQuotes={this.state.activeQuotes}\r\n            setChartsTicker={this.props.setChartsTicker}\r\n          />\r\n            )\r\n          }\r\n        return (\r\n            <div>\r\n                {output}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}