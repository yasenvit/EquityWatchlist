{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/yavit/OneDrive/Desktop/finProject/proreplica/proreplica_react/src/components/QuoteGrid.js\";\nimport React, { Component, Fragment } from 'react';\nimport apiCall from '../util/apiCall';\nimport '../styles/style.css';\nimport '../styles/quoteBlock.css';\nimport Quotes from '../quoteGrid/Quotes';\nimport Gainers from '../quoteGrid/Gainers';\nimport Mostactive from '../quoteGrid/Mostactive';\nimport Losers from '../quoteGrid/Losers';\nimport Positions from '../portfolioGrid/Positions';\nimport Trades from '../portfolioGrid/Trades';\nimport Account from '../portfolioGrid/Account';\nimport SelectBox from '../features/select-box/Tags';\nimport SelectList from '../features/select-box/ListTen';\nexport default class QuoteGrid extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedItem: \"Account\",\n      selectedPage: \"US Equities\",\n      selectedList: \"In Focus\",\n      activeTickers: []\n    };\n\n    this.selectList = list => {\n      this.setState({\n        selectedList: list.value\n      });\n    };\n\n    this.selectItem = item => {\n      this.setState({\n        selectedItem: item.value\n      });\n    };\n\n    this.selectPage = page => {\n      this.setState({\n        selectedPage: page\n      });\n    };\n\n    this.delSymbol = symbol => {\n      console.log(\"deleting\", symbol);\n      const endpoint = \"/api/active/delete/\".concat(symbol);\n      const promise = apiCall(endpoint, 'get');\n      promise.then(blob => blob.json()).then(json => {\n        this.setState({\n          activeTickers: json.symbols\n        });\n      });\n    };\n  }\n\n  /**************************************************************************/\n  addSymbol(symbol) {\n    const endpoint = \"/api/active/add/\".concat(symbol);\n    const promise = apiCall(endpoint, 'get');\n    promise.then(blob => blob.json()).then(json => {\n      if (json.error.length > 0) {\n        alert(json.error);\n      } else {\n        this.setState({\n          activeTickers: json.symbols\n        });\n      }\n    });\n  }\n\n  /***********************************************************************/\n  checkList() {\n    const endpoint = \"/api/active/list\";\n    const promise = apiCall(endpoint, 'get');\n    promise.then(blob => blob.json()).then(json => {\n      this.setState({\n        activeTickers: json.symbols\n      });\n    });\n  }\n\n  componentWillMount() {\n    this.checkList();\n  }\n  /************************************************************************/\n\n\n  render() {\n    console.log(\"QuoteGrid render-------------\", this.state.selectedPage);\n    let outpTable = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    });\n\n    if (this.state.selectedPage === \"US Equities\") {\n      if (this.state.selectedList === \"In Focus\") {\n        outpTable = React.createElement(Quotes, {\n          setChartsTicker: this.props.setChartsTicker,\n          activeTickers: this.state.activeTickers,\n          delSymbol: this.delSymbol,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        });\n      } else if (this.state.selectedList === \"Mostactive\") {\n        outpTable = React.createElement(Mostactive, {\n          addSymbol: this.addSymbol,\n          activeTickers: this.state.activeTickers,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        });\n      } else if (this.state.selectedList === \"Gainers\") {\n        outpTable = React.createElement(Gainers, {\n          addSymbol: this.addSymbol,\n          activeTickers: this.state.activeTickers,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        });\n      } else if (this.state.selectedList === \"Losers\") {\n        outpTable = React.createElement(Losers, {\n          addSymbol: this.addSymbol,\n          activeTickers: this.state.activeTickers,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        });\n      }\n    } else if (this.state.selectedPage === \"Portfolio\") {\n      if (this.state.selectItem === \"Account\") {\n        outpTable = React.createElement(Account, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        });\n      } else if (this.state.selectedItem === \"Positions\") {\n        outpTable = React.createElement(Positions, {\n          setChartsTicker: this.props.setChartsTicker,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        });\n      } else if (this.state.selectedItem === \"Trades\") {\n        outpTable = React.createElement(Trades, {\n          setChartsTicker: this.props.setChartsTicker,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        });\n      }\n    }\n    /************************************************/\n\n\n    let addTickerButton = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    });\n    let outputPageOption = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    });\n\n    if (this.state.selectedPage === \"US Equities\") {\n      addTickerButton = React.createElement(\"div\", {\n        className: \"table-header-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"input-adding\",\n        id: \"symbol\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"button-adding\",\n        onClick: event => {\n          this.addSymbol(document.getElementById('symbol').value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"add symbol\"));\n      outputPageOption = React.createElement(SelectList, {\n        lists: [{\n          value: 'In Focus',\n          id: 1\n        }, {\n          value: 'Mostactive',\n          id: 2\n        }, {\n          value: 'Gainers',\n          id: 3\n        }, {\n          value: 'Losers',\n          id: 4\n        }],\n        selectList: this.selectList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      });\n    } else if (this.state.selectedPage === \"Portfolio\") {\n      outputPageOption = React.createElement(SelectBox, {\n        items: [{\n          value: 'Account',\n          id: 1\n        }, {\n          value: 'Positions',\n          id: 2\n        }, {\n          value: 'Trades',\n          id: 3\n        }],\n        selectItem: this.selectItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      });\n    }\n\n    let positionFor = React.createElement(\"div\", {\n      className: \"table-header-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Position for: \"), React.createElement(\"input\", {\n      className: \"input-adding\",\n      id: \"positionfor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"button-adding\",\n      onClick: event => {\n        this.addSymbol(document.getElementById('positionfor').value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"display\"));\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"collar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onClick: () => {\n        this.selectPage(\"US Equities\");\n      },\n      className: this.state.selectedPage === \"US Equities\" ? \"tag-on\" : \"tag-off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Quote Grid\")), React.createElement(\"div\", {\n      onClick: () => {\n        this.selectPage(\"Portfolio\");\n      },\n      className: this.state.selectedPage === \"Portfolio\" ? \"tag-on\" : \"tag-off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Portfolio\")), React.createElement(\"div\", {\n      className: \"tag-ext\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"table-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"table-header-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, addTickerButton), React.createElement(\"div\", {\n      className: \"table-header-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: \"100px\",\n        backgroundColor: \"red\",\n        margin: '0px',\n        position: 'relative'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, outputPageOption)), React.createElement(\"div\", {\n      className: \"table-header-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        margin: '0px',\n        position: 'relative'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"split\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'scroll-box',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, outpTable)));\n  }\n\n}","map":{"version":3,"sources":["/mnt/c/Users/yavit/OneDrive/Desktop/finProject/proreplica/proreplica_react/src/components/QuoteGrid.js"],"names":["React","Component","Fragment","apiCall","Quotes","Gainers","Mostactive","Losers","Positions","Trades","Account","SelectBox","SelectList","QuoteGrid","state","selectedItem","selectedPage","selectedList","activeTickers","selectList","list","setState","value","selectItem","item","selectPage","page","delSymbol","symbol","console","log","endpoint","promise","then","blob","json","symbols","addSymbol","error","length","alert","checkList","componentWillMount","render","outpTable","props","setChartsTicker","addTickerButton","outputPageOption","event","document","getElementById","id","positionFor","width","backgroundColor","margin","position"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport apiCall from '../util/apiCall';\r\nimport '../styles/style.css';\r\nimport '../styles/quoteBlock.css';\r\nimport Quotes from '../quoteGrid/Quotes'\r\nimport Gainers from '../quoteGrid/Gainers'\r\nimport Mostactive from '../quoteGrid/Mostactive'\r\nimport Losers from '../quoteGrid/Losers'\r\nimport Positions from '../portfolioGrid/Positions'\r\nimport Trades from '../portfolioGrid/Trades'\r\nimport Account from '../portfolioGrid/Account'\r\nimport SelectBox from '../features/select-box/Tags'\r\nimport SelectList from '../features/select-box/ListTen'\r\n\r\nexport default class QuoteGrid extends Component {\r\n  state = {\r\n    selectedItem: \"Account\",\r\n    selectedPage: \"US Equities\",\r\n    selectedList: \"In Focus\",\r\n    activeTickers: []\r\n  }\r\n\r\n  selectList = (list) => {\r\n    this.setState({\r\n      selectedList: list.value,\r\n    })\r\n  }\r\n  selectItem = (item) => {\r\n    this.setState({\r\n      selectedItem: item.value,\r\n    })\r\n  }\r\n  selectPage = (page) => {\r\n    this.setState({\r\n      selectedPage: page\r\n    })\r\n  }\r\n  /**************************************************************************/\r\n  addSymbol(symbol) {\r\n    const endpoint = `/api/active/add/${symbol}`\r\n    const promise = apiCall(endpoint,'get')\r\n    promise.then(blob => blob.json()).then(json => {\r\n      if (json.error.length > 0) {\r\n        alert(json.error)\r\n      } else {\r\n        this.setState({activeTickers: json.symbols})\r\n      }\r\n    })\r\n  }\r\n  delSymbol = (symbol) => {\r\n    console.log(\"deleting\",symbol)\r\n    const endpoint = `/api/active/delete/${symbol}`\r\n    const promise = apiCall(endpoint,'get')\r\n    promise.then(blob => blob.json()).then(json => {\r\n    this.setState({activeTickers: json.symbols})\r\n      })\r\n  }\r\n  /***********************************************************************/\r\n  checkList() {\r\n    const endpoint = `/api/active/list`\r\n    const promise = apiCall(endpoint,'get')\r\n    promise.then(blob => blob.json()).then(json => {\r\n      this.setState({\r\n        activeTickers: json.symbols\r\n      })\r\n    })\r\n  }\r\n  componentWillMount() {\r\n    this.checkList();\r\n  }\r\n/************************************************************************/\r\n\r\n  render() {\r\n  console.log(\"QuoteGrid render-------------\", this.state.selectedPage)\r\n  let outpTable = (<div></div>)\r\n  if(this.state.selectedPage === \"US Equities\") {\r\n    if(this.state.selectedList === \"In Focus\") {\r\n      outpTable = (\r\n        <Quotes\r\n          setChartsTicker={this.props.setChartsTicker}\r\n          activeTickers = {this.state.activeTickers}\r\n          delSymbol = {this.delSymbol}\r\n        />\r\n      )\r\n    } else if(this.state.selectedList === \"Mostactive\") {\r\n      outpTable = (\r\n        <Mostactive addSymbol = {this.addSymbol} activeTickers = {this.state.activeTickers}/>\r\n      )\r\n    } else if (this.state.selectedList === \"Gainers\") {\r\n      outpTable = (\r\n        <Gainers addSymbol = {this.addSymbol} activeTickers = {this.state.activeTickers}/>\r\n      )\r\n    } else if (this.state.selectedList === \"Losers\") {\r\n      outpTable = (\r\n        <Losers addSymbol = {this.addSymbol} activeTickers = {this.state.activeTickers}/>\r\n      )\r\n    }\r\n  } else if(this.state.selectedPage === \"Portfolio\") {\r\n    if(this.state.selectItem === \"Account\") {\r\n      outpTable = (\r\n        <Account/>\r\n      )\r\n    } else if(this.state.selectedItem === \"Positions\") {\r\n      outpTable = (\r\n        <Positions setChartsTicker={this.props.setChartsTicker}/>\r\n      )\r\n    } else if(this.state.selectedItem === \"Trades\") {\r\n      outpTable = (\r\n        <Trades setChartsTicker={this.props.setChartsTicker}/>\r\n      )\r\n    }\r\n  }\r\n/************************************************/  \r\n  let addTickerButton = (<div></div>)\r\n  let outputPageOption = (<div></div>)\r\n  if(this.state.selectedPage === \"US Equities\"){\r\n    addTickerButton = (\r\n      <div className=\"table-header-left\">\r\n        <input className=\"input-adding\"id=\"symbol\"></input>\r\n          <button className = \"button-adding\" onClick={(event)=>{\r\n            this.addSymbol(document.getElementById('symbol').value)                      \r\n        }}>add symbol</button>\r\n      </div>\r\n    )\r\n    outputPageOption = ( \r\n              <SelectList\r\n                lists={[\r\n                  { value:'In Focus', id: 1 },\r\n                  { value:'Mostactive', id: 2 },\r\n                  { value:'Gainers', id: 3 },\r\n                  { value:'Losers', id: 4 },\r\n                ]}\r\n                selectList={this.selectList}\r\n              />\r\n    )\r\n     \r\n    } else if(this.state.selectedPage === \"Portfolio\"){\r\n    \r\n    outputPageOption = (\r\n              <SelectBox\r\n                items={[\r\n                  { value: 'Account', id: 1 },\r\n                  { value: 'Positions', id: 2 },\r\n                  { value: 'Trades', id: 3 },\r\n                ]}\r\n                selectItem={this.selectItem}\r\n              />\r\n  )\r\n  }\r\n\r\n  \r\n   let positionFor = (\r\n    <div className=\"table-header-left\">\r\n        <div>Position for: </div>\r\n        <input className=\"input-adding\"id=\"positionfor\"></input>\r\n          <button className = \"button-adding\" onClick={(event)=>{\r\n            this.addSymbol(document.getElementById('positionfor').value)                      \r\n        }}>display</button>\r\n    </div>\r\n  )\r\n    return (\r\n      <Fragment>\r\n        <div className=\"collar\">\r\n                <div onClick={()=>{this.selectPage(\"US Equities\")}} className={this.state.selectedPage===\"US Equities\"?\"tag-on\":\"tag-off\"}><p>Quote Grid</p></div>\r\n                <div onClick={()=>{this.selectPage(\"Portfolio\")}} className={this.state.selectedPage===\"Portfolio\"?\"tag-on\":\"tag-off\"}><p>Portfolio</p></div>\r\n                <div className=\"tag-ext\"></div>\r\n              </div>\r\n          <div className=\"table-header\">\r\n          <div className=\"table-header-left\">\r\n            {addTickerButton}\r\n          </div>\r\n            <div className=\"table-header-center\" >\r\n             <div style={{width: \"100px\",backgroundColor:\"red\",margin: '0px', position: 'relative'}}>\r\n             {outputPageOption}\r\n            </div>\r\n          </div>\r\n        \r\n          <div className=\"table-header-right\">\r\n            <div style={{margin: '0px', position: 'relative'}}>\r\n              \r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"split\">\r\n          <div className={'scroll-box'}>\r\n            {outpTable}\r\n          </div>\r\n        </div>\r\n      </Fragment>    \r\n    )\r\n  }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}