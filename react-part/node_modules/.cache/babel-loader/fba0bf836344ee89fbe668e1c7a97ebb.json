{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/yavit/OneDrive/Desktop/EquityEcho/WatchlistFundamentals/react-part/src/components/Ticker/AreaChart.js\";\nimport React, { Component, Fragment } from 'react';\nimport ReactApexChart from 'react-apexcharts';\n\nclass AreaChart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ticker: null,\n      chart: null,\n      options: {\n        chart: {\n          zoom: {\n            enabled: false\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'straight'\n        },\n        series: [{\n          name: \"STOCK ABC\",\n          data: \"no-data\" // need to adjust\n\n        }],\n        title: {\n          text: 'Fundamental Analysis of Stocks',\n          align: 'left'\n        },\n        subtitle: {\n          text: 'Price Movements',\n          align: 'left'\n        },\n        labels: \"no-label\",\n        xaxis: {\n          type: 'datetime'\n        },\n        yaxis: {\n          opposite: true\n        },\n        legend: {\n          horizontalAlign: 'left'\n        }\n      }\n    };\n\n    this.setChartFromIEXResponse = json => {\n      this.setState({\n        options: {\n          'series': [{\n            'name': this.state.ticker,\n            'data': json.map(entry => entry.close)\n          }],\n          'xaxis': {\n            'categories': json.map(entry => entry.date)\n          }\n        },\n        'series': [{\n          'name': this.state.ticker,\n          'data': json.map(entry => entry.close)\n        }]\n      });\n    };\n\n    this.lookUp = ticker => {\n      const promise = fetch(\"https://cloud.iexapis.com/stable/stock/\".concat(ticker, \"/chart/1m?token=\").concat(process.env.REACT_APP_API_PUBLISH));\n      promise.then(blob => blob.json()).then(json => {\n        console.log(json);\n        this.setChartFromIEXResponse(json);\n      });\n    };\n  }\n\n  render() {\n    console.log(this.props.lookupTicker);\n    let chart = [];\n\n    if (this.state.ticker !== null) {\n      chart = React.createElement(ReactApexChart, {\n        options: this.state.options,\n        series: this.state.series,\n        type: \"area\",\n        height: \"350\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"ticker\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"ticker\"), React.createElement(\"input\", {\n      name: \"ticker\",\n      value: this.state.ticker,\n      onChange: event => {\n        this.setState({\n          ticker: event.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: event => {\n        event.preventDefault();\n        this.lookUp(this.state.ticker);\n        console.log(this.state.ticker);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Look Up\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, chart));\n  }\n\n}\n\nexport default AreaChart;","map":{"version":3,"sources":["/mnt/c/Users/yavit/OneDrive/Desktop/EquityEcho/WatchlistFundamentals/react-part/src/components/Ticker/AreaChart.js"],"names":["React","Component","Fragment","ReactApexChart","AreaChart","state","ticker","chart","options","zoom","enabled","dataLabels","stroke","curve","series","name","data","title","text","align","subtitle","labels","xaxis","type","yaxis","opposite","legend","horizontalAlign","setChartFromIEXResponse","json","setState","map","entry","close","date","lookUp","promise","fetch","process","env","REACT_APP_API_PUBLISH","then","blob","console","log","render","props","lookupTicker","event","target","value","preventDefault"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\n\r\nclass AreaChart extends Component {\r\n  state = {\r\n    ticker: null,\r\n    chart: null,\r\n    options: {\r\n      chart: {\r\n        zoom: {\r\n          enabled: false\r\n        }\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      stroke: {\r\n        curve: 'straight'\r\n      },\r\n      series: [{\r\n        name: \"STOCK ABC\",\r\n        data: \"no-data\" // need to adjust\r\n      }],\r\n      title: {\r\n        text: 'Fundamental Analysis of Stocks',\r\n        align: 'left'\r\n      },\r\n      subtitle: {\r\n        text: 'Price Movements',\r\n        align: 'left'\r\n      },\r\n      labels: \"no-label\",\r\n      xaxis: {\r\n        type: 'datetime',\r\n      },\r\n      yaxis: {\r\n        opposite: true\r\n      },\r\n      legend: {\r\n        horizontalAlign: 'left'\r\n      }\r\n    },\r\n  }\r\n\r\n  setChartFromIEXResponse = (json) => {\r\n    this.setState(\r\n      {\r\n          options: {\r\n            'series': [{\r\n              'name': this.state.ticker,\r\n              'data': json.map(entry=>entry.close)\r\n            }],\r\n                        \r\n            'xaxis': {'categories': json.map(entry=>entry.date)}\r\n          },\r\n          'series': [{\r\n            'name': this.state.ticker,\r\n            'data': json.map(entry=>entry.close)\r\n          }]\r\n        \r\n      }\r\n    )\r\n  }\r\n/*\r\n  componentDidMount() {\r\n    console.log(\"apexchart did mount function\")\r\n    this.lookUp(this.props.lookupTicker)   \r\n  }*/\r\n\r\n  lookUp = (ticker) => {\r\n    \r\n    const promise = fetch(`https://cloud.iexapis.com/stable/stock/${ticker}/chart/1m?token=${process.env.REACT_APP_API_PUBLISH}`)\r\n    promise.then(blob=>blob.json()).then(json=>{\r\n      console.log(json)\r\n      this.setChartFromIEXResponse(json)\r\n    })\r\n  }\r\n\r\n  render() {\r\n  console.log(this.props.lookupTicker)\r\n\r\n\r\n    let chart = [];\r\n    if (this.state.ticker !== null) {\r\n      chart = (<ReactApexChart options={this.state.options}\r\n                      series={this.state.series}\r\n                      type=\"area\" height=\"350\"\r\n                />);\r\n    }\r\n    return <Fragment>\r\n\r\n      <form>\r\n        <label htmlFor='ticker'>ticker</label>\r\n        <input name='ticker' value={this.state.ticker} onChange={(event)=>{\r\n          this.setState({ticker: event.target.value})\r\n        }}/>\r\n        <br />\r\n        <button onClick={(event)=>{\r\n          event.preventDefault()\r\n          this.lookUp(this.state.ticker)\r\n          console.log(this.state.ticker)\r\n          \r\n        }}>Look Up</button>\r\n      </form>\r\n      <div>\r\n      {chart}\r\n      </div>\r\n     \r\n    </Fragment>\r\n  }\r\n}\r\n\r\nexport default AreaChart;\r\n"]},"metadata":{},"sourceType":"module"}