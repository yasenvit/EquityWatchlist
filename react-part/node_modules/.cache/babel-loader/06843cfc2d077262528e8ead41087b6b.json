{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/yavit/OneDrive/Desktop/EquityEcho/WatchlistFundamentals/react-part/src/components/Ticker/AreaChart.js\";\nimport React, { Component, Fragment } from 'react';\nimport ReactApexChart from 'react-apexcharts';\nimport '../../styles/style.css';\nimport apiCall from '../../util/apiCall';\nimport DateRange from '../../util/DateRange'; // const hdata = [{\"date\":\"2019-06-19\",\"open\":199.68,\"close\":197.87,\"high\":199.88,\"low\":197.31,\"volume\":21124235,\"uOpen\":199.68,\"uClose\":197.87,\"uHigh\":199.88,\"uLow\":197.31,\"uVolume\":21124235,\"change\":0,\"changePercent\":0,\"label\":\"Jun 19\",\"changeOverTime\":0},{\"date\":\"2019-06-20\",\"open\":200.37,\"close\":199.46,\"high\":200.61,\"low\":198.03,\"volume\":21513988,\"uOpen\":200.37,\"uClose\":199.46,\"uHigh\":200.61,\"uLow\":198.03,\"uVolume\":21513988,\"change\":1.59,\"changePercent\":0.8036,\"label\":\"Jun 20\",\"changeOverTime\":0.008036},{\"date\":\"2019-06-21\",\"open\":198.8,\"close\":198.78,\"high\":200.85,\"low\":198.15,\"volume\":47800589,\"uOpen\":198.8,\"uClose\":198.78,\"uHigh\":200.85,\"uLow\":198.15,\"uVolume\":47800589,\"change\":-0.68,\"changePercent\":-0.3409,\"label\":\"Jun 21\",\"changeOverTime\":0.004599},{\"date\":\"2019-06-24\",\"open\":198.54,\"close\":198.58,\"high\":200.16,\"low\":198.17,\"volume\":18220421,\"uOpen\":198.54,\"uClose\":198.58,\"uHigh\":200.16,\"uLow\":198.17,\"uVolume\":18220421,\"change\":-0.2,\"changePercent\":-0.1006,\"label\":\"Jun 24\",\"changeOverTime\":0.003588},{\"date\":\"2019-06-25\",\"open\":198.43,\"close\":195.57,\"high\":199.26,\"low\":195.29,\"volume\":21070334,\"uOpen\":198.43,\"uClose\":195.57,\"uHigh\":199.26,\"uLow\":195.29,\"uVolume\":21070334,\"change\":-3.01,\"changePercent\":-1.5158,\"label\":\"Jun 25\",\"changeOverTime\":-0.011624},{\"date\":\"2019-06-26\",\"open\":197.77,\"close\":199.8,\"high\":200.99,\"low\":197.35,\"volume\":26067512,\"uOpen\":197.77,\"uClose\":199.8,\"uHigh\":200.99,\"uLow\":197.35,\"uVolume\":26067512,\"change\":4.23,\"changePercent\":2.1629,\"label\":\"Jun 26\",\"changeOverTime\":0.009754},{\"date\":\"2019-06-27\",\"open\":200.29,\"close\":199.74,\"high\":201.57,\"low\":199.57,\"volume\":20899717,\"uOpen\":200.29,\"uClose\":199.74,\"uHigh\":201.57,\"uLow\":199.57,\"uVolume\":20899717,\"change\":-0.06,\"changePercent\":-0.03,\"label\":\"Jun 27\",\"changeOverTime\":0.009451},{\"date\":\"2019-06-28\",\"open\":198.68,\"close\":197.92,\"high\":199.49,\"low\":197.05,\"volume\":31110642,\"uOpen\":198.68,\"uClose\":197.92,\"uHigh\":199.49,\"uLow\":197.05,\"uVolume\":31110642,\"change\":-1.82,\"changePercent\":-0.9112,\"label\":\"Jun 28\",\"changeOverTime\":0.000253},{\"date\":\"2019-07-01\",\"open\":203.17,\"close\":201.55,\"high\":204.49,\"low\":200.65,\"volume\":27316739,\"uOpen\":203.17,\"uClose\":201.55,\"uHigh\":204.49,\"uLow\":200.65,\"uVolume\":27316739,\"change\":3.63,\"changePercent\":1.8341,\"label\":\"Jul 1\",\"changeOverTime\":0.018598},{\"date\":\"2019-07-02\",\"open\":201.41,\"close\":202.73,\"high\":203.13,\"low\":201.36,\"volume\":16935217,\"uOpen\":201.41,\"uClose\":202.73,\"uHigh\":203.13,\"uLow\":201.36,\"uVolume\":16935217,\"change\":1.18,\"changePercent\":0.5855,\"label\":\"Jul 2\",\"changeOverTime\":0.024562},{\"date\":\"2019-07-03\",\"open\":203.28,\"close\":204.41,\"high\":204.44,\"low\":202.69,\"volume\":11362045,\"uOpen\":203.28,\"uClose\":204.41,\"uHigh\":204.44,\"uLow\":202.69,\"uVolume\":11362045,\"change\":1.68,\"changePercent\":0.8287,\"label\":\"Jul 3\",\"changeOverTime\":0.033052},{\"date\":\"2019-07-05\",\"open\":203.35,\"close\":204.23,\"high\":205.08,\"low\":202.9,\"volume\":17265518,\"uOpen\":203.35,\"uClose\":204.23,\"uHigh\":205.08,\"uLow\":202.9,\"uVolume\":17265518,\"change\":-0.18,\"changePercent\":-0.0881,\"label\":\"Jul 5\",\"changeOverTime\":0.032142},{\"date\":\"2019-07-08\",\"open\":200.81,\"close\":200.02,\"high\":201.4,\"low\":198.41,\"volume\":25338628,\"uOpen\":200.81,\"uClose\":200.02,\"uHigh\":201.4,\"uLow\":198.41,\"uVolume\":25338628,\"change\":-4.21,\"changePercent\":-2.0614,\"label\":\"Jul 8\",\"changeOverTime\":0.010866},{\"date\":\"2019-07-09\",\"open\":199.2,\"close\":201.24,\"high\":201.51,\"low\":198.81,\"volume\":20578015,\"uOpen\":199.2,\"uClose\":201.24,\"uHigh\":201.51,\"uLow\":198.81,\"uVolume\":20578015,\"change\":1.22,\"changePercent\":0.6099,\"label\":\"Jul 9\",\"changeOverTime\":0.017031},{\"date\":\"2019-07-10\",\"open\":201.85,\"close\":203.23,\"high\":203.73,\"low\":201.56,\"volume\":17897138,\"uOpen\":201.85,\"uClose\":203.23,\"uHigh\":203.73,\"uLow\":201.56,\"uVolume\":17897138,\"change\":1.99,\"changePercent\":0.9889,\"label\":\"Jul 10\",\"changeOverTime\":0.027088},{\"date\":\"2019-07-11\",\"open\":203.31,\"close\":201.75,\"high\":204.39,\"low\":201.71,\"volume\":20191842,\"uOpen\":203.31,\"uClose\":201.75,\"uHigh\":204.39,\"uLow\":201.71,\"uVolume\":20191842,\"change\":-1.48,\"changePercent\":-0.7282,\"label\":\"Jul 11\",\"changeOverTime\":0.019609},{\"date\":\"2019-07-12\",\"open\":202.45,\"close\":203.3,\"high\":204,\"low\":202.2,\"volume\":17595212,\"uOpen\":202.45,\"uClose\":203.3,\"uHigh\":204,\"uLow\":202.2,\"uVolume\":17595212,\"change\":1.55,\"changePercent\":0.7683,\"label\":\"Jul 12\",\"changeOverTime\":0.027442},{\"date\":\"2019-07-15\",\"open\":204.09,\"close\":205.21,\"high\":205.87,\"low\":204,\"volume\":16947420,\"uOpen\":204.09,\"uClose\":205.21,\"uHigh\":205.87,\"uLow\":204,\"uVolume\":16947420,\"change\":1.91,\"changePercent\":0.9395,\"label\":\"Jul 15\",\"changeOverTime\":0.037095},{\"date\":\"2019-07-16\",\"open\":204.59,\"close\":204.5,\"high\":206.11,\"low\":203.5,\"volume\":16866816,\"uOpen\":204.59,\"uClose\":204.5,\"uHigh\":206.11,\"uLow\":203.5,\"uVolume\":16866816,\"change\":-0.71,\"changePercent\":-0.346,\"label\":\"Jul 16\",\"changeOverTime\":0.033507},{\"date\":\"2019-07-17\",\"open\":204.05,\"close\":203.35,\"high\":205.09,\"low\":203.27,\"volume\":14107450,\"uOpen\":204.05,\"uClose\":203.35,\"uHigh\":205.09,\"uLow\":203.27,\"uVolume\":14107450,\"change\":-1.15,\"changePercent\":-0.5623,\"label\":\"Jul 17\",\"changeOverTime\":0.027695},{\"date\":\"2019-07-18\",\"open\":204,\"close\":205.66,\"high\":205.88,\"low\":203.7,\"volume\":18582161,\"uOpen\":204,\"uClose\":205.66,\"uHigh\":205.88,\"uLow\":203.7,\"uVolume\":18582161,\"change\":2.31,\"changePercent\":1.136,\"label\":\"Jul 18\",\"changeOverTime\":0.039369}]\n\nclass AreaChart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setChartData = json => {\n      const chartData = [];\n      json.map((data, index) => chartData.push([data[0], data[1]]));\n      this.setState({\n        series: [{\n          data: chartData,\n          name: this.state.tickerToLook\n        }],\n        options: {\n          xaxis: {\n            min: chartData[0][0],\n            max: chartData.slice(-1).pop()[0]\n          }\n        }\n      });\n    };\n\n    this.getRangeData = (ticker, from, to) => {\n      if (ticker && from && to) {\n        let fromdate = from.toISOString().substring(0, 10).replace(/-/g, \"\");\n        let todate = to.toISOString().substring(0, 10).replace(/-/g, \"\");\n        console.log(\"from-\", fromdate, \" todate-\", todate);\n        const endpoint = \"/api/chart/\".concat(ticker, \"/range/\").concat(fromdate, \"/\").concat(todate);\n        const promise = apiCall(endpoint, 'get');\n        promise.then(blob => blob.json()).then(json => {\n          console.log(\"JSON==>\", json.data);\n\n          if (json.error.length > 0) {\n            alert(json.error);\n          } else {\n            this.setChartData(json.data);\n            this.setState({\n              tickerToLook: ticker\n            });\n          }\n        });\n      }\n    };\n\n    this.pickRangeHandle = (fromdate, todate) => {\n      if (fromdate && todate) {\n        this.getRangeData(this.state.tickerToLook, fromdate, todate);\n      }\n    };\n\n    this.getChartData = (ticker, days) => {\n      if (ticker) {\n        const endpoint = \"/api/chart/\".concat(ticker, \"/\").concat(days);\n        const promise = apiCall(endpoint, 'get');\n        promise.then(blob => blob.json()).then(json => {\n          console.log(\"JSON==>\", json.data);\n\n          if (json.error.length > 0) {\n            alert(json.error);\n          } else {\n            this.setChartData(json.data);\n            this.setState({\n              tickerToLook: ticker\n            });\n          }\n        });\n      }\n    };\n\n    this.state = {\n      tickerToLook: null,\n      selection: '30',\n      options: {\n        dataLabels: {\n          enabled: false\n        },\n        markers: {\n          size: 0,\n          style: 'hollow'\n        },\n        xaxis: {\n          type: 'datetime',\n          min: \"\",\n          tickAmount: 6\n        },\n        tooltip: {\n          x: {\n            format: 'dd MMM yyyy'\n          }\n        },\n        fill: {\n          type: 'gradient',\n          gradient: {\n            shadeIntensity: 1,\n            opacityFrom: 0.7,\n            opacityTo: 0.9,\n            stops: [0, 100]\n          }\n        }\n      },\n      series: [{\n        name: \"\",\n        data: []\n      }]\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      tickerToLook: this.props.tickerToLook\n    });\n    this.getChartData(this.props.tickerToLook, \"30\");\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.tickerToLook !== prevProps.tickerToLook) {\n      this.setState({\n        tickerToLook: this.props.tickerToLook\n      });\n      this.getChartData(this.props.tickerToLook, \"30\");\n    }\n  }\n\n  updateData(timeline) {\n    this.setState({\n      selection: timeline\n    });\n\n    switch (timeline) {\n      case timeline:\n        this.getChartData(this.state.tickerToLook, timeline);\n        break;\n\n      default:\n    }\n  }\n\n  render() {\n    // console.log(\"--------------------------------------------------------------------RENDER=>\")\n    console.log(\"RENDER state Ticker=>\", this.state.tickerToLook);\n    console.log(\"RENDER props Ticker=>\", this.props.tickerToLook);\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(DateRange, {\n      pickRangeHandle: this.pickRangeHandle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.updateData('30'),\n      id: \"1m\",\n      className: this.state.selection === '30' ? 'active' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"1M\"), React.createElement(\"button\", {\n      onClick: () => this.updateData('90'),\n      id: \"3m\",\n      className: this.state.selection === '90' ? 'active' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"3M\"), React.createElement(\"button\", {\n      onClick: () => this.updateData('180'),\n      id: \"6m\",\n      className: this.state.selection === '180' ? 'active' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"6M\"), React.createElement(\"button\", {\n      onClick: () => this.updateData('365'),\n      id: \"1y\",\n      className: this.state.selection === '365' ? 'active' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"1Y\"), React.createElement(\"button\", {\n      onClick: () => this.updateData('ytd'),\n      id: \"ytd\",\n      className: this.state.selection === 'ytd' ? 'active' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"YTD\"), React.createElement(\"button\", {\n      onClick: () => this.updateData('730'),\n      id: \"2y\",\n      className: this.state.selection === '730' ? 'active' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"2Y\"), React.createElement(\"button\", {\n      onClick: () => this.updateData('1825'),\n      id: \"5y\",\n      className: this.state.selection === '1825' ? 'active' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"5Y\")), React.createElement(ReactApexChart, {\n      options: this.state.options,\n      series: this.state.series,\n      type: \"area\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"html-dist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default AreaChart;","map":{"version":3,"sources":["/mnt/c/Users/yavit/OneDrive/Desktop/EquityEcho/WatchlistFundamentals/react-part/src/components/Ticker/AreaChart.js"],"names":["React","Component","Fragment","ReactApexChart","apiCall","DateRange","AreaChart","constructor","props","setChartData","json","chartData","map","data","index","push","setState","series","name","state","tickerToLook","options","xaxis","min","max","slice","pop","getRangeData","ticker","from","to","fromdate","toISOString","substring","replace","todate","console","log","endpoint","promise","then","blob","error","length","alert","pickRangeHandle","getChartData","days","selection","dataLabels","enabled","markers","size","style","type","tickAmount","tooltip","x","format","fill","gradient","shadeIntensity","opacityFrom","opacityTo","stops","componentDidMount","componentDidUpdate","prevProps","updateData","timeline","render"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport '../../styles/style.css';\r\nimport apiCall from '../../util/apiCall';\r\nimport DateRange from '../../util/DateRange'\r\n\r\n// const hdata = [{\"date\":\"2019-06-19\",\"open\":199.68,\"close\":197.87,\"high\":199.88,\"low\":197.31,\"volume\":21124235,\"uOpen\":199.68,\"uClose\":197.87,\"uHigh\":199.88,\"uLow\":197.31,\"uVolume\":21124235,\"change\":0,\"changePercent\":0,\"label\":\"Jun 19\",\"changeOverTime\":0},{\"date\":\"2019-06-20\",\"open\":200.37,\"close\":199.46,\"high\":200.61,\"low\":198.03,\"volume\":21513988,\"uOpen\":200.37,\"uClose\":199.46,\"uHigh\":200.61,\"uLow\":198.03,\"uVolume\":21513988,\"change\":1.59,\"changePercent\":0.8036,\"label\":\"Jun 20\",\"changeOverTime\":0.008036},{\"date\":\"2019-06-21\",\"open\":198.8,\"close\":198.78,\"high\":200.85,\"low\":198.15,\"volume\":47800589,\"uOpen\":198.8,\"uClose\":198.78,\"uHigh\":200.85,\"uLow\":198.15,\"uVolume\":47800589,\"change\":-0.68,\"changePercent\":-0.3409,\"label\":\"Jun 21\",\"changeOverTime\":0.004599},{\"date\":\"2019-06-24\",\"open\":198.54,\"close\":198.58,\"high\":200.16,\"low\":198.17,\"volume\":18220421,\"uOpen\":198.54,\"uClose\":198.58,\"uHigh\":200.16,\"uLow\":198.17,\"uVolume\":18220421,\"change\":-0.2,\"changePercent\":-0.1006,\"label\":\"Jun 24\",\"changeOverTime\":0.003588},{\"date\":\"2019-06-25\",\"open\":198.43,\"close\":195.57,\"high\":199.26,\"low\":195.29,\"volume\":21070334,\"uOpen\":198.43,\"uClose\":195.57,\"uHigh\":199.26,\"uLow\":195.29,\"uVolume\":21070334,\"change\":-3.01,\"changePercent\":-1.5158,\"label\":\"Jun 25\",\"changeOverTime\":-0.011624},{\"date\":\"2019-06-26\",\"open\":197.77,\"close\":199.8,\"high\":200.99,\"low\":197.35,\"volume\":26067512,\"uOpen\":197.77,\"uClose\":199.8,\"uHigh\":200.99,\"uLow\":197.35,\"uVolume\":26067512,\"change\":4.23,\"changePercent\":2.1629,\"label\":\"Jun 26\",\"changeOverTime\":0.009754},{\"date\":\"2019-06-27\",\"open\":200.29,\"close\":199.74,\"high\":201.57,\"low\":199.57,\"volume\":20899717,\"uOpen\":200.29,\"uClose\":199.74,\"uHigh\":201.57,\"uLow\":199.57,\"uVolume\":20899717,\"change\":-0.06,\"changePercent\":-0.03,\"label\":\"Jun 27\",\"changeOverTime\":0.009451},{\"date\":\"2019-06-28\",\"open\":198.68,\"close\":197.92,\"high\":199.49,\"low\":197.05,\"volume\":31110642,\"uOpen\":198.68,\"uClose\":197.92,\"uHigh\":199.49,\"uLow\":197.05,\"uVolume\":31110642,\"change\":-1.82,\"changePercent\":-0.9112,\"label\":\"Jun 28\",\"changeOverTime\":0.000253},{\"date\":\"2019-07-01\",\"open\":203.17,\"close\":201.55,\"high\":204.49,\"low\":200.65,\"volume\":27316739,\"uOpen\":203.17,\"uClose\":201.55,\"uHigh\":204.49,\"uLow\":200.65,\"uVolume\":27316739,\"change\":3.63,\"changePercent\":1.8341,\"label\":\"Jul 1\",\"changeOverTime\":0.018598},{\"date\":\"2019-07-02\",\"open\":201.41,\"close\":202.73,\"high\":203.13,\"low\":201.36,\"volume\":16935217,\"uOpen\":201.41,\"uClose\":202.73,\"uHigh\":203.13,\"uLow\":201.36,\"uVolume\":16935217,\"change\":1.18,\"changePercent\":0.5855,\"label\":\"Jul 2\",\"changeOverTime\":0.024562},{\"date\":\"2019-07-03\",\"open\":203.28,\"close\":204.41,\"high\":204.44,\"low\":202.69,\"volume\":11362045,\"uOpen\":203.28,\"uClose\":204.41,\"uHigh\":204.44,\"uLow\":202.69,\"uVolume\":11362045,\"change\":1.68,\"changePercent\":0.8287,\"label\":\"Jul 3\",\"changeOverTime\":0.033052},{\"date\":\"2019-07-05\",\"open\":203.35,\"close\":204.23,\"high\":205.08,\"low\":202.9,\"volume\":17265518,\"uOpen\":203.35,\"uClose\":204.23,\"uHigh\":205.08,\"uLow\":202.9,\"uVolume\":17265518,\"change\":-0.18,\"changePercent\":-0.0881,\"label\":\"Jul 5\",\"changeOverTime\":0.032142},{\"date\":\"2019-07-08\",\"open\":200.81,\"close\":200.02,\"high\":201.4,\"low\":198.41,\"volume\":25338628,\"uOpen\":200.81,\"uClose\":200.02,\"uHigh\":201.4,\"uLow\":198.41,\"uVolume\":25338628,\"change\":-4.21,\"changePercent\":-2.0614,\"label\":\"Jul 8\",\"changeOverTime\":0.010866},{\"date\":\"2019-07-09\",\"open\":199.2,\"close\":201.24,\"high\":201.51,\"low\":198.81,\"volume\":20578015,\"uOpen\":199.2,\"uClose\":201.24,\"uHigh\":201.51,\"uLow\":198.81,\"uVolume\":20578015,\"change\":1.22,\"changePercent\":0.6099,\"label\":\"Jul 9\",\"changeOverTime\":0.017031},{\"date\":\"2019-07-10\",\"open\":201.85,\"close\":203.23,\"high\":203.73,\"low\":201.56,\"volume\":17897138,\"uOpen\":201.85,\"uClose\":203.23,\"uHigh\":203.73,\"uLow\":201.56,\"uVolume\":17897138,\"change\":1.99,\"changePercent\":0.9889,\"label\":\"Jul 10\",\"changeOverTime\":0.027088},{\"date\":\"2019-07-11\",\"open\":203.31,\"close\":201.75,\"high\":204.39,\"low\":201.71,\"volume\":20191842,\"uOpen\":203.31,\"uClose\":201.75,\"uHigh\":204.39,\"uLow\":201.71,\"uVolume\":20191842,\"change\":-1.48,\"changePercent\":-0.7282,\"label\":\"Jul 11\",\"changeOverTime\":0.019609},{\"date\":\"2019-07-12\",\"open\":202.45,\"close\":203.3,\"high\":204,\"low\":202.2,\"volume\":17595212,\"uOpen\":202.45,\"uClose\":203.3,\"uHigh\":204,\"uLow\":202.2,\"uVolume\":17595212,\"change\":1.55,\"changePercent\":0.7683,\"label\":\"Jul 12\",\"changeOverTime\":0.027442},{\"date\":\"2019-07-15\",\"open\":204.09,\"close\":205.21,\"high\":205.87,\"low\":204,\"volume\":16947420,\"uOpen\":204.09,\"uClose\":205.21,\"uHigh\":205.87,\"uLow\":204,\"uVolume\":16947420,\"change\":1.91,\"changePercent\":0.9395,\"label\":\"Jul 15\",\"changeOverTime\":0.037095},{\"date\":\"2019-07-16\",\"open\":204.59,\"close\":204.5,\"high\":206.11,\"low\":203.5,\"volume\":16866816,\"uOpen\":204.59,\"uClose\":204.5,\"uHigh\":206.11,\"uLow\":203.5,\"uVolume\":16866816,\"change\":-0.71,\"changePercent\":-0.346,\"label\":\"Jul 16\",\"changeOverTime\":0.033507},{\"date\":\"2019-07-17\",\"open\":204.05,\"close\":203.35,\"high\":205.09,\"low\":203.27,\"volume\":14107450,\"uOpen\":204.05,\"uClose\":203.35,\"uHigh\":205.09,\"uLow\":203.27,\"uVolume\":14107450,\"change\":-1.15,\"changePercent\":-0.5623,\"label\":\"Jul 17\",\"changeOverTime\":0.027695},{\"date\":\"2019-07-18\",\"open\":204,\"close\":205.66,\"high\":205.88,\"low\":203.7,\"volume\":18582161,\"uOpen\":204,\"uClose\":205.66,\"uHigh\":205.88,\"uLow\":203.7,\"uVolume\":18582161,\"change\":2.31,\"changePercent\":1.136,\"label\":\"Jul 18\",\"changeOverTime\":0.039369}]\r\n\r\nclass AreaChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tickerToLook : null,\r\n      selection: '30',\r\n      options: {\r\n\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      markers: {\r\n        size: 0,\r\n        style: 'hollow',\r\n      },\r\n      xaxis: {\r\n        type: 'datetime',\r\n        min: \"\",\r\n        tickAmount: 6,\r\n      },\r\n      tooltip: {\r\n        x: {\r\n          format: 'dd MMM yyyy'\r\n        }\r\n      },\r\n      fill: {\r\n        type: 'gradient',\r\n        gradient: {\r\n          shadeIntensity: 1,\r\n          opacityFrom: 0.7,\r\n          opacityTo: 0.9,\r\n          stops: [0, 100]\r\n        }\r\n      }\r\n      },\r\n      series: [{\r\n        name: \"\",\r\n        data : []\r\n      }],\r\n    }\r\n  }\r\n  \r\n  setChartData = (json) => {\r\n    const chartData = []\r\n    json.map((data, index)=> (\r\n      chartData.push([data[0],data[1]])\r\n    ))\r\n    this.setState({\r\n      series:[{data: chartData, name: this.state.tickerToLook}],\r\n      options: {\r\n        xaxis: {\r\n          min: chartData[0][0],\r\n          max: chartData.slice(-1).pop()[0],\r\n        }\r\n      }\r\n    })\r\n  }\r\n \r\n  getRangeData = (ticker, from, to) => {\r\n    if(ticker && from && to) {\r\n      let fromdate = from.toISOString().substring(0, 10).replace(/-/g,\"\")\r\n      let todate = to.toISOString().substring(0, 10).replace(/-/g,\"\")\r\n      console.log(\"from-\", fromdate, \" todate-\", todate)\r\n    const endpoint = `/api/chart/${ticker}/range/${fromdate}/${todate}`\r\n    const promise = apiCall(endpoint,'get')\r\n    promise.then(blob => blob.json()).then (json=> {\r\n      console.log(\"JSON==>\", json.data)\r\n      if(json.error.length > 0) {\r\n        alert(json.error)\r\n      } else {\r\n        this.setChartData(json.data)\r\n        this.setState({tickerToLook:ticker})\r\n      }\r\n    })\r\n  }}\r\n\r\n  pickRangeHandle = (fromdate,todate) => {\r\n    if(fromdate && todate){\r\n    this.getRangeData(this.state.tickerToLook,fromdate, todate)\r\n  }}\r\n\r\n  getChartData = (ticker, days) => {\r\n    if(ticker) {\r\n    const endpoint = `/api/chart/${ticker}/${days}`\r\n    const promise = apiCall(endpoint,'get')\r\n    promise.then(blob => blob.json()).then (json=> {\r\n      console.log(\"JSON==>\", json.data)\r\n      if(json.error.length > 0) {\r\n        alert(json.error)\r\n      } else {\r\n        this.setChartData(json.data)\r\n        this.setState({tickerToLook:ticker})\r\n      }\r\n    })\r\n  }}\r\n\r\n  componentDidMount(){\r\n    this.setState({tickerToLook:this.props.tickerToLook})\r\n    this.getChartData(this.props.tickerToLook,\"30\")\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n     if(this.props.tickerToLook !== prevProps.tickerToLook){\r\n      this.setState({tickerToLook: this.props.tickerToLook})\r\n      this.getChartData(this.props.tickerToLook,\"30\")\r\n    } \r\n  }\r\n\r\n  updateData (timeline) {\r\n    this.setState({\r\n      selection: timeline\r\n    })\r\n  \r\n  switch (timeline) {\r\n    case timeline:\r\n    this.getChartData(this.state.tickerToLook,timeline)\r\n    break;  \r\n    default:\r\n  }\r\n\r\n  }\r\n  render() {\r\n// console.log(\"--------------------------------------------------------------------RENDER=>\")\r\nconsole.log(\"RENDER state Ticker=>\", this.state.tickerToLook)\r\nconsole.log(\"RENDER props Ticker=>\", this.props.tickerToLook)\r\n\r\nreturn (\r\n      <Fragment>\r\n        <div id=\"chart\">\r\n          <div className=\"toolbar\">\r\n          <DateRange pickRangeHandle = {this.pickRangeHandle}/>\r\n            <button onClick={()=>this.updateData('30')} id=\"1m\" className={ (this.state.selection==='30' ? 'active' : '')}>1M</button>\r\n            <button onClick={()=>this.updateData('90')} id=\"3m\" className={ (this.state.selection==='90' ? 'active' : '')}>3M</button>\r\n            <button onClick={()=>this.updateData('180')} id=\"6m\" className={ (this.state.selection==='180' ? 'active' : '')}>6M</button>\r\n            <button onClick={()=>this.updateData('365')} id=\"1y\" className={ (this.state.selection==='365' ? 'active' : '')}>1Y</button>\r\n            <button onClick={()=>this.updateData('ytd')} id=\"ytd\" className={ (this.state.selection==='ytd' ? 'active' : '')}>YTD</button>\r\n            <button onClick={()=>this.updateData('730')} id=\"2y\" className={ (this.state.selection==='730' ? 'active' : '')}>2Y</button>\r\n            <button onClick={()=>this.updateData('1825')} id=\"5y\" className={ (this.state.selection==='1825' ? 'active' : '')}>5Y</button>\r\n            \r\n          </div>\r\n          \r\n          <ReactApexChart options={this.state.options} series={this.state.series} type=\"area\" height=\"350\" />\r\n        </div>\r\n        <div id=\"html-dist\"> \r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AreaChart;\r\n"]},"metadata":{},"sourceType":"module"}