{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/yavit/OneDrive/Desktop/EquityEcho/WatchlistFundamentals/react-part/src/components/Ticker/AreaChart.js\";\nimport React, { Component, Fragment } from 'react';\nimport ReactApexChart from 'react-apexcharts';\nimport '../../styles/style.css';\nimport apiCall from '../../util/apiCall';\nimport DateRange from '../../util/DateRange';\n\nclass AreaChart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setChartData = json => {\n      const chartData = [];\n      json.map((data, index) => chartData.push([data[0], data[1]]));\n      this.setState({\n        series: [{\n          data: chartData,\n          name: this.state.tickerToLook\n        }],\n        options: {\n          xaxis: {\n            min: chartData[0][0],\n            max: chartData.slice(-1).pop()[0]\n          }\n        }\n      });\n    };\n\n    this.getRangeData = (ticker, from, to) => {\n      if (ticker && from && to) {\n        let fromdate = from.toISOString().substring(0, 10).replace(/-/g, \"\");\n        let todate = to.toISOString().substring(0, 10).replace(/-/g, \"\");\n        console.log(\"getRangeData function=> from-\", fromdate, \" todate-\", todate);\n        const endpoint = \"/api/chart/\".concat(ticker, \"/range/\").concat(fromdate, \"/\").concat(todate);\n        const promise = apiCall(endpoint, 'get');\n        promise.then(blob => blob.json()).then(json => {\n          if (json.error.length > 0) {\n            alert(json.error);\n            this.setState({\n              isActive: false\n            });\n          } else {\n            this.setChartData(json.data);\n          }\n        });\n      }\n    };\n\n    this.pickRangeHandler = (fromdate, todate) => {\n      if (fromdate && todate) {\n        this.getRangeData(this.state.tickerToLook, fromdate, todate);\n        this.setState({\n          fromDate: fromdate,\n          toDate: todate,\n          selection: \"\"\n        });\n      }\n    };\n\n    this.unmountRangeHandler = e => {\n      this.setState({\n        isActive: false\n      });\n    };\n\n    this.getChartData = (ticker, days) => {\n      if (ticker !== undefined && ticker !== null) {\n        const endpoint = \"/api/chart/\".concat(ticker, \"/\").concat(days);\n        const promise = apiCall(endpoint, 'get');\n        promise.then(blob => blob.json()).then(json => {\n          if (json.error.length > 0) {\n            alert(json.error);\n          } else {\n            this.setChartData(json.data);\n            this.setState({\n              tickerToLook: ticker,\n              isActive: true\n            });\n          }\n        });\n      }\n    };\n\n    this.state = {\n      tickerToLook: null,\n      fromDate: null,\n      toDate: null,\n      isActive: true,\n      selection: '30',\n      options: {\n        dataLabels: {\n          enabled: false\n        },\n        markers: {\n          size: 0,\n          style: 'hollow'\n        },\n        xaxis: {\n          type: 'datetime',\n          min: \"\",\n          tickAmount: 6\n        },\n        tooltip: {\n          x: {\n            format: 'dd MMM yyyy'\n          }\n        },\n        fill: {\n          type: 'gradient',\n          gradient: {\n            shadeIntensity: 1,\n            opacityFrom: 0.7,\n            opacityTo: 0.9,\n            stops: [0, 100]\n          }\n        }\n      },\n      series: [{\n        name: \"\",\n        data: []\n      }]\n    };\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      selection: null\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      tickerToLook: this.props.tickerToLook,\n      selection: \"30\",\n      isActive: false\n    });\n\n    if (this.props.tickerToLook) {\n      this.getChartData(this.props.tickerToLook, \"30\");\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.tickerToLook !== prevProps.tickerToLook) {\n      this.setState({\n        tickerToLook: this.props.tickerToLook,\n        selection: \"30\",\n        isActive: false\n      });\n      this.getChartData(this.props.tickerToLook, \"30\");\n    }\n  }\n\n  updateData(timeline) {\n    this.setState({\n      selection: timeline\n    });\n\n    switch (timeline) {\n      case timeline:\n        this.getChartData(this.state.tickerToLook, timeline);\n        break;\n\n      default:\n    }\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(DateRange, {\n      pickRangeHandler: this.pickRangeHandler,\n      isActive: this.state.isActive,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: e => (this.updateData('5'), this.unmountRangeHandler(e)),\n      id: \"5d\",\n      className: this.state.selection === '5' ? 'active' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"5d\"), React.createElement(\"button\", {\n      onClick: e => (this.updateData('30'), this.unmountRangeHandler(e)),\n      id: \"1m\",\n      className: this.state.selection === '30' ? 'active' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"1M\"), React.createElement(\"button\", {\n      onClick: e => (this.updateData('90'), this.unmountRangeHandler(e)),\n      id: \"3m\",\n      className: this.state.selection === '90' ? 'active' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"3M\"), React.createElement(\"button\", {\n      onClick: e => (this.updateData('180'), this.unmountRangeHandler(e)),\n      id: \"6m\",\n      className: this.state.selection === '180' ? 'active' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"6M\"), React.createElement(\"button\", {\n      onClick: e => (this.updateData('ytd'), this.unmountRangeHandler(e)),\n      id: \"ytd\",\n      className: this.state.selection === 'ytd' ? 'active' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"YTD\"), React.createElement(\"button\", {\n      onClick: e => (this.updateData('365'), this.unmountRangeHandler(e)),\n      id: \"1y\",\n      className: this.state.selection === '365' ? 'active' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"1Y\"), React.createElement(\"button\", {\n      onClick: e => (this.updateData('730'), this.unmountRangeHandler(e)),\n      id: \"2y\",\n      className: this.state.selection === '730' ? 'active' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"2Y\"), React.createElement(\"button\", {\n      onClick: e => (this.updateData('1825'), this.unmountRangeHandler(e)),\n      id: \"5y\",\n      className: this.state.selection === '1825' ? 'active' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"5Y\")), React.createElement(ReactApexChart, {\n      options: this.state.options,\n      series: this.state.series,\n      type: \"area\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"html-dist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default AreaChart;","map":{"version":3,"sources":["/mnt/c/Users/yavit/OneDrive/Desktop/EquityEcho/WatchlistFundamentals/react-part/src/components/Ticker/AreaChart.js"],"names":["React","Component","Fragment","ReactApexChart","apiCall","DateRange","AreaChart","constructor","props","setChartData","json","chartData","map","data","index","push","setState","series","name","state","tickerToLook","options","xaxis","min","max","slice","pop","getRangeData","ticker","from","to","fromdate","toISOString","substring","replace","todate","console","log","endpoint","promise","then","blob","error","length","alert","isActive","pickRangeHandler","fromDate","toDate","selection","unmountRangeHandler","e","getChartData","days","undefined","dataLabels","enabled","markers","size","style","type","tickAmount","tooltip","x","format","fill","gradient","shadeIntensity","opacityFrom","opacityTo","stops","componentWillUnmount","componentDidMount","componentDidUpdate","prevProps","updateData","timeline","render"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport '../../styles/style.css';\r\nimport apiCall from '../../util/apiCall';\r\nimport DateRange from '../../util/DateRange'\r\n\r\nclass AreaChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tickerToLook : null,\r\n      fromDate: null,\r\n      toDate: null,\r\n      isActive: true,\r\n      selection: '30',\r\n      options: {\r\n\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      markers: {\r\n        size: 0,\r\n        style: 'hollow',\r\n      },\r\n      xaxis: {\r\n        type: 'datetime',\r\n        min: \"\",\r\n        tickAmount: 6,\r\n      },\r\n      tooltip: {\r\n        x: {\r\n          format: 'dd MMM yyyy'\r\n        }\r\n      },\r\n      fill: {\r\n        type: 'gradient',\r\n        gradient: {\r\n          shadeIntensity: 1,\r\n          opacityFrom: 0.7,\r\n          opacityTo: 0.9,\r\n          stops: [0, 100]\r\n        }\r\n      }\r\n      },\r\n      series: [{\r\n        name: \"\",\r\n        data : []\r\n      }],\r\n    }\r\n  }\r\n  \r\n  setChartData = (json) => {\r\n    const chartData = []\r\n    json.map((data, index)=> (\r\n      chartData.push([data[0],data[1]])\r\n    ))\r\n    this.setState({\r\n      series:[{data: chartData, name: this.state.tickerToLook}],\r\n      options: {\r\n        xaxis: {\r\n          min: chartData[0][0],\r\n          max: chartData.slice(-1).pop()[0],\r\n        }\r\n      }\r\n    })\r\n  }\r\n \r\n  getRangeData = (ticker, from, to) => {\r\n    if(ticker && from && to) {\r\n      let fromdate = from.toISOString().substring(0, 10).replace(/-/g,\"\")\r\n      let todate = to.toISOString().substring(0, 10).replace(/-/g,\"\")\r\n      console.log(\"getRangeData function=> from-\", fromdate, \" todate-\", todate)\r\n    const endpoint = `/api/chart/${ticker}/range/${fromdate}/${todate}`\r\n    const promise = apiCall(endpoint,'get')\r\n    promise.then(blob => blob.json()).then (json=> {\r\n      if(json.error.length > 0) {\r\n        alert(json.error)\r\n        this.setState({isActive: false})\r\n      } else {\r\n        this.setChartData(json.data)\r\n      }\r\n    })\r\n  }}\r\n\r\n  componentWillUnmount(){\r\n    this.setState({selection: null})\r\n  }\r\n\r\n  pickRangeHandler = (fromdate,todate) => {\r\n    if(fromdate && todate){\r\n      this.getRangeData(this.state.tickerToLook,fromdate, todate)\r\n      this.setState({\r\n        fromDate: fromdate,\r\n        toDate: todate,\r\n        selection:\"\"\r\n    })\r\n  }}\r\n\r\n  unmountRangeHandler = (e) => {\r\n    this.setState({isActive: false})\r\n  }\r\n  getChartData = (ticker, days) => {\r\n    if(ticker !== undefined && ticker !== null) {\r\n    const endpoint = `/api/chart/${ticker}/${days}`\r\n    const promise = apiCall(endpoint,'get')\r\n    promise.then(blob => blob.json()).then (json=> {\r\n      if(json.error.length > 0) {\r\n        alert(json.error)\r\n      } else {\r\n        this.setChartData(json.data)\r\n        this.setState({\r\n          tickerToLook:ticker,\r\n          isActive: true\r\n        })\r\n      }\r\n    })\r\n  }}\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      tickerToLook:this.props.tickerToLook,\r\n      selection: \"30\",\r\n      isActive: false\r\n    })\r\n    if(this.props.tickerToLook){\r\n    this.getChartData(this.props.tickerToLook,\"30\")\r\n  }}\r\n\r\n  componentDidUpdate(prevProps) {\r\n     if(this.props.tickerToLook !== prevProps.tickerToLook){\r\n      this.setState({\r\n        tickerToLook: this.props.tickerToLook,\r\n        selection: \"30\",\r\n        isActive: false\r\n      })\r\n      this.getChartData(this.props.tickerToLook,\"30\")\r\n     }\r\n  }\r\n\r\n  updateData (timeline) {\r\n    this.setState({\r\n      selection: timeline\r\n    })\r\n  \r\n  switch (timeline) {\r\n    case timeline:\r\n    this.getChartData(this.state.tickerToLook,timeline)\r\n    break;  \r\n    default:\r\n  }\r\n\r\n  }\r\n  render() {\r\n\r\nreturn (\r\n      <Fragment>\r\n        <div id=\"chart\">\r\n          <div className=\"toolbar\">\r\n          <DateRange pickRangeHandler = {this.pickRangeHandler} isActive={this.state.isActive}/>\r\n            <button onClick={(e)=>(this.updateData('5'), this.unmountRangeHandler(e))} id=\"5d\" className={(this.state.selection==='5' ? 'active' : '')}>5d</button>\r\n            <button onClick={(e)=>(this.updateData('30'), this.unmountRangeHandler(e))} id=\"1m\" className={(this.state.selection==='30' ? 'active' : '')}>1M</button>\r\n            <button onClick={(e)=>(this.updateData('90'), this.unmountRangeHandler(e))} id=\"3m\" className={ (this.state.selection==='90' ? 'active' : '')}>3M</button>\r\n            <button onClick={(e)=>(this.updateData('180'), this.unmountRangeHandler(e))} id=\"6m\" className={ (this.state.selection==='180' ? 'active' : '')}>6M</button>\r\n            <button onClick={(e)=>(this.updateData('ytd'), this.unmountRangeHandler(e))} id=\"ytd\" className={ (this.state.selection==='ytd' ? 'active' : '')}>YTD</button>\r\n            <button onClick={(e)=>(this.updateData('365'), this.unmountRangeHandler(e))} id=\"1y\" className={ (this.state.selection==='365' ? 'active' : '')}>1Y</button>\r\n            <button onClick={(e)=>(this.updateData('730'), this.unmountRangeHandler(e))} id=\"2y\" className={ (this.state.selection==='730' ? 'active' : '')}>2Y</button>\r\n            <button onClick={(e)=>(this.updateData('1825'), this.unmountRangeHandler(e))} id=\"5y\" className={ (this.state.selection==='1825' ? 'active' : '')}>5Y</button>\r\n            \r\n          </div>\r\n          \r\n          <ReactApexChart options={this.state.options} series={this.state.series} type=\"area\" height=\"350\" />\r\n        </div>\r\n        <div id=\"html-dist\"> \r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AreaChart;\r\n"]},"metadata":{},"sourceType":"module"}