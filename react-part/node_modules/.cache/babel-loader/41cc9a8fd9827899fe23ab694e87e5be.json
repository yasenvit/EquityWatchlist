{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/yavit/OneDrive/Desktop/EquityEcho/proreplica/proreplica_react/src/components/Quotes.js\";\nimport React, { Component } from 'react';\nimport apiCall from '../util/apiCall';\nimport Table from './Table';\nexport default class Quotes extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeTickers: [],\n      activeQuotes: []\n    };\n  }\n\n  checkList() {\n    const endpoint = \"/api/active/list\";\n    const promise = apiCall(endpoint, 'get');\n    promise.then(blob => blob.json()).then(json => {\n      this.setState({\n        activeTickers: json.symbols\n      });\n    });\n  }\n\n  getQuotes(symbols) {\n    console.log(\"getQuotes running\");\n    const activeTickers = symbols.join();\n    const endpoint = \"/api/list/\".concat(activeTickers, \"/quote\");\n    const promise = apiCall(endpoint, 'get');\n    promise.then(blob => blob.json()).then(json => {\n      this.setState({\n        activeQuotes: json.quotes\n      });\n    });\n  }\n\n  componentWillMount() {\n    this.checkList();\n    this.getQuotes(this.props.activeTickers);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.activeTickers !== prevProps.activeTickers) {\n      this.setState({\n        activeTickers: this.props.activeTickers\n      });\n      this.getQuotes(this.props.activeTickers);\n    } else if (this.state.activeQuotes === null && this.state.activeTickers || this.state.activeQuotes === undefined && this.state.activeTickers) {\n      this.getQuotes(this.state.activeTickers);\n    }\n  }\n\n  render() {\n    console.log('activeTickers', this.state.activeTickers);\n    console.log('activeQuotes', this.state.activeQuotes);\n    let outp = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    });\n\n    if (this.state.activeQuotes === null || this.state.activeQuotes === undefined) {\n      outp = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      });\n    } else {\n      outp = React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      });\n    }\n\n    let dummydata = [{\n      \"symbol\": \"AAPL\",\n      \"latestPrice\": 201.24,\n      \"marketCap\": 925921339200,\n      \"avgTotalVolume\": 24728097,\n      \"peRatio\": 16.78,\n      \"open\": 199.05,\n      \"close\": 201.24,\n      \"low\": 198.81,\n      \"high\": 201.51,\n      \"week52Low\": 142,\n      \"week52High\": 233.47,\n      \"change\": 1.22,\n      \"changePercent\": 0.0061,\n      \"ytdChange\": 0.272691\n    }, {\n      \"symbol\": \"TSLA\",\n      \"latestPrice\": 199,\n      \"marketCap\": 925921339199,\n      \"avgTotalVolume\": 24728097,\n      \"peRatio\": 16.78,\n      \"open\": 199.05,\n      \"close\": 201.24,\n      \"low\": 198.81,\n      \"high\": 201.51,\n      \"week52Low\": 142,\n      \"week52High\": 233.47,\n      \"change\": 1.22,\n      \"changePercent\": 0.0061,\n      \"ytdChange\": 0.272691\n    }];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Table, {\n      data: dummydata,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/mnt/c/Users/yavit/OneDrive/Desktop/EquityEcho/proreplica/proreplica_react/src/components/Quotes.js"],"names":["React","Component","apiCall","Table","Quotes","state","activeTickers","activeQuotes","checkList","endpoint","promise","then","blob","json","setState","symbols","getQuotes","console","log","join","quotes","componentWillMount","props","componentDidUpdate","prevProps","undefined","render","outp","dummydata"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport apiCall from '../util/apiCall';\r\nimport Table from './Table'\r\n\r\n\r\nexport default class Quotes extends Component {\r\n    state = {\r\n        activeTickers: [],\r\n        activeQuotes: []\r\n    }\r\n\r\n\r\n    checkList() {\r\n        const endpoint = `/api/active/list`\r\n        const promise = apiCall(endpoint,'get')\r\n        promise.then(blob => blob.json()).then(json => {\r\n          this.setState({\r\n            activeTickers: json.symbols\r\n          })\r\n        })\r\n      }\r\n    getQuotes (symbols) {\r\n        console.log(\"getQuotes running\")\r\n        const activeTickers = symbols.join()\r\n        const endpoint = `/api/list/${activeTickers}/quote`\r\n        const promise = apiCall(endpoint,'get')\r\n        promise.then(blob => blob.json()).then (json=> {\r\n          this.setState({\r\n            activeQuotes: json.quotes\r\n          })\r\n        })\r\n    }\r\n    componentWillMount() {\r\n        this.checkList();\r\n        this.getQuotes(this.props.activeTickers);\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.activeTickers !== prevProps.activeTickers) {\r\n          this.setState({activeTickers : this.props.activeTickers})\r\n          this.getQuotes(this.props.activeTickers);\r\n        } else if(this.state.activeQuotes === null && this.state.activeTickers\r\n            || this.state.activeQuotes === undefined && this.state.activeTickers) {\r\n          this.getQuotes(this.state.activeTickers)\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        console.log('activeTickers',this.state.activeTickers)\r\n        console.log('activeQuotes',this.state.activeQuotes)\r\n        let outp = (<div></div>)\r\n        if(this.state.activeQuotes === null || this.state.activeQuotes === undefined) {\r\n          outp = (<div></div>)\r\n        } else {\r\n            outp = (<Table/>)\r\n        }\r\n\r\n        let dummydata = [\r\n            {\r\n            \"symbol\": \"AAPL\",\r\n            \"latestPrice\": 201.24,\r\n            \"marketCap\": 925921339200,\r\n            \"avgTotalVolume\": 24728097,\r\n            \"peRatio\": 16.78,\r\n            \"open\": 199.05,\r\n            \"close\": 201.24,\r\n            \"low\": 198.81,\r\n            \"high\": 201.51,\r\n            \"week52Low\": 142,\r\n            \"week52High\": 233.47,\r\n            \"change\": 1.22,\r\n            \"changePercent\": 0.0061,\r\n            \"ytdChange\": 0.272691\r\n            },\r\n            {\r\n              \"symbol\": \"TSLA\",\r\n              \"latestPrice\": 199,\r\n              \"marketCap\": 925921339199,\r\n              \"avgTotalVolume\": 24728097,\r\n              \"peRatio\": 16.78,\r\n              \"open\": 199.05,\r\n              \"close\": 201.24,\r\n              \"low\": 198.81,\r\n              \"high\": 201.51,\r\n              \"week52Low\": 142,\r\n              \"week52High\": 233.47,\r\n              \"change\": 1.22,\r\n              \"changePercent\": 0.0061,\r\n              \"ytdChange\": 0.272691\r\n              }\r\n          ]\r\n        return (\r\n            <div>\r\n                <Table data={dummydata}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}