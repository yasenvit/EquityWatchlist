{"ast":null,"code":"import _slicedToArray from \"/mnt/c/Users/yavit/OneDrive/Desktop/EquityEcho/WatchlistFundamentals/react-part/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/mnt/c/Users/yavit/OneDrive/Desktop/EquityEcho/WatchlistFundamentals/react-part/src/components/QuoteSheet.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport { Route, Link } from 'react-router-dom';\nimport SelectItem from '../util/SelectItem';\n\nfunction createData(symbol, latestPrice, marketCap, avgTotalVolume, peRatio, open, close, low, high, week52Low, week52High, change, changePercent, ytdChange) {\n  return {\n    symbol,\n    latestPrice,\n    marketCap,\n    avgTotalVolume,\n    peRatio,\n    open,\n    close,\n    low,\n    high,\n    week52Low,\n    week52High,\n    change,\n    changePercent,\n    ytdChange\n  };\n}\n\nconst rows = data => {\n  return data.map((obj, index) => createData(obj.symbol, obj.latestPrice, obj.marketCap, obj.avgTotalVolume, obj.peRatio, obj.open, obj.close, obj.low, obj.high, obj.week52Low, obj.week52High, obj.change, obj.changePercent, obj.ytdChange, index));\n};\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nconst headRows = [{\n  id: 'symbol',\n  numeric: false,\n  disablePadding: false,\n  label: 'symbol'\n}, {\n  id: 'latestPrice',\n  numeric: true,\n  disablePadding: false,\n  label: 'latestPrice'\n}, {\n  id: 'marketCap',\n  numeric: true,\n  disablePadding: false,\n  label: 'marketCap'\n}, {\n  id: 'avgTotalVolume',\n  numeric: true,\n  disablePadding: false,\n  label: 'avgTotalVolume'\n}, {\n  id: 'peRatio',\n  numeric: true,\n  disablePadding: false,\n  label: 'peRatio'\n}, {\n  id: 'open',\n  numeric: true,\n  disablePadding: false,\n  label: 'open'\n}, {\n  id: 'close',\n  numeric: true,\n  disablePadding: false,\n  label: 'close'\n}, {\n  id: 'low',\n  numeric: true,\n  disablePadding: false,\n  label: 'low'\n}, {\n  id: 'high',\n  numeric: true,\n  disablePadding: false,\n  label: 'high'\n}, {\n  id: 'week52Low',\n  numeric: true,\n  disablePadding: false,\n  label: 'week52Low'\n}, {\n  id: 'week52High',\n  numeric: true,\n  disablePadding: false,\n  label: 'week52High'\n}, {\n  id: 'change',\n  numeric: true,\n  disablePadding: false,\n  label: 'change'\n}, {\n  id: 'changePercent',\n  numeric: true,\n  disablePadding: false,\n  label: 'changePercent'\n}, {\n  id: 'ytdChange',\n  numeric: true,\n  disablePadding: false,\n  label: 'ytdChange'\n}];\n/******************************************************************************************************/\n\nfunction EnhancedTableHead(props) {\n  const onSelectAllClick = props.onSelectAllClick,\n        order = props.order,\n        orderBy = props.orderBy,\n        numSelected = props.numSelected,\n        rowCount = props.rowCount,\n        onRequestSort = props.onRequestSort;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    padding: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    indeterminate: numSelected > 0 && numSelected < rowCount,\n    checked: numSelected === rowCount,\n    onChange: onSelectAllClick,\n    inputProps: {\n      'aria-label': 'Select ticker'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })), headRows.map(row => React.createElement(TableCell, {\n    key: row.id,\n    align: row.numeric ? 'right' : 'left',\n    padding: row.disablePadding ? 'none' : 'default',\n    sortDirection: orderBy === row.id ? order : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(TableSortLabel, {\n    active: orderBy === row.id,\n    direction: order,\n    onClick: createSortHandler(row.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, row.label)))));\n}\n/**********************************************************************************************************/\n\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight: theme.palette.type === 'light' ? {\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.secondary.dark\n  },\n  spacer: {\n    flex: '1 1 100%'\n  },\n  actions: {\n    color: theme.palette.text.secondary\n  },\n  title: {\n    flex: '0 0 auto'\n  }\n}));\n\nconst onClickChartHandler = symbol => {\n  return console.log(\"hello chart\", symbol);\n};\n/*************************************************************************************************/\n\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const numSelected = props.numSelected,\n        selected = props.selected,\n        delSymbol = props.delSymbol,\n        addSymbol = props.addSymbol,\n        setSelected = props.setSelected,\n        stableSort = props.stableSort,\n        activeQuotes = props.activeQuotes,\n        rows = props.rows,\n        order = props.order,\n        orderBy = props.orderBy,\n        EnhancedTable = props.EnhancedTable;\n  const _selected$addSymbol$d = {\n    selected,\n    addSymbol,\n    delSymbol,\n    setSelected,\n    activeQuotes,\n    rows,\n    order,\n    orderBy\n  },\n        newprops = _selected$addSymbol$d.newprops;\n  console.log(\"before adding ============\", numSelected, addSymbol, activeQuotes);\n  return React.createElement(Toolbar, {\n    className: clsx(classes.root, {\n      [classes.highlight]: numSelected > 0\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, numSelected > 0 ? React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"subtitle1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, numSelected, \" selected\") : React.createElement(Typography, {\n    variant: \"h6\",\n    id: \"tableTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      width: \"140px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, React.createElement(SelectItem, {\n    addSymbol: addSymbol,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: classes.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.actions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, numSelected > 0 ? React.createElement(Tooltip, {\n    title: \"Delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"Delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, React.createElement(DeleteIcon, {\n    onClick: e => (delSymbol(selected), setSelected([])\n    /*,\r\n    stableSort(rows(activeQuotes),getSorting(order, orderBy)),\r\n    EnhancedTable(newprops)*/\n    ),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }))) : React.createElement(Tooltip, {\n    title: \"Filter list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"Filter list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(FilterListIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  })))));\n};\n/******************************************************************************************************/\n\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  tableWrapper: {\n    overflowX: 'auto'\n  }\n}));\n/****************************************************************************************************/\n\nexport default function EnhancedTable(props) {\n  const activeQuotes = props.activeQuotes,\n        delSymbol = props.delSymbol,\n        setChartsTicker = props.setChartsTicker;\n  const classes = useStyles();\n\n  const _React$useState = React.useState('asc'),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        order = _React$useState2[0],\n        setOrder = _React$useState2[1];\n\n  const _React$useState3 = React.useState('marketCap'),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        orderBy = _React$useState4[0],\n        setOrderBy = _React$useState4[1];\n\n  const _React$useState5 = React.useState([]),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        selected = _React$useState6[0],\n        setSelected = _React$useState6[1];\n\n  const _React$useState7 = React.useState(0),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        page = _React$useState8[0],\n        setPage = _React$useState8[1];\n\n  const _React$useState9 = React.useState(false),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        dense = _React$useState10[0],\n        setDense = _React$useState10[1];\n\n  const _React$useState11 = React.useState(5),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        rowsPerPage = _React$useState12[0],\n        setRowsPerPage = _React$useState12[1];\n\n  function handleRequestSort(event, property) {\n    const isDesc = orderBy === property && order === 'desc';\n    setOrder(isDesc ? 'asc' : 'desc');\n    setOrderBy(property);\n  }\n\n  function handleSelectAllClick(event) {\n    if (event.target.checked) {\n      const newSelecteds = rows(activeQuotes).map(n => n.symbol);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  }\n\n  function handleClick(event, symbol) {\n    const selectedIndex = selected.indexOf(symbol);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, symbol);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  }\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  }\n\n  function handleChangeDense(event) {\n    setDense(event.target.checked);\n  }\n\n  const isSelected = symbol => selected.indexOf(symbol) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows(activeQuotes).length - page * rowsPerPage);\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322\n    },\n    __self: this\n  }, React.createElement(EnhancedTableToolbar, {\n    numSelected: selected.length,\n    delSymbol: delSymbol\n    /******************/\n    ,\n    selected: selected,\n    setSelected: setSelected,\n    stableSort: stableSort,\n    activeQuotes: activeQuotes,\n    rows: rows,\n    order: order,\n    orderBy: orderBy\n    /*******************/\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.tableWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    \"aria-labelledby\": \"tableTitle\",\n    size: dense ? 'small' : 'medium',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341\n    },\n    __self: this\n  }, React.createElement(EnhancedTableHead, {\n    numSelected: selected.length,\n    order: order,\n    orderBy: orderBy,\n    onSelectAllClick: handleSelectAllClick,\n    onRequestSort: handleRequestSort,\n    rowCount: rows(activeQuotes).length,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346\n    },\n    __self: this\n  }), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355\n    },\n    __self: this\n  }, stableSort(rows(activeQuotes), getSorting(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n    const isItemSelected = isSelected(row.symbol);\n    const labelId = \"enhanced-table-checkbox-\".concat(index);\n    return React.createElement(TableRow, {\n      hover: true,\n      onClick: event => handleClick(event, row.symbol),\n      role: \"checkbox\",\n      \"aria-checked\": isItemSelected,\n      tabIndex: -1,\n      key: row.symbol,\n      selected: isItemSelected,\n      setChartsTicker: setChartsTicker,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      padding: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: isItemSelected,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    })), React.createElement(TableCell, {\n      component: \"th\",\n      id: labelId,\n      scope: \"row\",\n      padding: \"none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, React.createElement(Link, {\n      style: {\n        textDecoration: \"none\",\n        color: \"rgb(28, 104, 243)\"\n      },\n      onClick: e => {\n        setChartsTicker(row.symbol);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, row.symbol)), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, row.latestPrice), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, row.marketCap), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, row.avgTotalVolume), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, row.peRatio), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, row.open), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, row.close), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, row.low), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, row.high), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, row.week52Low), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, row.week52High), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, row.change), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, row.changePercent), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, row.ytdChange));\n  }), emptyRows > 0 && React.createElement(TableRow, {\n    style: {\n      height: 49 * emptyRows\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    colSpan: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405\n    },\n    __self: this\n  }))))), React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25],\n    component: \"div\",\n    count: rows(activeQuotes).length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    backIconButtonProps: {\n      'aria-label': 'Previous Page'\n    },\n    nextIconButtonProps: {\n      'aria-label': 'Next Page'\n    },\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411\n    },\n    __self: this\n  })), React.createElement(FormControlLabel, {\n    control: React.createElement(Switch, {\n      checked: dense,\n      onChange: handleChangeDense,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }),\n    label: \"Dense padding\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/mnt/c/Users/yavit/OneDrive/Desktop/EquityEcho/WatchlistFundamentals/react-part/src/components/QuoteSheet.js"],"names":["React","clsx","PropTypes","lighten","makeStyles","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","FormControlLabel","Switch","DeleteIcon","FilterListIcon","Route","Link","SelectItem","createData","symbol","latestPrice","marketCap","avgTotalVolume","peRatio","open","close","low","high","week52Low","week52High","change","changePercent","ytdChange","rows","data","map","obj","index","desc","a","b","orderBy","stableSort","array","cmp","stabilizedThis","el","sort","order","getSorting","headRows","id","numeric","disablePadding","label","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","onRequestSort","createSortHandler","property","event","row","propTypes","number","isRequired","func","string","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","spacer","flex","actions","title","onClickChartHandler","console","log","EnhancedTableToolbar","classes","selected","delSymbol","addSymbol","setSelected","activeQuotes","EnhancedTable","newprops","width","e","useStyles","marginTop","paper","marginBottom","table","minWidth","tableWrapper","overflowX","setChartsTicker","useState","setOrder","setOrderBy","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","handleRequestSort","isDesc","handleSelectAllClick","target","checked","newSelecteds","n","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","value","handleChangeDense","isSelected","emptyRows","Math","min","isItemSelected","labelId","textDecoration","height"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport {Route, Link} from 'react-router-dom';\r\nimport SelectItem from '../util/SelectItem'\r\n\r\nfunction createData(symbol,latestPrice,marketCap,avgTotalVolume,peRatio,open,close,low,\r\n                            high,week52Low,week52High,change,changePercent,ytdChange) {\r\n           return { symbol,latestPrice,marketCap,avgTotalVolume,peRatio,open,close,low,\r\n                            high,week52Low,week52High,change,changePercent,ytdChange };\r\n  }\r\n\r\nconst rows = (data) => {\r\n  return data.map((obj, index) => (\r\n    createData(\r\n    obj.symbol, obj.latestPrice, obj.marketCap, obj.avgTotalVolume, obj.peRatio, obj.open, obj.close, obj.low,\r\n    obj.high, obj.week52Low, obj.week52High, obj.change, obj.changePercent, obj.ytdChange, index\r\n    )\r\n  ))\r\n  }\r\n\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nconst headRows = [\r\n    { id: 'symbol', numeric: false, disablePadding: false, label: 'symbol' },\r\n    { id: 'latestPrice', numeric: true, disablePadding: false, label: 'latestPrice' },\r\n    { id: 'marketCap', numeric: true, disablePadding: false, label: 'marketCap' },\r\n    { id: 'avgTotalVolume', numeric: true, disablePadding: false, label: 'avgTotalVolume' },\r\n    { id: 'peRatio', numeric: true, disablePadding: false, label: 'peRatio' },\r\n    { id: 'open', numeric: true, disablePadding: false, label: 'open' },\r\n    { id: 'close', numeric: true, disablePadding: false, label: 'close' },\r\n    { id: 'low', numeric: true, disablePadding: false, label: 'low' },\r\n    { id: 'high', numeric: true, disablePadding: false, label: 'high' },\r\n    { id: 'week52Low', numeric: true, disablePadding: false, label: 'week52Low' },\r\n    { id: 'week52High', numeric: true, disablePadding: false, label: 'week52High'},\r\n    { id: 'change', numeric: true, disablePadding: false, label: 'change'},\r\n    { id: 'changePercent', numeric: true, disablePadding: false, label: 'changePercent'},\r\n    { id: 'ytdChange', numeric: true, disablePadding: false, label: 'ytdChange'},\r\n  ];\r\n\r\n/******************************************************************************************************/\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort} = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'Select ticker' }}\r\n          />\r\n        </TableCell>\r\n        {headRows.map(row => (\r\n          <TableCell\r\n            key={row.id}\r\n            align={row.numeric ? 'right' : 'left'}\r\n            padding={row.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === row.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === row.id}\r\n              direction={order}\r\n              onClick={createSortHandler(row.id)}\r\n            >\r\n              {row.label}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n/**********************************************************************************************************/\r\n\r\n\r\n\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.string.isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n  };\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  spacer: {\r\n    flex: '1 1 100%',\r\n  },\r\n  actions: {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  title: {\r\n    flex: '0 0 auto',\r\n  },\r\n}));\r\n\r\n\r\nconst onClickChartHandler=(symbol) => {\r\n  \r\n  return console.log(\"hello chart\", symbol)\r\n}\r\n\r\n/*************************************************************************************************/\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected,\r\n          selected,\r\n          delSymbol,\r\n          addSymbol,\r\n          setSelected,\r\n          stableSort,\r\n          activeQuotes,\r\n          rows,\r\n          order,\r\n          orderBy,\r\n          EnhancedTable\r\n        } = props;\r\n        const {newprops} = {selected, addSymbol, delSymbol, setSelected, activeQuotes, rows, order, orderBy,}\r\nconsole.log(\"before adding ============\", numSelected,addSymbol, activeQuotes)\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      <div className={classes.title}>\r\n        {numSelected > 0 ? (\r\n          <Typography color=\"inherit\" variant=\"subtitle1\">\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n          <Typography variant=\"h6\" id=\"tableTitle\">\r\n            <div style={{width:\"140px\"}}>\r\n              <SelectItem addSymbol={addSymbol}/>\r\n            </div>\r\n          </Typography>\r\n        )}\r\n      </div>\r\n      <div className={classes.spacer} />\r\n      <div className={classes.actions}>\r\n        {numSelected > 0 ? (\r\n          <Tooltip title=\"Delete\">\r\n            <IconButton aria-label=\"Delete\"  >\r\n              <DeleteIcon onClick={(e)=>(\r\n                delSymbol(selected),\r\n                setSelected([]) /*,\r\n                stableSort(rows(activeQuotes),getSorting(order, orderBy)),\r\n                EnhancedTable(newprops)*/\r\n                )} \r\n              />\r\n            </IconButton>\r\n          </Tooltip>\r\n        ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"Filter list\">\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n/******************************************************************************************************/\r\n\r\n\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\n\r\n\r\n/****************************************************************************************************/\r\nexport default function EnhancedTable(props) {\r\n  const { activeQuotes, delSymbol, setChartsTicker } = props\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('marketCap');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  function handleRequestSort(event, property) {\r\n    const isDesc = orderBy === property && order === 'desc';\r\n    setOrder(isDesc ? 'asc' : 'desc');\r\n    setOrderBy(property);\r\n  }\r\n\r\n\r\n  function handleSelectAllClick(event) {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows(activeQuotes).map(n => n.symbol);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  }\r\n\r\n  function handleClick(event, symbol) {\r\n\r\n    const selectedIndex = selected.indexOf(symbol);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, symbol);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  }\r\n\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  }\r\n\r\n  function handleChangeDense(event) {\r\n    setDense(event.target.checked);\r\n  }\r\n\r\n  const isSelected = symbol => selected.indexOf(symbol) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows(activeQuotes).length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n\r\n\r\n        <EnhancedTableToolbar \r\n          numSelected={selected.length}\r\n          delSymbol={delSymbol}\r\n          /******************/\r\n          selected={selected}\r\n          setSelected={setSelected}\r\n          stableSort={stableSort}\r\n          activeQuotes={activeQuotes}\r\n          rows={rows}\r\n          order={order}\r\n          orderBy={orderBy}\r\n          /*******************/\r\n        />\r\n\r\n\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows(activeQuotes).length}\r\n            />\r\n            \r\n            <TableBody>\r\n              {stableSort(rows(activeQuotes), getSorting(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.symbol);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n                  \r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={event => handleClick(event, row.symbol)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.symbol}\r\n                      selected={isItemSelected}\r\n                      setChartsTicker={setChartsTicker}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        <Link \r\n                          style={{textDecoration:\"none\", color:\"rgb(28, 104, 243)\"}}\r\n                          onClick={(e)=>{setChartsTicker(row.symbol)}}\r\n                        >\r\n                          {row.symbol}\r\n                        </Link>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.latestPrice}</TableCell>\r\n                      <TableCell align=\"right\">{row.marketCap}</TableCell>\r\n                      <TableCell align=\"right\">{row.avgTotalVolume}</TableCell>\r\n                      <TableCell align=\"right\">{row.peRatio}</TableCell>\r\n                      <TableCell align=\"right\">{row.open}</TableCell>\r\n                      <TableCell align=\"right\">{row.close}</TableCell>\r\n                      <TableCell align=\"right\">{row.low}</TableCell>\r\n                      <TableCell align=\"right\">{row.high}</TableCell>\r\n                      <TableCell align=\"right\">{row.week52Low}</TableCell>\r\n                      <TableCell align=\"right\">{row.week52High}</TableCell>\r\n                      <TableCell align=\"right\">{row.change}</TableCell>\r\n                      <TableCell align=\"right\">{row.changePercent}</TableCell>\r\n                      <TableCell align=\"right\">{row.ytdChange}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 49 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows(activeQuotes).length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          backIconButtonProps={{\r\n            'aria-label': 'Previous Page',\r\n          }}\r\n          nextIconButtonProps={{\r\n            'aria-label': 'Next Page',\r\n          }}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}