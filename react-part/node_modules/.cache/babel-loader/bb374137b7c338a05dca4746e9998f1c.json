{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/yavit/OneDrive/Desktop/finProject/proreplica/proreplica_react/src/portfolioGrid/Trades.js\";\nimport React, { Component } from 'react';\nimport apiCall from '../util/apiCall';\nimport '../styles/table.css';\nimport TradeItem from './TradeItem';\nexport default class Trades extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      trades: [],\n      error: \"\"\n    };\n  }\n\n  getTrades() {\n    console.log(\"GET trades FUNCTION\");\n    console.log(\"apikey:\", window.sessionStorage.getItem(\"apikey\"));\n    const endpoint = \"/api/\".concat(window.sessionStorage.getItem(\"apikey\"), \"/trades\");\n    const promise = apiCall(endpoint, 'get');\n    promise.then(blob => blob.json()).then(json => {\n      this.setState({\n        trades: json.trades\n      });\n    });\n  }\n\n  componentWillMount() {\n    console.log(\"TRADES WILL- mount START\");\n    this.getTrades();\n    console.log(\"TRADES WILL -mount END\");\n  }\n\n  render() {\n    console.log(\"TRADES RENDER START\");\n    console.log(\"State TRADES\", this.state.trades);\n    let outp = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n\n    if (this.state.trades === [] || this.state.trades === undefined) {\n      outp = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"NOTHING TO DISPLAY\");\n    } else {\n      outp = React.createElement(TradeItem, {\n        setChartsTicker: this.props.setChartsTicker,\n        items: this.state.trades,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    }\n\n    console.log(\"trades RENDER END\");\n    return React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Ticker\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Shares\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Price\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Trade Cost\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Time\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, outp));\n  }\n\n}","map":{"version":3,"sources":["/mnt/c/Users/yavit/OneDrive/Desktop/finProject/proreplica/proreplica_react/src/portfolioGrid/Trades.js"],"names":["React","Component","apiCall","TradeItem","Trades","state","trades","error","getTrades","console","log","window","sessionStorage","getItem","endpoint","promise","then","blob","json","setState","componentWillMount","render","outp","undefined","props","setChartsTicker"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAO,qBAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,eAAe,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC5CI,KAD4C,GACpC;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,KAAK,EAAE;AAFD,KADoC;AAAA;;AAM5CC,EAAAA,SAAS,GAAG;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,QAA9B,CAAtB;AACA,UAAMC,QAAQ,kBAAWH,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,QAA9B,CAAX,YAAd;AACA,UAAME,OAAO,GAAGb,OAAO,CAACY,QAAD,EAAU,KAAV,CAAvB;AACEC,IAAAA,OAAO,CAACC,IAAR,CAAaC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAArB,EAAkCF,IAAlC,CAAwCE,IAAI,IAAG;AAC7C,WAAKC,QAAL,CAAc;AACZb,QAAAA,MAAM,EAAEY,IAAI,CAACZ;AADD,OAAd;AAGD,KAJD;AAKH;;AACDc,EAAAA,kBAAkB,GAAG;AACnBX,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA,SAAKF,SAAL;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD;;AAEDW,EAAAA,MAAM,GAAG;AACPZ,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAKL,KAAL,CAAWC,MAAvC;AAEA,QAAIgB,IAAI,GAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAZ;;AACA,QAAG,KAAKjB,KAAL,CAAWC,MAAX,KAAsB,EAAtB,IAA4B,KAAKD,KAAL,CAAWC,MAAX,KAAsBiB,SAArD,EAAgE;AAC9DD,MAAAA,IAAI,GAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAR;AACD,KAFD,MAEO;AACLA,MAAAA,IAAI,GACF,oBAAC,SAAD;AAAW,QAAA,eAAe,EAAE,KAAKE,KAAL,CAAWC,eAAvC;AAAwD,QAAA,KAAK,EAAI,KAAKpB,KAAL,CAAWC,MAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;AACDG,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,CADF,CADA,EAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGY,IADH,CAVA,CADF;AAgBA;;AApD0C","sourcesContent":["import React, { Component } from 'react';\r\nimport apiCall from '../util/apiCall';\r\nimport '../styles/table.css';\r\nimport TradeItem from './TradeItem'\r\n\r\nexport default class Trades extends Component {\r\n  state = {\r\n    trades: [],\r\n    error: \"\"\r\n  }\r\n  \r\n  getTrades() {\r\n    console.log(\"GET trades FUNCTION\")\r\n    console.log(\"apikey:\",window.sessionStorage.getItem(\"apikey\"))\r\n    const endpoint = `/api/${window.sessionStorage.getItem(\"apikey\")}/trades`\r\n    const promise = apiCall(endpoint,'get')\r\n      promise.then(blob => blob.json()).then (json=> {\r\n        this.setState({\r\n          trades: json.trades\r\n       })\r\n      })\r\n  }    \r\n  componentWillMount() {\r\n    console.log(\"TRADES WILL- mount START\")\r\n    this.getTrades()\r\n    console.log(\"TRADES WILL -mount END\")\r\n  }\r\n  \r\n  render() {\r\n    console.log(\"TRADES RENDER START\")\r\n    console.log(\"State TRADES\", this.state.trades)\r\n    \r\n    let outp = (<div></div>)\r\n    if(this.state.trades === [] || this.state.trades === undefined) {\r\n      outp = (<div>NOTHING TO DISPLAY</div>)\r\n    } else {\r\n      outp = (\r\n        <TradeItem setChartsTicker={this.props.setChartsTicker} items = {this.state.trades}/>\r\n      )\r\n    }\r\n    console.log(\"trades RENDER END\")\r\n    return (\r\n      <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Ticker</th>\r\n          <th>Shares</th>\r\n          <th>Price</th>\r\n          <th>Trade Cost</th>\r\n          <th>Time</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {outp}\r\n      </tbody>\r\n    </table>\r\n    )\r\n   }\r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}