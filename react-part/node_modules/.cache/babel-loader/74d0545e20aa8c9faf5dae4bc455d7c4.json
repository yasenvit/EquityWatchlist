{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/yavit/OneDrive/Desktop/finProject/proreplica/proreplica_react/src/components/QuoteGrid.js\";\nimport React, { Component, Fragment } from 'react';\nimport apiCall from '../util/apiCall';\nimport '../styles/style.css';\nimport '../styles/quoteBlock.css';\nimport Quotes from '../quoteGrid/Quotes';\nimport Gainers from '../quoteGrid/Gainers';\nimport Mostactive from '../quoteGrid/Mostactive';\nimport Losers from '../quoteGrid/Losers';\nimport Positions from '../portfolioGrid/Positions';\nimport Trades from '../portfolioGrid/Trades';\nimport Account from '../portfolioGrid/Account';\nimport SelectBox from '../features/select-box/Tags';\nimport SelectList from '../features/select-box/ListTen';\nexport default class QuoteGrid extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      quotes: {\n        page: \"US Equities\",\n        tags: [{\n          tag: 'In Focus',\n          id: 1\n        }, {\n          tag: 'Mostactive',\n          id: 2\n        }, {\n          tag: 'Gainers',\n          id: 3\n        }, {\n          tag: 'Losers',\n          id: 4\n        }]\n      },\n      portfolio: {\n        page: \"Portfolio\",\n        tags: [{\n          tag: 'Account',\n          id: 1\n        }, {\n          tag: 'Positions',\n          id: 2\n        }, {\n          tag: 'Trades',\n          id: 3\n        }]\n      },\n      selectedItem: \"Account\",\n      selectedPage: \"US Equities\",\n      selectedList: \"In Focus\",\n      activeTickers: []\n    };\n\n    this.selectList = list => {\n      this.setState({\n        selectedList: list.tags\n      });\n    };\n\n    this.selectItem = item => {\n      this.setState({\n        selectedItem: item.value\n      });\n      console.log(\"selected item ---------------------------\", this.state.selectedItem);\n    };\n\n    this.selectPage = obj => {\n      this.setState({\n        selectedPage: obj.page,\n        selectedTag: obj.tags[0].tag\n      });\n    };\n\n    this.delSymbol = symbol => {\n      console.log(\"deleting\", symbol);\n      const endpoint = \"/api/active/delete/\".concat(symbol);\n      const promise = apiCall(endpoint, 'get');\n      promise.then(blob => blob.json()).then(json => {\n        this.setState({\n          activeTickers: json.symbols\n        });\n      });\n    };\n  }\n\n  /**************************************************************************/\n  addSymbol(symbol) {\n    const endpoint = \"/api/active/add/\".concat(symbol);\n    const promise = apiCall(endpoint, 'get');\n    promise.then(blob => blob.json()).then(json => {\n      if (json.error.length > 0) {\n        alert(json.error);\n      } else {\n        this.setState({\n          activeTickers: json.symbols\n        });\n      }\n    });\n  }\n\n  /***********************************************************************/\n  checkList() {\n    const endpoint = \"/api/active/list\";\n    const promise = apiCall(endpoint, 'get');\n    promise.then(blob => blob.json()).then(json => {\n      this.setState({\n        activeTickers: json.symbols\n      });\n    });\n  }\n\n  componentWillMount() {\n    this.checkList();\n  }\n  /************************************************************************/\n\n\n  render() {\n    console.log(\"QuoteGrid render page-------------\", this.state.selectedPage);\n    console.log(\"QuoteGrid render item-------------\", this.state.selectedItem);\n    let outpTable = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    });\n\n    if (this.state.selectedPage === \"US Equities\" && this.state.selectedList === \"In Focus\") {\n      outpTable = React.createElement(Quotes, {\n        setChartsTicker: this.props.setChartsTicker,\n        activeTickers: this.state.activeTickers,\n        delSymbol: this.delSymbol,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      });\n    } else if (this.state.selectedPage === \"US Equities\" && this.state.selectedList === \"Mostactive\") {\n      outpTable = React.createElement(Mostactive, {\n        addSymbol: this.addSymbol,\n        activeTickers: this.state.activeTickers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      });\n    } else if (this.state.selectedPage === \"US Equities\" && this.state.selectedList === \"Gainers\") {\n      outpTable = React.createElement(Gainers, {\n        addSymbol: this.addSymbol,\n        activeTickers: this.state.activeTickers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      });\n    } else if (this.state.selectedPage === \"US Equities\" && this.state.selectedList === \"Losers\") {\n      outpTable = React.createElement(Losers, {\n        addSymbol: this.addSymbol,\n        activeTickers: this.state.activeTickers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      });\n    } else if (this.state.selectedPage === \"Portfolio\" && this.state.selectItem === \"Account\") {\n      outpTable = React.createElement(Account, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      });\n    } else if (this.state.selectedPage === \"Portfolio\" && this.state.selectedItem === \"Positions\") {\n      outpTable = React.createElement(Positions, {\n        setChartsTicker: this.props.setChartsTicker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      });\n    } else if (this.state.selectedPage === \"Portfolio\" && this.state.selectedItem === \"Trades\") {\n      outpTable = React.createElement(Trades, {\n        setChartsTicker: this.props.setChartsTicker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      });\n    }\n    /************************************************/\n\n\n    let addTickerButton = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    });\n    let outputPageOption = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    });\n\n    if (this.state.selectedPage === \"US Equities\") {\n      addTickerButton = React.createElement(\"div\", {\n        className: \"table-header-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"input-adding\",\n        id: \"symbol\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"button-adding\",\n        onClick: event => {\n          this.addSymbol(document.getElementById('symbol').value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"add symbol\"));\n      outputPageOption = React.createElement(SelectList, {\n        lists: this.state.quotes.tags,\n        selectList: this.selectList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      });\n    } else if (this.state.selectedPage === \"Portfolio\") {\n      outputPageOption = React.createElement(SelectBox, {\n        items: [{\n          value: 'Account',\n          id: 1\n        }, {\n          value: 'Positions',\n          id: 2\n        }, {\n          value: 'Trades',\n          id: 3\n        }],\n        selectItem: this.selectItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      });\n    }\n\n    let selectFor = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    });\n\n    if (this.state.selectedPage === \"Portfolio\" && this.state.selectedItem === \"Positions\") {\n      selectFor = React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"flex-end\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"position for : \"), React.createElement(\"input\", {\n        className: \"input-adding\",\n        id: \"positionfor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"button-adding\",\n        onClick: event => {\n          this.addSymbol(document.getElementById('positionfor').value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"show\"));\n    } else if (this.state.selectedPage === \"Portfolio\" && this.state.selectedItem === \"Trades\") {\n      selectFor = React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"flex-end\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"trades for : \"), React.createElement(\"input\", {\n        className: \"input-adding\",\n        id: \"tradesfor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"button-adding\",\n        onClick: event => {\n          this.addSymbol(document.getElementById('tradesfor').value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"show\"));\n    }\n\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"collar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => {\n        this.selectPage(this.quotes);\n      },\n      className: this.state.selectedPage === \"US Equities\" ? \"tag-on\" : \"tag-off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Quote Grid\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => {\n        this.selectPage(this.portfolio);\n      },\n      className: this.state.selectedPage === \"Portfolio\" ? \"tag-on\" : \"tag-off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Portfolio\"))), React.createElement(\"div\", {\n      className: \"tag-ext\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"table-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"table-header-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, addTickerButton), React.createElement(\"div\", {\n      className: \"table-header-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: \"100px\",\n        backgroundColor: \"red\",\n        margin: '0px',\n        position: 'relative'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, outputPageOption)), React.createElement(\"div\", {\n      className: \"table-header-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, selectFor)), React.createElement(\"div\", {\n      className: \"split\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'scroll-box',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, outpTable)));\n  }\n\n}","map":{"version":3,"sources":["/mnt/c/Users/yavit/OneDrive/Desktop/finProject/proreplica/proreplica_react/src/components/QuoteGrid.js"],"names":["React","Component","Fragment","apiCall","Quotes","Gainers","Mostactive","Losers","Positions","Trades","Account","SelectBox","SelectList","QuoteGrid","state","quotes","page","tags","tag","id","portfolio","selectedItem","selectedPage","selectedList","activeTickers","selectList","list","setState","selectItem","item","value","console","log","selectPage","obj","selectedTag","delSymbol","symbol","endpoint","promise","then","blob","json","symbols","addSymbol","error","length","alert","checkList","componentWillMount","render","outpTable","props","setChartsTicker","addTickerButton","outputPageOption","event","document","getElementById","selectFor","display","flexDirection","justifyContent","alignItems","width","backgroundColor","margin","position"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport apiCall from '../util/apiCall';\r\nimport '../styles/style.css';\r\nimport '../styles/quoteBlock.css';\r\nimport Quotes from '../quoteGrid/Quotes'\r\nimport Gainers from '../quoteGrid/Gainers'\r\nimport Mostactive from '../quoteGrid/Mostactive'\r\nimport Losers from '../quoteGrid/Losers'\r\nimport Positions from '../portfolioGrid/Positions'\r\nimport Trades from '../portfolioGrid/Trades'\r\nimport Account from '../portfolioGrid/Account'\r\nimport SelectBox from '../features/select-box/Tags'\r\nimport SelectList from '../features/select-box/ListTen'\r\n\r\nexport default class QuoteGrid extends Component {\r\n  state = {\r\n    quotes:{\r\n      page: \"US Equities\",\r\n      tags:[\r\n      { tag:'In Focus', id: 1 },\r\n      { tag:'Mostactive', id: 2 },\r\n      { tag:'Gainers', id: 3 },\r\n      { tag:'Losers', id: 4 },\r\n    ]},\r\n\r\n    portfolio : {\r\n      page: \"Portfolio\",\r\n      tags : [\r\n        { tag: 'Account', id: 1 },\r\n        { tag: 'Positions', id: 2 },\r\n        { tag: 'Trades', id: 3 }\r\n      ]},\r\n\r\n    selectedItem: \"Account\",\r\n    selectedPage: \"US Equities\",\r\n    selectedList: \"In Focus\",\r\n    activeTickers: []\r\n  }\r\n\r\n  selectList = (list) => {\r\n    this.setState({\r\n      selectedList: list.tags,\r\n    })\r\n  }\r\n  selectItem = (item) => {\r\n    this.setState({\r\n      selectedItem: item.value,\r\n    })\r\n    console.log(\"selected item ---------------------------\",this.state.selectedItem)\r\n  }\r\n  selectPage = (obj) => {\r\n    this.setState({\r\n      selectedPage: obj.page,\r\n      selectedTag : obj.tags[0].tag\r\n    })\r\n  }\r\n  /**************************************************************************/\r\n  addSymbol(symbol) {\r\n    const endpoint = `/api/active/add/${symbol}`\r\n    const promise = apiCall(endpoint,'get')\r\n    promise.then(blob => blob.json()).then(json => {\r\n      if (json.error.length > 0) {\r\n        alert(json.error)\r\n      } else {\r\n        this.setState({activeTickers: json.symbols})\r\n      }\r\n    })\r\n  }\r\n  delSymbol = (symbol) => {\r\n    console.log(\"deleting\",symbol)\r\n    const endpoint = `/api/active/delete/${symbol}`\r\n    const promise = apiCall(endpoint,'get')\r\n    promise.then(blob => blob.json()).then(json => {\r\n    this.setState({activeTickers: json.symbols})\r\n      })\r\n  }\r\n  /***********************************************************************/\r\n  checkList() {\r\n    const endpoint = `/api/active/list`\r\n    const promise = apiCall(endpoint,'get')\r\n    promise.then(blob => blob.json()).then(json => {\r\n      this.setState({\r\n        activeTickers: json.symbols\r\n      })\r\n    })\r\n  }\r\n  componentWillMount() {\r\n    this.checkList();\r\n  }\r\n/************************************************************************/\r\n\r\n  render() {\r\n  console.log(\"QuoteGrid render page-------------\", this.state.selectedPage)\r\n  console.log(\"QuoteGrid render item-------------\", this.state.selectedItem)\r\n  let outpTable = (<div></div>)\r\n  if(this.state.selectedPage === \"US Equities\" && this.state.selectedList === \"In Focus\") {\r\n    outpTable = (\r\n      <Quotes\r\n        setChartsTicker={this.props.setChartsTicker}\r\n        activeTickers = {this.state.activeTickers}\r\n        delSymbol = {this.delSymbol}\r\n      />\r\n    )\r\n    } else if(this.state.selectedPage === \"US Equities\" && this.state.selectedList === \"Mostactive\") {\r\n      outpTable = (\r\n        <Mostactive addSymbol = {this.addSymbol} activeTickers = {this.state.activeTickers}/>\r\n      )\r\n    } else if (this.state.selectedPage === \"US Equities\" && this.state.selectedList === \"Gainers\") {\r\n      outpTable = (\r\n        <Gainers addSymbol = {this.addSymbol} activeTickers = {this.state.activeTickers}/>\r\n      )\r\n    } else if (this.state.selectedPage === \"US Equities\" && this.state.selectedList === \"Losers\") {\r\n      outpTable = (\r\n        <Losers addSymbol = {this.addSymbol} activeTickers = {this.state.activeTickers}/>\r\n      )\r\n    } else if(this.state.selectedPage === \"Portfolio\" && this.state.selectItem === \"Account\") {\r\n      outpTable = (\r\n        <Account/>\r\n      )\r\n    } else if(this.state.selectedPage === \"Portfolio\" && this.state.selectedItem === \"Positions\") {\r\n      outpTable = (\r\n        <Positions setChartsTicker={this.props.setChartsTicker}/>\r\n      )\r\n    } else if(this.state.selectedPage === \"Portfolio\" && this.state.selectedItem === \"Trades\") {\r\n      outpTable = (\r\n        <Trades setChartsTicker={this.props.setChartsTicker}/>\r\n      )\r\n    }\r\n/************************************************/  \r\n  let addTickerButton = (<div></div>)\r\n  let outputPageOption = (<div></div>)\r\n  if(this.state.selectedPage === \"US Equities\"){\r\n    addTickerButton = (\r\n      <div className=\"table-header-left\">\r\n        <input className=\"input-adding\"id=\"symbol\"></input>\r\n          <button className = \"button-adding\" onClick={(event)=>{\r\n            this.addSymbol(document.getElementById('symbol').value)                      \r\n        }}>add symbol</button>\r\n      </div>\r\n    )\r\n    outputPageOption = (\r\n      <SelectList\r\n        lists={this.state.quotes.tags}\r\n        selectList={this.selectList}\r\n      />\r\n    )    \r\n  } else if(this.state.selectedPage === \"Portfolio\"){\r\n    outputPageOption = (\r\n      <SelectBox\r\n        items={[\r\n          { value: 'Account', id: 1 },\r\n          { value: 'Positions', id: 2 },\r\n          { value: 'Trades', id: 3 },\r\n        ]}\r\n        selectItem={this.selectItem}\r\n      />\r\n    )\r\n  }\r\n  let selectFor = (<div></div>)\r\n  if(this.state.selectedPage===\"Portfolio\" && this.state.selectedItem===\"Positions\"){\r\n    selectFor = (\r\n    <div style={{display:\"flex\",flexDirection:\"row\", justifyContent:\"flex-end\", alignItems:\"center\"}}>\r\n        <div>position for : </div>\r\n        <input className=\"input-adding\"id=\"positionfor\"></input>\r\n          <button className = \"button-adding\" onClick={(event)=>{\r\n            this.addSymbol(document.getElementById('positionfor').value)                      \r\n        }}>show</button>\r\n    </div>\r\n  )\r\n} else if(this.state.selectedPage===\"Portfolio\" && this.state.selectedItem===\"Trades\"){\r\n  selectFor = (\r\n    <div style={{display:\"flex\",flexDirection:\"row\", justifyContent:\"flex-end\", alignItems:\"center\"}}>\r\n        <div>trades for : </div>\r\n        <input className=\"input-adding\"id=\"tradesfor\"></input>\r\n          <button className = \"button-adding\" onClick={(event)=>{\r\n            this.addSymbol(document.getElementById('tradesfor').value)                      \r\n        }}>show</button>\r\n    </div>\r\n  ) \r\n} \r\n    return (\r\n      <Fragment>\r\n        <div className=\"collar\">\r\n                <div><button onClick={()=>{this.selectPage(this.quotes)}} className={this.state.selectedPage===\"US Equities\"?\"tag-on\":\"tag-off\"}><p>Quote Grid</p></button></div>\r\n                <div><button onClick={()=>{this.selectPage(this.portfolio)}} className={this.state.selectedPage===\"Portfolio\"?\"tag-on\":\"tag-off\"}><p>Portfolio</p></button></div>\r\n                <div className=\"tag-ext\"></div>\r\n              </div>\r\n          <div className=\"table-header\">\r\n          <div className=\"table-header-left\">\r\n            {addTickerButton}\r\n          </div>\r\n            <div className=\"table-header-center\" >\r\n             <div style={{width: \"100px\",backgroundColor:\"red\",margin: '0px', position: 'relative'}}>\r\n             {outputPageOption}\r\n            </div>\r\n          </div>\r\n        \r\n          <div className=\"table-header-right\">\r\n          \r\n              {selectFor}\r\n          \r\n          </div>\r\n        </div>\r\n        <div className=\"split\">\r\n          <div className={'scroll-box'}>\r\n            {outpTable}\r\n          </div>\r\n        </div>\r\n      </Fragment>    \r\n    )\r\n  }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}