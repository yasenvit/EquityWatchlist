{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/yavit/OneDrive/Desktop/finProject/proreplica/proreplica_react/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport './styles/style.css';\nimport isloggedin from './util/isloggedin';\nimport Login from './util/Login';\nimport logoutf from './util/logoutf';\nimport SignUp from './util/SignUp';\nimport apiCall from './util/apiCall';\nimport Table from './components/Table';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      time: new Date(),\n      refresh: \"empty\",\n      error: \"no error\",\n      username: null\n    };\n\n    this.signup = (username, password) => {\n      const promise = apiCall('/api/signup', 'post', {\n        \"username\": username,\n        \"password\": password\n      });\n      promise.then(blob => blob.json()).then(json => {\n        if (json.api_key !== undefined) {\n          window.sessionStorage.setItem(\"apikey\", json.api_key);\n          window.sessionStorage.setItem(\"username\", json.username);\n          this.setState({\n            refresh: \"loggedin\",\n            error: \"\"\n          });\n        } else {\n          this.setState({\n            refresh: \"login error\",\n            error: \"Could not sign up\"\n          });\n          alert(\"This username is already taken\");\n        }\n      });\n    };\n\n    this.loginf = (username, password) => {\n      console.log(\"login func credencials input:\", username, password);\n      const promise = apiCall('/api/get_api_key', 'post', {\n        \"username\": username,\n        \"password\": password\n      });\n      promise.then(blob => blob.json()).then(json => {\n        console.log(\"api-key\", json.api_key);\n\n        if (json.api_key !== undefined) {\n          window.sessionStorage.setItem(\"apikey\", json.api_key);\n          window.sessionStorage.setItem(\"username\", json.username);\n          this.setState({\n            refresh: \"loggedin\",\n            username: json.username\n          });\n        } else {\n          this.setState({\n            refresh: \"login error\",\n            error: \"Could not log in\"\n          });\n        }\n      });\n    };\n\n    this.logoutClick = event => {\n      console.log(\"logout click-click-click\");\n      event.preventDefault();\n      logoutf();\n      this.setState({\n        refresh: \"loggedout\"\n      });\n    };\n  }\n\n  currentTime() {\n    this.setState({\n      time: new Date()\n    });\n  }\n  /*componentWillMount() {\n    setInterval(()=>this.currentTime(), 1000)\n  }*/\n\n\n  render() {\n    console.log(\"render refresh:\", this.state.refresh);\n    let appLogin = [];\n    let routeList = [];\n    let appSignUp = [];\n    let output = [];\n    let date = [];\n\n    if (isloggedin()) {\n      output = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Table, {\n        clicked: this.logoutClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }));\n    } else {\n      appLogin = [React.createElement(Link, {\n        to: \"/login\",\n        style: {\n          color: \"white\",\n          textDecoration: \"none\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Sing in\")];\n      appSignUp = [React.createElement(Link, {\n        to: \"/signup\",\n        style: {\n          color: \"white\",\n          textDecoration: \"none\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Sign up\")];\n      routeList = [React.createElement(Route, {\n        exact: true,\n        path: \"/signup\",\n        render: props => React.createElement(SignUp, Object.assign({}, props, {\n          signupfunc: this.signup,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/login\",\n        render: props => React.createElement(Login, Object.assign({}, props, {\n          loginfunc: this.loginf,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })];\n      output = [React.createElement(\"div\", {\n        className: \"entire\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header-container-out\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, this.state.time.toLocaleDateString(), \" \", this.state.time.toLocaleTimeString()), React.createElement(\"div\", {\n        className: \"header-item header-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Welcome to Proreplica\"), React.createElement(\"div\", {\n        className: \"header-item header-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"signup\",\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, appSignUp), React.createElement(\"div\", {\n        className: \"login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, appLogin))), React.createElement(\"div\", {\n        className: \"unsigned-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, routeList), React.createElement(\"div\", {\n        className: \"footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }))];\n    }\n\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        backgroundColor: \"rgb(56, 52, 52)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, output));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/mnt/c/Users/yavit/OneDrive/Desktop/finProject/proreplica/proreplica_react/src/App.js"],"names":["React","Component","BrowserRouter","Route","Redirect","Link","isloggedin","Login","logoutf","SignUp","apiCall","Table","App","state","time","Date","refresh","error","username","signup","password","promise","then","blob","json","api_key","undefined","window","sessionStorage","setItem","setState","alert","loginf","console","log","logoutClick","event","preventDefault","currentTime","render","appLogin","routeList","appSignUp","output","date","color","textDecoration","props","toLocaleDateString","toLocaleTimeString","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {BrowserRouter, Route, Redirect} from 'react-router-dom';\nimport {Link} from 'react-router-dom'\nimport './styles/style.css';\nimport isloggedin from './util/isloggedin';\nimport Login from './util/Login';\nimport logoutf from './util/logoutf';\nimport SignUp from './util/SignUp';\nimport apiCall from './util/apiCall';\nimport Table from './components/Table'\n\nclass App extends Component {\n  state={\n    time: new Date(),\n    refresh:\"empty\",\n    error:\"no error\",\n    username:null\n  }\n  currentTime() {\n    this.setState ({\n      time:new Date()\n    })\n  }\n  /*componentWillMount() {\n    setInterval(()=>this.currentTime(), 1000)\n  }*/\n\n  signup = (username, password) => {\n    const promise = apiCall('/api/signup', 'post', {\n      \"username\": username,\n      \"password\": password\n    })\n    promise.then(blob=>blob.json()).then(json=>{\n      if (json.api_key !== undefined) {\n        window.sessionStorage.setItem(\"apikey\", json.api_key)\n        window.sessionStorage.setItem(\"username\", json.username)\n        this.setState({\n\n          refresh: \"loggedin\",\n          error: \"\"\n        })\n      }\n      else {\n        this.setState({\n          refresh: \"login error\",\n          error: \"Could not sign up\"\n        })\n        alert(\"This username is already taken\")  \n      }\n    })\n  }\n\n  loginf = (username, password) => {\n    console.log(\"login func credencials input:\", username, password)\n    const promise = apiCall('/api/get_api_key', 'post', {\n      \"username\": username,\n      \"password\": password\n    })\n    promise.then(blob=>blob.json()).then(json=>{\n      console.log(\"api-key\",json.api_key)\n      if (json.api_key !== undefined) {\n        window.sessionStorage.setItem(\"apikey\", json.api_key)\n        window.sessionStorage.setItem(\"username\", json.username)\n        this.setState({\n          refresh: \"loggedin\",\n          username: json.username\n        })\n      }\n      else {\n        this.setState({\n          refresh: \"login error\",\n          error: \"Could not log in\"\n        })   \n      }\n    })\n  }\n\n  logoutClick=(event)=>{\n    console.log(\"logout click-click-click\")\n    event.preventDefault()\n    logoutf()\n    this.setState({refresh: \"loggedout\"})\n  }\n\n  render () {\n    console.log(\"render refresh:\",this.state.refresh)\n    let appLogin = []\n    let routeList = []\n    let appSignUp = []\n    let output = []\n    let date = []\n\n    if (isloggedin()){\n      output = (\n        <div>\n          <Table clicked={this.logoutClick}/>\n        </div>\n      )\n    } else {\n      appLogin=[<Link to=\"/login\" style={{color:\"white\", textDecoration: \"none\"}}>Sing in</Link>]\n      appSignUp=[<Link to=\"/signup\" style={{color:\"white\", textDecoration: \"none\"}} >Sign up</Link>]\n      routeList=[\n        <Route exact path=\"/signup\" render={(props)=><SignUp {...props} signupfunc={this.signup} />}/>,\n        <Route path=\"/login\" render={(props)=><Login {...props} loginfunc={this.loginf} />} />  \n      ]\n      output= [\n        <div className=\"entire\">\n          <div className='header-container-out'>\n            <div className='header-item'>{this.state.time.toLocaleDateString()} {this.state.time.toLocaleTimeString()}</div>\n            <div className='header-item header-center'>Welcome to Proreplica</div>\n            <div className=\"header-item header-right\">\n              <div className='signup' style={{color:\"white\"}}>{appSignUp}</div>\n              <div className='login'>{appLogin}</div>\n            </div>\n          </div>\n          <div className=\"unsigned-body\">\n            {routeList}\n          </div>\n          <div className=\"footer\">\n          </div>\n        </div> \n      ]\n    }\n    return (\n      <BrowserRouter>\n        <div style={{backgroundColor:\"rgb(56, 52, 52)\"}}>\n          {output}\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}