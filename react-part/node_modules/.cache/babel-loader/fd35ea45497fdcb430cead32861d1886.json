{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/yavit/OneDrive/Desktop/finProject/proreplica/proreplica_react/src/portfolioGrid/Positions.js\";\nimport React, { Component } from 'react';\nimport apiCall from '../util/apiCall';\nimport '../styles/table.css';\nimport '../styles/style.css';\nimport PosItem from './PosItem';\nexport default class Positions extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      positions: [],\n      positionCosTotal: null,\n      positionsValueTotal: null,\n      positionsQty: null,\n      sharesQty: null,\n      changeTotal: null,\n      changePercentageTotal: null,\n      positionFor: this.props.positionFor || null,\n      error: \"\"\n    };\n\n    this.colored = value => {\n      if (value > 0) {\n        return {\n          backgroundColor: \"green\",\n          fontSize: \"0.9rem\",\n          fontWeight: \"500\",\n          padding: \"0px\",\n          textAlign: \"center\"\n        };\n      } else if (value < 0) {\n        return {\n          backgroundColor: \"rgb(250, 85, 85)\",\n          fontSize: \"0.9rem\",\n          fontWeight: \"500\",\n          padding: \"0px\",\n          textAlign: \"center\"\n        };\n      } else {\n        return {\n          color: \"yellow\",\n          fontSize: \"0.9rem\",\n          fontWeight: \"500\",\n          padding: \"0px\",\n          textAlign: \"center\"\n        };\n      }\n    };\n  }\n\n  getSummary() {\n    const endpoint = \"/api/\".concat(window.sessionStorage.getItem(\"apikey\"), \"/positions/summary\");\n    const promise = apiCall(endpoint, 'get');\n    promise.then(blob => blob.json()).then(json => {\n      this.setState({\n        positions: json.positions,\n        positionCosTotal: json.positionCosTotal,\n        positionsValueTotal: json.positionsValueTotal,\n        positionsQty: json.positionsQty,\n        sharesQty: json.sharesQty,\n        changeTotal: json.changeTotal,\n        changePercentageTotal: json.changePercentageTotal\n      });\n    });\n  }\n\n  componentWillMount() {\n    this.getSummary();\n  }\n\n  render() {\n    console.log(\"POSITION=========\", this.state.positionFor);\n\n    const roundTo = require('round-to');\n\n    let outp = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    });\n\n    if (this.state.positions === [] || this.state.positions === undefined) {\n      outp = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"NOTHING TO DISPLAY\");\n    } else {\n      outp = React.createElement(PosItem, {\n        setChartsTicker: this.props.setChartsTicker,\n        items: this.state.positions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"position-display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"position-display-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Total positions\")), React.createElement(\"td\", {\n      style: styledCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: styledDiv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.state.positionsQty))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Total shares\"), React.createElement(\"td\", {\n      style: styledCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: styledDiv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.state.sharesQty))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Funds Invested\"), React.createElement(\"td\", {\n      style: styledCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: styledDiv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.positionCosTotal))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Portfolio current value\"), React.createElement(\"td\", {\n      style: styledCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: styledDiv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.state.positionsValueTotal))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Change\"), React.createElement(\"td\", {\n      style: styledCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: this.colored(this.state.changeTotal),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.state.changeTotal))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Change %\"), React.createElement(\"td\", {\n      style: styledCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: this.colored(this.state.changeTotal),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.state.changePercentageTotal))))), React.createElement(\"div\", {\n      className: \"position-display-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Ticker\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Shares\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Invested\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Carrent Value\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Change\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Change %\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, outp))));\n  }\n\n}\nconst styledDiv = {\n  textAlign: \"center\",\n  padding: \"0.5rem\"\n};\nconst styledCell = {\n  textAlign: \"center\",\n  padding: \"0rem\"\n};","map":{"version":3,"sources":["/mnt/c/Users/yavit/OneDrive/Desktop/finProject/proreplica/proreplica_react/src/portfolioGrid/Positions.js"],"names":["React","Component","apiCall","PosItem","Positions","state","positions","positionCosTotal","positionsValueTotal","positionsQty","sharesQty","changeTotal","changePercentageTotal","positionFor","props","error","colored","value","backgroundColor","fontSize","fontWeight","padding","textAlign","color","getSummary","endpoint","window","sessionStorage","getItem","promise","then","blob","json","setState","componentWillMount","render","console","log","roundTo","require","outp","undefined","setChartsTicker","styledCell","styledDiv"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport apiCall from '../util/apiCall';\r\nimport '../styles/table.css';\r\nimport '../styles/style.css';\r\nimport PosItem from './PosItem'\r\n\r\nexport default class Positions extends Component {\r\n  state = {\r\n    positions: [],\r\n    positionCosTotal: null,\r\n    positionsValueTotal: null,\r\n    positionsQty: null,\r\n    sharesQty: null,\r\n    changeTotal: null,\r\n    changePercentageTotal: null,\r\n\r\n    positionFor: this.props.positionFor || null,\r\n    error: \"\"\r\n  }\r\n \r\n  getSummary() {\r\n    const endpoint = `/api/${window.sessionStorage.getItem(\"apikey\")}/positions/summary`\r\n    const promise = apiCall(endpoint,'get')\r\n      promise.then(blob => blob.json()).then (json=> {\r\n        this.setState({\r\n          positions: json.positions,\r\n          positionCosTotal: json.positionCosTotal,\r\n          positionsValueTotal: json.positionsValueTotal,\r\n          positionsQty: json.positionsQty,\r\n          sharesQty: json.sharesQty,\r\n          changeTotal: json.changeTotal,\r\n          changePercentageTotal: json.changePercentageTotal\r\n       })\r\n      })\r\n  }\r\n      \r\n  componentWillMount() {\r\n    this.getSummary()\r\n  }\r\n\r\n  colored = (value)=> {\r\n    if(value>0) {\r\n      return {backgroundColor:\"green\",fontSize:\"0.9rem\",fontWeight:\"500\",padding:\"0px\",textAlign:\"center\"}\r\n     } else if(value<0) {\r\n        return {backgroundColor:\"rgb(250, 85, 85)\",fontSize:\"0.9rem\",fontWeight:\"500\",padding:\"0px\",textAlign:\"center\"}\r\n      } else {\r\n        return {color: \"yellow\",fontSize:\"0.9rem\",fontWeight:\"500\",padding:\"0px\",textAlign:\"center\"}\r\n      }\r\n    }\r\n  render() {\r\n    console.log(\"POSITION=========\", this.state.positionFor)\r\n\r\n    const roundTo = require('round-to') \r\n    let outp = (<div></div>)\r\n    \r\n    if(this.state.positions === [] || this.state.positions === undefined) {\r\n      outp = (<div>NOTHING TO DISPLAY</div>)\r\n    } else {\r\n      outp = (\r\n        <PosItem setChartsTicker={this.props.setChartsTicker} items = {this.state.positions}/>\r\n      )\r\n    }\r\n    return (\r\n      <div className=\"position-display\">\r\n        <div className=\"position-display-left\">\r\n          <table>\r\n            <tr>\r\n              <th><div>Total positions</div></th>\r\n              <td style={styledCell}><div style={styledDiv}>{this.state.positionsQty}</div></td>\r\n            </tr>\r\n            <tr>\r\n              <th>Total shares</th>\r\n              <td style={styledCell}><div style={styledDiv}>{this.state.sharesQty}</div></td>\r\n            </tr>\r\n            <tr>\r\n              <th>Funds Invested</th>\r\n              <td style={styledCell}><div style={styledDiv}>{this.state.positionCosTotal}</div></td>\r\n            </tr>\r\n            <tr>\r\n              <th>Portfolio current value</th>\r\n              <td style={styledCell}><div style={styledDiv}>{this.state.positionsValueTotal}</div></td>\r\n            </tr>\r\n            <tr>\r\n              <th>Change</th>\r\n              <td style={styledCell}><div style={this.colored(this.state.changeTotal)}>{this.state.changeTotal}</div></td>\r\n            </tr>\r\n            <tr>\r\n              <th>Change %</th>\r\n              <td style={styledCell}><div style={this.colored(this.state.changeTotal)}>{this.state.changePercentageTotal}</div></td>\r\n            </tr>\r\n          </table>\r\n      \r\n        </div>\r\n        <div className=\"position-display-right\">\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Ticker</th>\r\n                <th>Shares</th>\r\n                <th>Invested</th>\r\n                <th>Carrent Value</th>\r\n                <th>Change</th>\r\n                <th>Change %</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {outp}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    )\r\n   }\r\n}\r\nconst styledDiv = {\r\n  textAlign:\"center\",\r\n  padding:\"0.5rem\"\r\n}\r\n\r\nconst styledCell = {\r\n  textAlign:\"center\",\r\n  padding:\"0rem\"\r\n}\r\n\r\n  \r\n\r\n"]},"metadata":{},"sourceType":"module"}