{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/yavit/OneDrive/Desktop/finProject/proreplica/proreplica_react/src/portfolioGrid/PosProps.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Charts from '../components/Charts';\nexport default class PosProps extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.colored = value => {\n      if (value > 0) {\n        return {\n          backgroundColor: \"green\",\n          fontSize: \"0.9rem\",\n          fontWeight: \"500\",\n          padding: \"0px\",\n          textAlign: \"center\"\n        };\n      } else if (value < 0) {\n        return {\n          backgroundColor: \"rgb(250, 85, 85)\",\n          fontSize: \"0.9rem\",\n          fontWeight: \"500\",\n          padding: \"0px\",\n          textAlign: \"center\"\n        };\n      } else {\n        return {\n          color: \"yellow\",\n          fontSize: \"0.9rem\",\n          fontWeight: \"500\",\n          padding: \"0px\",\n          textAlign: \"center\"\n        };\n      }\n    };\n  }\n\n  render() {\n    const roundTo = require('round-to');\n\n    const _this$props$item = this.props.item,\n          ticker = _this$props$item.ticker,\n          shares = _this$props$item.shares,\n          positionCost = _this$props$item.positionCost,\n          positionValue = _this$props$item.positionValue,\n          margin = _this$props$item.margin,\n          marginPercentage = _this$props$item.marginPercentage;\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      style: btnSymStyle,\n      onClick: () => {\n        this.props.setChartsTicker(ticker);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, ticker)), React.createElement(\"td\", {\n      style: styledCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: styledDiv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, shares)), React.createElement(\"td\", {\n      style: styledCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: styledDiv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, positionCost)), React.createElement(\"td\", {\n      style: styledCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: styledDiv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, positionValue)), React.createElement(\"td\", {\n      style: styledCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: this.colored(margin),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, margin)), React.createElement(\"td\", {\n      style: styledCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: this.colored(marginPercentage),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, marginPercentage)), React.createElement(\"td\", {\n      style: styledCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"chart\")));\n  }\n\n}\nconst btnSymStyle = {\n  background: 'transparent',\n  border: 'none',\n  color: 'skyblue',\n  fontSize: '0.7rem'\n};\nconst styledDiv = {\n  textAlign: \"center\",\n  padding: \"0.2rem\"\n};\nconst styledCell = {\n  textAlign: \"center\",\n  padding: \"0rem\"\n};","map":{"version":3,"sources":["/mnt/c/Users/yavit/OneDrive/Desktop/finProject/proreplica/proreplica_react/src/portfolioGrid/PosProps.js"],"names":["React","Component","Link","Charts","PosProps","colored","value","backgroundColor","fontSize","fontWeight","padding","textAlign","color","render","roundTo","require","props","item","ticker","shares","positionCost","positionValue","margin","marginPercentage","btnSymStyle","setChartsTicker","styledCell","styledDiv","background","border"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,eAAe,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAC5CI,OAD4C,GACjCC,KAAD,IAAU;AAChB,UAAGA,KAAK,GAAC,CAAT,EAAY;AACV,eAAO;AAACC,UAAAA,eAAe,EAAC,OAAjB;AAAyBC,UAAAA,QAAQ,EAAC,QAAlC;AAA2CC,UAAAA,UAAU,EAAC,KAAtD;AAA4DC,UAAAA,OAAO,EAAC,KAApE;AAA0EC,UAAAA,SAAS,EAAC;AAApF,SAAP;AACA,OAFF,MAEQ,IAAGL,KAAK,GAAC,CAAT,EAAY;AAChB,eAAO;AAACC,UAAAA,eAAe,EAAC,kBAAjB;AAAoCC,UAAAA,QAAQ,EAAC,QAA7C;AAAsDC,UAAAA,UAAU,EAAC,KAAjE;AAAuEC,UAAAA,OAAO,EAAC,KAA/E;AAAqFC,UAAAA,SAAS,EAAC;AAA/F,SAAP;AACD,OAFK,MAEC;AACL,eAAO;AAACC,UAAAA,KAAK,EAAE,QAAR;AAAiBJ,UAAAA,QAAQ,EAAC,QAA1B;AAAmCC,UAAAA,UAAU,EAAC,KAA9C;AAAoDC,UAAAA,OAAO,EAAC,KAA5D;AAAkEC,UAAAA,SAAS,EAAC;AAA5E,SAAP;AACD;AACF,KATuC;AAAA;;AAW5CE,EAAAA,MAAM,GAAG;AACL,UAAMC,OAAO,GAAGC,OAAO,CAAC,UAAD,CAAvB;;AADK,6BAE2E,KAAKC,KAAL,CAAWC,IAFtF;AAAA,UAEEC,MAFF,oBAEEA,MAFF;AAAA,UAEUC,MAFV,oBAEUA,MAFV;AAAA,UAEkBC,YAFlB,oBAEkBA,YAFlB;AAAA,UAEgCC,aAFhC,oBAEgCA,aAFhC;AAAA,UAE+CC,MAF/C,oBAE+CA,MAF/C;AAAA,UAEuDC,gBAFvD,oBAEuDA,gBAFvD;AAIL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI;AAAQ,MAAA,KAAK,EAAEC,WAAf;AAA4B,MAAA,OAAO,EAAE,MAAI;AAAC,aAAKR,KAAL,CAAWS,eAAX,CAA2BP,MAA3B;AAAmC,OAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgFA,MAAhF,CAAJ,CADJ,EAEI;AAAI,MAAA,KAAK,EAAEQ,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuB;AAAK,MAAA,KAAK,EAAEC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBR,MAAxB,CAAvB,CAFJ,EAGI;AAAI,MAAA,KAAK,EAAEO,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuB;AAAK,MAAA,KAAK,EAAEC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBP,YAAxB,CAAvB,CAHJ,EAII;AAAI,MAAA,KAAK,EAAEM,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuB;AAAK,MAAA,KAAK,EAAEC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBN,aAAxB,CAAvB,CAJJ,EAKI;AAAI,MAAA,KAAK,EAAEK,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuB;AAAK,MAAA,KAAK,EAAE,KAAKrB,OAAL,CAAaiB,MAAb,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCA,MAAnC,CAAvB,CALJ,EAMI;AAAI,MAAA,KAAK,EAAEI,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuB;AAAK,MAAA,KAAK,EAAE,KAAKrB,OAAL,CAAakB,gBAAb,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6CA,gBAA7C,CAAvB,CANJ,EAOI;AAAI,MAAA,KAAK,EAAEG,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAvB,CAPJ,CADJ;AAWH;;AA1B2C;AA4BhD,MAAMF,WAAW,GAAE;AACfI,EAAAA,UAAU,EAAC,aADI;AAEfC,EAAAA,MAAM,EAAE,MAFO;AAGfjB,EAAAA,KAAK,EAAE,SAHQ;AAIfJ,EAAAA,QAAQ,EAAE;AAJK,CAAnB;AAMA,MAAMmB,SAAS,GAAG;AACdhB,EAAAA,SAAS,EAAC,QADI;AAEdD,EAAAA,OAAO,EAAC;AAFM,CAAlB;AAIA,MAAMgB,UAAU,GAAG;AACff,EAAAA,SAAS,EAAC,QADK;AAEfD,EAAAA,OAAO,EAAC;AAFO,CAAnB","sourcesContent":["import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Charts from '../components/Charts'\r\n\r\nexport default class PosProps extends Component {\r\n    colored = (value)=> {\r\n        if(value>0) {\r\n          return {backgroundColor:\"green\",fontSize:\"0.9rem\",fontWeight:\"500\",padding:\"0px\",textAlign:\"center\"}\r\n         } else if(value<0) {\r\n            return {backgroundColor:\"rgb(250, 85, 85)\",fontSize:\"0.9rem\",fontWeight:\"500\",padding:\"0px\",textAlign:\"center\"}\r\n          } else {\r\n            return {color: \"yellow\",fontSize:\"0.9rem\",fontWeight:\"500\",padding:\"0px\",textAlign:\"center\"}\r\n          }\r\n        }\r\n    \r\n    render() {\r\n        const roundTo = require('round-to')\r\n        const {ticker, shares, positionCost, positionValue, margin, marginPercentage} = this.props.item;\r\n        \r\n        return (\r\n            <tr>\r\n                <th><button style={btnSymStyle} onClick={()=>{this.props.setChartsTicker(ticker)}}>{ticker}</button></th>\r\n                <td style={styledCell}><div style={styledDiv}>{shares}</div></td>\r\n                <td style={styledCell}><div style={styledDiv}>{positionCost}</div></td>\r\n                <td style={styledCell}><div style={styledDiv}>{positionValue}</div></td>\r\n                <td style={styledCell}><div style={this.colored(margin)}>{margin}</div></td>\r\n                <td style={styledCell}><div style={this.colored(marginPercentage)}>{marginPercentage}</div></td>\r\n                <td style={styledCell}><button>chart</button></td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\nconst btnSymStyle ={\r\n    background:'transparent',\r\n    border: 'none',\r\n    color: 'skyblue',\r\n    fontSize: '0.7rem'\r\n}\r\nconst styledDiv = {\r\n    textAlign:\"center\",\r\n    padding:\"0.2rem\"\r\n  }\r\nconst styledCell = {\r\n    textAlign:\"center\",\r\n    padding:\"0rem\"\r\n  }"]},"metadata":{},"sourceType":"module"}