{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/yavit/OneDrive/Desktop/EquityEcho/proreplica/proreplica_react/src/util/SelectItem.js\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport apiCall from './apiCall';\nconst options = [{\n  value: 'chocolate',\n  label: 'Chocolate'\n}, {\n  value: 'strawberry',\n  label: 'Strawberry'\n}, {\n  value: 'vanilla',\n  label: 'Vanilla'\n}];\nexport default class SelectItem extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedOption: null,\n      options: []\n    };\n\n    this.options = items => {\n      return items.map((item, index) => ({\n        value: item,\n        label: item\n      }));\n    };\n\n    this.handleChange = selectedOption => {\n      this.setState({\n        selectedOption\n      });\n      console.log(\"Option selected:\", selectedOption);\n    };\n  }\n\n  getStocksList() {\n    console.log(\"getStocksList function running\");\n    const endpoint = \"/api/stocks/all\";\n    const promise = apiCall(endpoint, 'get');\n    promise.then(blob => blob.json()).then(json => {\n      this.setState({\n        symbols: json.symbols\n      });\n    });\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount\");\n\n    if (this.state.options && this.state.options.length === 0) {\n      options(this.getStocksList());\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          selectedOption = _this$state.selectedOption,\n          options = _this$state.options;\n    console.log(\"options\", options);\n    return React.createElement(Select, {\n      value: selectedOption,\n      onChange: this.handleChange,\n      options: options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/mnt/c/Users/yavit/OneDrive/Desktop/EquityEcho/proreplica/proreplica_react/src/util/SelectItem.js"],"names":["React","Component","Select","apiCall","options","value","label","SelectItem","state","selectedOption","items","map","item","index","handleChange","setState","console","log","getStocksList","endpoint","promise","then","blob","json","symbols","componentDidMount","length","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAGA,MAAMC,OAAO,GAAG,CACZ;AAAEC,EAAAA,KAAK,EAAE,WAAT;AAAsBC,EAAAA,KAAK,EAAE;AAA7B,CADY,EAEZ;AAAED,EAAAA,KAAK,EAAE,YAAT;AAAuBC,EAAAA,KAAK,EAAE;AAA9B,CAFY,EAGZ;AAAED,EAAAA,KAAK,EAAE,SAAT;AAAoBC,EAAAA,KAAK,EAAE;AAA3B,CAHY,CAAhB;AAMA,eAAe,MAAMC,UAAN,SAAyBN,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAEhDO,KAFgD,GAExC;AACNC,MAAAA,cAAc,EAAE,IADV;AAENL,MAAAA,OAAO,EAAC;AAFF,KAFwC;;AAAA,SAkBhDA,OAlBgD,GAkBrCM,KAAD,IAAW;AACnB,aAAOA,KAAK,CAACC,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,MACf;AAACR,QAAAA,KAAK,EAACO,IAAP;AAAaN,QAAAA,KAAK,EAAEM;AAApB,OADe,CAAV,CAAP;AAID,KAvB+C;;AAAA,SAwB9CE,YAxB8C,GAwB/BL,cAAc,IAAI;AAC/B,WAAKM,QAAL,CAAc;AAAEN,QAAAA;AAAF,OAAd;AACAO,MAAAA,OAAO,CAACC,GAAR,qBAAgCR,cAAhC;AACD,KA3B6C;AAAA;;AAOhDS,EAAAA,aAAa,GAAG;AACdF,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACA,UAAME,QAAQ,oBAAd;AACA,UAAMC,OAAO,GAAGjB,OAAO,CAACgB,QAAD,EAAU,KAAV,CAAvB;AACAC,IAAAA,OAAO,CAACC,IAAR,CAAaC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAArB,EAAkCF,IAAlC,CAAuCE,IAAI,IAAI;AAC7C,WAAKR,QAAL,CAAc;AACZS,QAAAA,OAAO,EAAED,IAAI,CAACC;AADF,OAAd;AAGD,KAJD;AAKD;;AAaCC,EAAAA,iBAAiB,GAAG;AAClBT,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;;AACA,QAAG,KAAKT,KAAL,CAAWJ,OAAX,IAAsB,KAAKI,KAAL,CAAWJ,OAAX,CAAmBsB,MAAnB,KAA4B,CAArD,EAAwD;AACtDtB,MAAAA,OAAO,CAAC,KAAKc,aAAL,EAAD,CAAP;AACD;AACF;;AACDS,EAAAA,MAAM,GAAG;AAAA,wBAC6B,KAAKnB,KADlC;AAAA,UACCC,cADD,eACCA,cADD;AAAA,UACiBL,OADjB,eACiBA,OADjB;AAEPY,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBb,OAAtB;AAIA,WACE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAEK,cADT;AAEE,MAAA,QAAQ,EAAE,KAAKK,YAFjB;AAGE,MAAA,OAAO,EAAEV,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;;AAhD6C","sourcesContent":["import React, { Component } from 'react'\r\nimport Select from 'react-select';\r\nimport apiCall from './apiCall';\r\n\r\n\r\nconst options = [\r\n    { value: 'chocolate', label: 'Chocolate' },\r\n    { value: 'strawberry', label: 'Strawberry' },\r\n    { value: 'vanilla', label: 'Vanilla' },\r\n  ];\r\n\r\nexport default class SelectItem extends Component {\r\n\r\n  state = {\r\n    selectedOption: null,\r\n    options:[]\r\n  };\r\n\r\n  getStocksList() {\r\n    console.log(\"getStocksList function running\")\r\n    const endpoint = `/api/stocks/all`\r\n    const promise = apiCall(endpoint,'get')\r\n    promise.then(blob => blob.json()).then(json => {\r\n      this.setState({\r\n        symbols: json.symbols\r\n      })\r\n    })\r\n  }\r\n\r\n  options = (items) => {\r\n    return items.map((item, index)=>(\r\n      {value:item, label: item}\r\n    )\r\n    )\r\n  }\r\n    handleChange = selectedOption => {\r\n      this.setState({ selectedOption });\r\n      console.log(`Option selected:`, selectedOption);\r\n    };\r\n\r\n    componentDidMount() {\r\n      console.log(\"componentDidMount\")\r\n      if(this.state.options && this.state.options.length===0) {\r\n        options(this.getStocksList())\r\n      }\r\n    }\r\n    render() {\r\n      const { selectedOption, options } = this.state;\r\n      console.log(\"options\",options)\r\n      \r\n\r\n   \r\n      return (\r\n        <Select\r\n          value={selectedOption}\r\n          onChange={this.handleChange}\r\n          options={options}\r\n        />\r\n      );\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}