{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/yavit/OneDrive/Desktop/EquityEcho/proreplica/proreplica_react/src/quoteGrid/Quotes.js\";\nimport React, { Component } from 'react';\nimport apiCall from '../util/apiCall';\nimport QuoteItem from './QuoteItem';\nexport default class Quotes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeQuotes: null,\n      activeTickers: [],\n      error: \"\"\n    };\n  }\n\n  checkList() {\n    const endpoint = \"/api/active/list\";\n    const promise = apiCall(endpoint, 'get');\n    promise.then(blob => blob.json()).then(json => {\n      this.setState({\n        activeTickers: json.symbols\n      });\n    });\n  }\n\n  getQuotes(symbols) {\n    const activeTickers = symbols.join();\n    const endpoint = \"/api/list/\".concat(activeTickers, \"/quote\");\n    const promise = apiCall(endpoint, 'get');\n    promise.then(blob => blob.json()).then(json => {\n      this.setState({\n        activeQuotes: json.quotes\n      });\n    });\n  }\n\n  componentWillMount() {\n    this.checkList();\n    this.getQuotes(this.props.activeTickers);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.activeTickers !== prevProps.activeTickers) {\n      this.setState({\n        activeTickers: this.props.activeTickers\n      });\n      this.getQuotes(this.props.activeTickers);\n    } else if (this.state.activeQuotes === null && this.state.activeTickers || this.state.activeQuotes === undefined && this.state.activeTickers) {\n      this.getQuotes(this.state.activeTickers);\n    }\n  }\n\n  render() {\n    let outp = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    });\n\n    if (this.state.activeQuotes === null || this.state.activeQuotes === undefined) {\n      outp = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      });\n    } else {\n      outp = React.createElement(QuoteItem, {\n        setChartsTicker: this.props.setChartsTicker,\n        items: this.state.activeQuotes,\n        delSymbol: this.props.delSymbol,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"latestPrice\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"open\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"close\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"high\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"low\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"latestVolume\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"change\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"changePercent\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"marketCap\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"peRatio\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"week52High\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"week52Low\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"ytdChange\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, outp));\n  }\n\n}","map":{"version":3,"sources":["/mnt/c/Users/yavit/OneDrive/Desktop/EquityEcho/proreplica/proreplica_react/src/quoteGrid/Quotes.js"],"names":["React","Component","apiCall","QuoteItem","Quotes","constructor","props","state","activeQuotes","activeTickers","error","checkList","endpoint","promise","then","blob","json","setState","symbols","getQuotes","join","quotes","componentWillMount","componentDidUpdate","prevProps","undefined","render","outp","setChartsTicker","delSymbol"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport apiCall from '../util/apiCall';\r\n\r\nimport QuoteItem from './QuoteItem'\r\n\r\nexport default class Quotes extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeQuotes: null,\r\n      activeTickers : [],\r\n      error: \"\"\r\n    };\r\n  }\r\n  checkList() {\r\n    const endpoint = `/api/active/list`\r\n    const promise = apiCall(endpoint,'get')\r\n    promise.then(blob => blob.json()).then(json => {\r\n      this.setState({\r\n        activeTickers: json.symbols\r\n      })\r\n    })\r\n  }\r\n  getQuotes (symbols) {\r\n    const activeTickers = symbols.join()\r\n    const endpoint = `/api/list/${activeTickers}/quote`\r\n    const promise = apiCall(endpoint,'get')\r\n    promise.then(blob => blob.json()).then (json=> {\r\n      this.setState({\r\n        activeQuotes: json.quotes\r\n      })\r\n    })\r\n  }\r\n  componentWillMount() {\r\n    this.checkList();\r\n    this.getQuotes(this.props.activeTickers);\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if(this.props.activeTickers !== prevProps.activeTickers) {\r\n      this.setState({activeTickers : this.props.activeTickers})\r\n      this.getQuotes(this.props.activeTickers);\r\n    } else if(this.state.activeQuotes === null && this.state.activeTickers\r\n        || this.state.activeQuotes === undefined && this.state.activeTickers) {\r\n      this.getQuotes(this.state.activeTickers)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let outp = (<div></div>)\r\n    if(this.state.activeQuotes === null || this.state.activeQuotes === undefined) {\r\n      outp = (<div></div>)\r\n    } else {\r\n      outp = (\r\n        <QuoteItem\r\n          setChartsTicker={this.props.setChartsTicker}\r\n          items = {this.state.activeQuotes}\r\n          delSymbol = {this.props.delSymbol}\r\n        />\r\n      )\r\n    }\r\n    return (\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th></th>\r\n            <th>latestPrice</th>\r\n            <th>open</th>\r\n            <th>close</th>\r\n            <th>high</th>\r\n            <th>low</th>\r\n            <th>latestVolume</th>\r\n            <th>change</th>\r\n            <th>changePercent</th>\r\n            <th>marketCap</th>\r\n            <th>peRatio</th>\r\n            <th>week52High</th>\r\n            <th>week52Low</th>\r\n            <th>ytdChange</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {outp}\r\n        </tbody>\r\n      </table>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}