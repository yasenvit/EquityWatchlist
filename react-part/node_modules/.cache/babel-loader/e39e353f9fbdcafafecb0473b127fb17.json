{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/yavit/OneDrive/Desktop/finProject/proreplica/proreplica_react/src/portfolioGrid/Positions.js\";\nimport React, { Component } from 'react';\nimport apiCall from '../util/apiCall';\nimport '../styles/table.css';\nimport '../styles/style.css';\nimport PosItem from './PosItem';\nexport default class Positions extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      investCost: null,\n      currentCost: null,\n      positionsQty: null,\n      sharesQty: null,\n      change: null,\n      changePrcntg: null,\n      positions: [],\n      error: \"\"\n    };\n\n    this.colored = value => {\n      if (value > 0) {\n        return {\n          color: \"green\",\n          fontWeight: \"400\",\n          padding: \"0px\"\n        };\n      } else if (value < 0) {\n        return {\n          color: \"red\",\n          fontWeight: \"400\",\n          padding: \"0px\"\n        };\n      } else {\n        return {\n          color: \"yellow\",\n          fontWeight: \"400\",\n          padding: \"0px\"\n        };\n      }\n    };\n  }\n\n  getPositions() {\n    console.log(\"GET POSITIONS FUNCTION\");\n    console.log(\"apikey:\", window.sessionStorage.getItem(\"apikey\"));\n    const endpoint = \"/api/\".concat(window.sessionStorage.getItem(\"apikey\"), \"/positions\");\n    const promise = apiCall(endpoint, 'get');\n    promise.then(blob => blob.json()).then(json => {\n      this.setState({\n        positions: json.positions\n      });\n    });\n  }\n\n  getSummary() {\n    console.log(\"GET SUMMARY FUNCTION\");\n    console.log(\"apikey:\", window.sessionStorage.getItem(\"apikey\"));\n    const endpoint = \"/api/\".concat(window.sessionStorage.getItem(\"apikey\"), \"/positions/summary\");\n    const promise = apiCall(endpoint, 'get');\n    promise.then(blob => blob.json()).then(json => {\n      this.setState({\n        positions: json.positions,\n        investCostTotal: json.investCostTotal,\n        currentValueTotal: json.currentValueTotal,\n        positionsQty: json.positionsQty,\n        sharesQty: json.sharesQty,\n        changeTotal: json.changeTotal,\n        changePercentageTotal: json.changePercentageTotal\n      });\n    });\n  }\n\n  componentWillMount() {\n    console.log(\"POSITIONSS WILL- mount START\");\n    this.getSummary();\n    console.log(\"POSITIONS WILL -mount END\");\n  }\n\n  render() {\n    console.log(\"POSITIONSS RENDER START\");\n    console.log(\"State Positions\", this.state.positions);\n\n    const roundTo = require('round-to');\n\n    let outp = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    });\n\n    if (this.state.positions === [] || this.state.positions === undefined) {\n      outp = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"NOTHING TO DISPLAY\");\n    } else {\n      outp = React.createElement(PosItem, {\n        setChartsTicker: this.props.setChartsTicker,\n        items: this.state.positions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      });\n    }\n\n    console.log(\"positions RENDER END\");\n    return React.createElement(\"div\", {\n      className: \"position-display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"position-display-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Total positions\"), React.createElement(\"td\", {\n      style: styledCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.state.positionsQty)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Total shares\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.state.sharesQty)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Funds Invested\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, this.state.investCostTotal)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Portfolio current value\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.state.currentValueTotal)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Change\"), React.createElement(\"td\", {\n      style: this.colored(this.state.changeTotal),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, this.state.changeTotal)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Change %\"), React.createElement(\"td\", {\n      style: this.state.changePercentageTotal < 0 ? {\n        color: \"red\"\n      } : {\n        color: \"green\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, this.state.changePercentageTotal)))), React.createElement(\"div\", {\n      className: \"position-display-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Ticker\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Shares\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Invested\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Carrent Value\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Change\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Change %\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, outp))));\n  }\n\n}\nconst styledCell = {\n  textAlign: \"end\",\n  padding: \"0.2rem\"\n};\nconst positiveCell = {\n  backgroundColor: \"green\"\n};","map":{"version":3,"sources":["/mnt/c/Users/yavit/OneDrive/Desktop/finProject/proreplica/proreplica_react/src/portfolioGrid/Positions.js"],"names":["React","Component","apiCall","PosItem","Positions","state","investCost","currentCost","positionsQty","sharesQty","change","changePrcntg","positions","error","colored","value","color","fontWeight","padding","getPositions","console","log","window","sessionStorage","getItem","endpoint","promise","then","blob","json","setState","getSummary","investCostTotal","currentValueTotal","changeTotal","changePercentageTotal","componentWillMount","render","roundTo","require","outp","undefined","props","setChartsTicker","styledCell","textAlign","positiveCell","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport apiCall from '../util/apiCall';\r\nimport '../styles/table.css';\r\nimport '../styles/style.css';\r\nimport PosItem from './PosItem'\r\n\r\nexport default class Positions extends Component {\r\n  state = {\r\n    \r\n    investCost: null,\r\n    currentCost: null,\r\n    positionsQty: null,\r\n    sharesQty: null,\r\n    change: null,\r\n    changePrcntg: null,\r\n    positions: [],\r\n    error: \"\"\r\n  }\r\n  \r\n  getPositions() {\r\n    console.log(\"GET POSITIONS FUNCTION\")\r\n    console.log(\"apikey:\",window.sessionStorage.getItem(\"apikey\"))\r\n    const endpoint = `/api/${window.sessionStorage.getItem(\"apikey\")}/positions`\r\n    const promise = apiCall(endpoint,'get')\r\n      promise.then(blob => blob.json()).then (json=> {\r\n        this.setState({\r\n          positions: json.positions\r\n       })\r\n      })\r\n  }\r\n  getSummary() {\r\n    console.log(\"GET SUMMARY FUNCTION\")\r\n    console.log(\"apikey:\",window.sessionStorage.getItem(\"apikey\"))\r\n    const endpoint = `/api/${window.sessionStorage.getItem(\"apikey\")}/positions/summary`\r\n    const promise = apiCall(endpoint,'get')\r\n      promise.then(blob => blob.json()).then (json=> {\r\n        this.setState({\r\n          positions: json.positions,\r\n          investCostTotal: json.investCostTotal,\r\n          currentValueTotal: json.currentValueTotal,\r\n          positionsQty: json.positionsQty,\r\n          sharesQty: json.sharesQty,\r\n          changeTotal: json.changeTotal,\r\n          changePercentageTotal: json.changePercentageTotal\r\n       })\r\n      })\r\n  }        \r\n  componentWillMount() {\r\n    console.log(\"POSITIONSS WILL- mount START\")\r\n    this.getSummary()\r\n    console.log(\"POSITIONS WILL -mount END\")\r\n  }\r\n  colored = (value)=> {\r\n    if(value>0) {\r\n      return {\r\n        color:\"green\",\r\n        fontWeight:\"400\",\r\n        padding:\"0px\"\r\n      }\r\n     } else if(value<0) {\r\n        return {\r\n          color:\"red\",\r\n          fontWeight:\"400\",\r\n          padding:\"0px\"\r\n        }\r\n      } else {\r\n        return {\r\n          color: \"yellow\",\r\n          fontWeight:\"400\",\r\n          padding:\"0px\"\r\n        }\r\n      }\r\n    }\r\n\r\n  render() {\r\n    console.log(\"POSITIONSS RENDER START\")\r\n    console.log(\"State Positions\", this.state.positions)\r\n    const roundTo = require('round-to') \r\n    let outp = (<div></div>)\r\n    \r\n    if(this.state.positions === [] || this.state.positions === undefined) {\r\n      outp = (<div>NOTHING TO DISPLAY</div>)\r\n    } else {\r\n      outp = (\r\n        <PosItem setChartsTicker={this.props.setChartsTicker} items = {this.state.positions}/>\r\n      )\r\n    }\r\n    console.log(\"positions RENDER END\")\r\n    return (\r\n      <div className=\"position-display\">\r\n        <div className=\"position-display-left\">\r\n          <table>\r\n                <tr>\r\n                <th>Total positions</th>\r\n                <td style={styledCell}>{this.state.positionsQty}</td>\r\n                </tr>\r\n                <tr>\r\n                <th>Total shares</th>\r\n                <td>{this.state.sharesQty}</td>\r\n                </tr>\r\n                <tr>\r\n                <th>Funds Invested</th>\r\n                <td>{this.state.investCostTotal}</td>\r\n                </tr>\r\n                <tr>\r\n                <th>Portfolio current value</th>\r\n                <td>{this.state.currentValueTotal}</td>\r\n                </tr>\r\n                <tr>\r\n                <th>Change</th>\r\n                <td style={this.colored(this.state.changeTotal)}>{this.state.changeTotal}</td>\r\n                </tr>\r\n                <tr>\r\n                <th>Change %</th>\r\n                <td style={this.state.changePercentageTotal<0?{color:\"red\"}:{color:\"green\"}}>{this.state.changePercentageTotal}</td>\r\n                </tr>\r\n          </table>\r\n        \r\n          \r\n        </div>\r\n        <div className=\"position-display-right\">\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Ticker</th>\r\n                <th>Shares</th>\r\n                <th>Invested</th>\r\n                <th>Carrent Value</th>\r\n                <th>Change</th>\r\n                <th>Change %</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {outp}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    )\r\n   }\r\n}\r\n   const styledCell = {\r\n    textAlign:\"end\",\r\n    padding:\"0.2rem\"\r\n  }\r\n  const positiveCell = {\r\n    backgroundColor:\"green\"\r\n  }\r\n  \r\n\r\n"]},"metadata":{},"sourceType":"module"}