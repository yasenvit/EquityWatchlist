{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/yavit/OneDrive/Desktop/EquityEcho/WatchlistFundamentals/react-part/src/components/screeners/Mostactive.js\";\nimport React, { Component, Fragment } from 'react';\nimport apiCall from '../../util/apiCall';\nimport ListSheet from './screener/ListSheet';\nimport '../../styles/style.css';\nexport default class Mostactive extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addSymbol = symbol => {\n      const endpoint = \"/api/\".concat(window.sessionStorage.getItem(\"apikey\"), \"/active/add/\").concat(symbol);\n      const promise = apiCall(endpoint, 'get');\n      promise.then(blob => blob.json()).then(json => {\n        if (json.error.length > 0) {\n          alert(json.error);\n        }\n\n        this.setState({\n          activeTickers: json.symbols\n        });\n        this.getQuotes(this.state.activeTickers);\n      });\n    };\n\n    this.delSymbol = symbols => {\n      const endpoint = \"/api/\".concat(window.sessionStorage.getItem(\"apikey\"), \"/active/delete/\").concat(symbols);\n      const promise = apiCall(endpoint, 'get');\n      promise.then(blob => blob.json()).then(json => {\n        this.setState({\n          activeTickers: json.symbols\n        });\n\n        if (json.symbols && json.symbols.length > 0) {\n          this.getQuotes(this.state.activeTickers);\n        } else {\n          this.setState({\n            activeQuotes: []\n          });\n        }\n      });\n    };\n\n    this.state = {\n      activeQuotes: [],\n      activeTickers: [],\n      error: \"\"\n    };\n    this.checkList();\n  }\n\n  checkList() {\n    const endpoint = \"/api/\".concat(window.sessionStorage.getItem(\"apikey\"), \"/active/list\");\n    const promise = apiCall(endpoint, 'get');\n    promise.then(blob => blob.json()).then(json => {\n      this.setState({\n        activeTickers: json.symbols\n      });\n    });\n  }\n\n  getQuotes(symbols) {\n    if (symbols) {\n      const activeTickers = symbols.join();\n      const endpoint = \"/api/list/\".concat(activeTickers, \"/quote\");\n      const promise = apiCall(endpoint, 'get');\n      promise.then(blob => blob.json()).then(json => {\n        this.setState({\n          activeQuotes: json.quotes\n        });\n      });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (this.state.activeTickers) {\n      if (!this.state.activeQuotes || this.state.activeQuotes.length === 0) {\n        this.getQuotes(this.state.activeTickers);\n      }\n    }\n  }\n\n  render() {\n    let output = React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    });\n\n    if (this.state.activeQuotes) {\n      output = React.createElement(ListSheet, {\n        setChartsTicker: this.props.setChartsTicker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navheader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"watchlist-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, output));\n  }\n\n}","map":{"version":3,"sources":["/mnt/c/Users/yavit/OneDrive/Desktop/EquityEcho/WatchlistFundamentals/react-part/src/components/screeners/Mostactive.js"],"names":["React","Component","Fragment","apiCall","ListSheet","Mostactive","constructor","props","addSymbol","symbol","endpoint","window","sessionStorage","getItem","promise","then","blob","json","error","length","alert","setState","activeTickers","symbols","getQuotes","state","delSymbol","activeQuotes","checkList","join","quotes","componentDidUpdate","prevState","render","output","setChartsTicker"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport apiCall from '../../util/apiCall';\r\nimport ListSheet from './screener/ListSheet'\r\nimport '../../styles/style.css';\r\n\r\nexport default class Mostactive extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeQuotes: [],\r\n      activeTickers : [],\r\n      error: \"\"\r\n    };\r\n    this.checkList()\r\n  }\r\n\r\n  checkList() {\r\n    const endpoint = `/api/${window.sessionStorage.getItem(\"apikey\")}/active/list`\r\n    const promise = apiCall(endpoint,'get')\r\n    promise.then(blob => blob.json()).then(json => {\r\n      this.setState({\r\n        activeTickers: json.symbols\r\n      })\r\n    })\r\n  }\r\n\r\n  getQuotes (symbols) {\r\n    if(symbols) {\r\n    const activeTickers = symbols.join()\r\n    const endpoint = `/api/list/${activeTickers}/quote`\r\n    const promise = apiCall(endpoint,'get')\r\n    promise.then(blob => blob.json()).then (json=> {\r\n      this.setState({\r\n        activeQuotes: json.quotes\r\n      })\r\n    })\r\n  }}\r\n\r\n  addSymbol=(symbol) =>{\r\n    const endpoint = `/api/${window.sessionStorage.getItem(\"apikey\")}/active/add/${symbol}`\r\n    const promise = apiCall(endpoint,'get')\r\n    promise.then(blob => blob.json()).then(json => {\r\n    if(json.error.length>0) {\r\n      alert(json.error)\r\n    }\r\n    this.setState({activeTickers: json.symbols})\r\n    this.getQuotes(this.state.activeTickers)\r\n     })\r\n  }\r\n\r\n  delSymbol=(symbols) =>{\r\n    const endpoint = `/api/${window.sessionStorage.getItem(\"apikey\")}/active/delete/${symbols}`\r\n    const promise = apiCall(endpoint,'get')\r\n    promise.then(blob => blob.json()).then(json => {\r\n    this.setState({activeTickers: json.symbols})\r\n    if(json.symbols && json.symbols.length>0) {\r\n    this.getQuotes(this.state.activeTickers)\r\n    } else {\r\n      this.setState({activeQuotes: []})\r\n    }\r\n     })\r\n  }\r\n\r\n  componentDidUpdate(prevState) {\r\n      if(this.state.activeTickers){\r\n        if(!this.state.activeQuotes || this.state.activeQuotes.length===0) {\r\n          this.getQuotes(this.state.activeTickers)\r\n        }\r\n      } \r\n    }\r\n  \r\nrender() {\r\n  let output = (<Fragment></Fragment>)\r\n  if(this.state.activeQuotes) {\r\n    output=(\r\n      <ListSheet\r\n        setChartsTicker={this.props.setChartsTicker}\r\n      />\r\n    )\r\n  }\r\n      return (\r\n          <Fragment>\r\n              <div className=\"navheader\">\r\n              </div>\r\n              <div className=\"watchlist-field\">\r\n                  {output}\r\n              </div>\r\n          </Fragment>\r\n      )\r\n  }\r\n}\r\n  "]},"metadata":{},"sourceType":"module"}