{"ast":null,"code":"import _slicedToArray from \"/mnt/c/Users/yavit/OneDrive/Desktop/EquityEcho/WatchlistFundamentals/react-part/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/mnt/c/Users/yavit/OneDrive/Desktop/EquityEcho/WatchlistFundamentals/react-part/src/components/screeners/ListSheet.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Paper from '@material-ui/core/Paper';\nimport { Route, Link } from 'react-router-dom';\n\nfunction createData(symbol, latestPrice, marketCap, avgTotalVolume, peRatio, week52Low, week52High, change, changePercent, ytdChange, open, close, low, high) {\n  return {\n    symbol,\n    latestPrice,\n    marketCap,\n    avgTotalVolume,\n    peRatio,\n    week52Low,\n    week52High,\n    change,\n    changePercent,\n    ytdChange,\n    open,\n    close,\n    low,\n    high\n  };\n}\n\nconst rows = data => {\n  return data.map((obj, index) => createData(obj.symbol, obj.latestPrice, obj.marketCap, obj.avgTotalVolume, obj.peRatio, obj.week52Low, obj.week52High, obj.change, obj.changePercent, obj.ytdChange, obj.open, obj.close, obj.low, obj.high, index));\n};\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nconst headRows = [{\n  id: 'symbol',\n  numeric: false,\n  disablePadding: false,\n  label: 'symbol'\n}, {\n  id: 'latestPrice',\n  numeric: true,\n  disablePadding: false,\n  label: 'latestPrice'\n}, {\n  id: 'marketCap',\n  numeric: true,\n  disablePadding: false,\n  label: 'marketCap'\n}, {\n  id: 'avgTotalVolume',\n  numeric: true,\n  disablePadding: false,\n  label: 'avgTotalVolume'\n}, {\n  id: 'peRatio',\n  numeric: true,\n  disablePadding: false,\n  label: 'peRatio'\n}, {\n  id: 'week52Low',\n  numeric: true,\n  disablePadding: false,\n  label: 'week52Low'\n}, {\n  id: 'week52High',\n  numeric: true,\n  disablePadding: false,\n  label: 'week52High'\n}, {\n  id: 'change',\n  numeric: true,\n  disablePadding: false,\n  label: 'change'\n}, {\n  id: 'changePercent',\n  numeric: true,\n  disablePadding: false,\n  label: 'changePercent'\n}, {\n  id: 'ytdChange',\n  numeric: true,\n  disablePadding: false,\n  label: 'ytdChange'\n}, {\n  id: 'open',\n  numeric: true,\n  disablePadding: false,\n  label: 'open'\n}, {\n  id: 'close',\n  numeric: true,\n  disablePadding: false,\n  label: 'close'\n}, {\n  id: 'low',\n  numeric: true,\n  disablePadding: false,\n  label: 'low'\n}, {\n  id: 'high',\n  numeric: true,\n  disablePadding: false,\n  label: 'high'\n}];\n/******************************************************************************************************/\n\nfunction EnhancedTableHead(props) {\n  const onSelectAllClick = props.onSelectAllClick,\n        order = props.order,\n        orderBy = props.orderBy,\n        numSelected = props.numSelected,\n        rowCount = props.rowCount,\n        onRequestSort = props.onRequestSort;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"add to watchlist\"), headRows.map(row => React.createElement(TableCell, {\n    key: row.id,\n    align: row.numeric ? 'right' : 'left',\n    padding: row.disablePadding ? 'none' : 'default',\n    sortDirection: orderBy === row.id ? order : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(TableSortLabel, {\n    active: orderBy === row.id,\n    direction: order,\n    onClick: createSortHandler(row.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, row.label)))));\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight: theme.palette.type === 'light' ? {\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.secondary.dark\n  },\n  spacer: {\n    flex: '1 1 100%'\n  },\n  actions: {\n    color: theme.palette.text.secondary\n  },\n  title: {\n    flex: '0 0 auto'\n  }\n}));\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  tableWrapper: {\n    overflowX: 'auto'\n  }\n}));\nexport default function EnhancedTable(props) {\n  const listTen = props.listTen,\n        addSymbol = props.addSymbol,\n        setChartsTicker = props.setChartsTicker;\n  const classes = useStyles();\n\n  const _React$useState = React.useState('asc'),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        order = _React$useState2[0],\n        setOrder = _React$useState2[1];\n\n  const _React$useState3 = React.useState('marketCap'),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        orderBy = _React$useState4[0],\n        setOrderBy = _React$useState4[1];\n\n  const _React$useState5 = React.useState([]),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        selected = _React$useState6[0],\n        setSelected = _React$useState6[1];\n\n  const _React$useState7 = React.useState(0),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        page = _React$useState8[0],\n        setPage = _React$useState8[1];\n\n  const _React$useState9 = React.useState(false),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        dense = _React$useState10[0],\n        setDense = _React$useState10[1];\n\n  const _React$useState11 = React.useState(10),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        rowsPerPage = _React$useState12[0],\n        setRowsPerPage = _React$useState12[1];\n\n  function handleRequestSort(event, property) {\n    const isDesc = orderBy === property && order === 'desc';\n    setOrder(isDesc ? 'asc' : 'desc');\n    setOrderBy(property);\n  }\n\n  function handleSelectAllClick(event) {\n    if (event.target.checked) {\n      const newSelecteds = rows(listTen).map(n => n.symbol);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  }\n\n  function handleClick(event, symbol) {\n    const selectedIndex = selected.indexOf(symbol);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, symbol);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  }\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  }\n\n  function handleChangeDense(event) {\n    setDense(event.target.checked);\n  }\n\n  const isSelected = symbol => selected.indexOf(symbol) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows(listTen).length - page * rowsPerPage);\n  console.log(selected);\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.tableWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    \"aria-labelledby\": \"tableTitle\",\n    size: dense ? 'small' : 'medium',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, React.createElement(EnhancedTableHead, {\n    numSelected: selected.length,\n    order: order,\n    orderBy: orderBy // onSelectAllClick={handleSelectAllClick}\n    ,\n    onRequestSort: handleRequestSort,\n    rowCount: rows(listTen).length,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, stableSort(rows(listTen), getSorting(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n    const isItemSelected = isSelected(row.symbol);\n    const labelId = \"enhanced-table-checkbox-\".concat(index);\n    return React.createElement(TableRow, {\n      hover: true,\n      onClick: event => handleClick(event, row.symbol),\n      role: \"checkbox\",\n      \"aria-checked\": isItemSelected,\n      tabIndex: -1,\n      key: row.symbol,\n      selected: isItemSelected,\n      setChartsTicker: setChartsTicker,\n      addSymbol: addSymbol,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      padding: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: e => {\n        addSymbol(row.symbol);\n      },\n      style: {\n        marginRight: \"10px\",\n        width: \"80px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"+ add \")), React.createElement(TableCell, {\n      component: \"th\",\n      id: labelId,\n      scope: \"row\",\n      padding: \"none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(Link, {\n      style: {\n        textDecoration: \"none\",\n        color: \"rgb(28, 104, 243)\"\n      },\n      onClick: e => {\n        setChartsTicker(row.symbol);\n      },\n      to: \"/dashboard/lookup/summary/\".concat(row.symbol),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, row.symbol)), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, row.latestPrice), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, row.marketCap), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, row.avgTotalVolume), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, row.peRatio), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, row.week52Low), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, row.week52High), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, row.change), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, row.changePercent), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, row.ytdChange), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, row.open), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, row.close), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, row.low), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, row.high));\n  }), emptyRows > 0 && React.createElement(TableRow, {\n    style: {\n      height: 49 * emptyRows\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    colSpan: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }))))), React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25],\n    component: \"div\",\n    count: rows(listTen).length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    backIconButtonProps: {\n      'aria-label': 'Previous Page'\n    },\n    nextIconButtonProps: {\n      'aria-label': 'Next Page'\n    },\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/mnt/c/Users/yavit/OneDrive/Desktop/EquityEcho/WatchlistFundamentals/react-part/src/components/screeners/ListSheet.js"],"names":["React","PropTypes","lighten","makeStyles","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TableSortLabel","Paper","Route","Link","createData","symbol","latestPrice","marketCap","avgTotalVolume","peRatio","week52Low","week52High","change","changePercent","ytdChange","open","close","low","high","rows","data","map","obj","index","desc","a","b","orderBy","stableSort","array","cmp","stabilizedThis","el","sort","order","getSorting","headRows","id","numeric","disablePadding","label","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","onRequestSort","createSortHandler","property","event","row","propTypes","number","isRequired","func","string","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","spacer","flex","actions","title","useStyles","width","marginTop","paper","marginBottom","table","minWidth","tableWrapper","overflowX","EnhancedTable","listTen","addSymbol","setChartsTicker","classes","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","handleRequestSort","isDesc","handleSelectAllClick","target","checked","newSelecteds","n","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","value","handleChangeDense","isSelected","emptyRows","Math","min","console","log","isItemSelected","labelId","e","marginRight","textDecoration","height"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {Route, Link} from 'react-router-dom';\r\n\r\n\r\nfunction createData(symbol,latestPrice,marketCap,avgTotalVolume,peRatio,week52Low,week52High,\r\n  change,changePercent,ytdChange,open,close,low,high) {\r\n           return { symbol,latestPrice,marketCap,avgTotalVolume,peRatio,week52Low,week52High,\r\n            change,changePercent,ytdChange,open,close,low,high };\r\n  }\r\n\r\nconst rows = (data) => {\r\n  return data.map((obj, index) => (\r\n    createData(\r\n    obj.symbol, obj.latestPrice, obj.marketCap, obj.avgTotalVolume, obj.peRatio,obj.week52Low,\r\n    obj.week52High, obj.change, obj.changePercent, obj.ytdChange,obj.open, obj.close, obj.low,obj.high, index\r\n    )\r\n  ))\r\n  }\r\n\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nconst headRows = [\r\n    { id: 'symbol', numeric: false, disablePadding: false, label: 'symbol' },\r\n    { id: 'latestPrice', numeric: true, disablePadding: false, label: 'latestPrice' },\r\n    { id: 'marketCap', numeric: true, disablePadding: false, label: 'marketCap' },\r\n    { id: 'avgTotalVolume', numeric: true, disablePadding: false, label: 'avgTotalVolume' },\r\n    { id: 'peRatio', numeric: true, disablePadding: false, label: 'peRatio' },\r\n    { id: 'week52Low', numeric: true, disablePadding: false, label: 'week52Low' },\r\n    { id: 'week52High', numeric: true, disablePadding: false, label: 'week52High'},\r\n    { id: 'change', numeric: true, disablePadding: false, label: 'change'},\r\n    { id: 'changePercent', numeric: true, disablePadding: false, label: 'changePercent'},\r\n    { id: 'ytdChange', numeric: true, disablePadding: false, label: 'ytdChange'},\r\n    { id: 'open', numeric: true, disablePadding: false, label: 'open' },\r\n    { id: 'close', numeric: true, disablePadding: false, label: 'close' },\r\n    { id: 'low', numeric: true, disablePadding: false, label: 'low' },\r\n    { id: 'high', numeric: true, disablePadding: false, label: 'high' }\r\n  ];\r\n\r\n/******************************************************************************************************/\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort} = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell>\r\n          add to watchlist\r\n        </TableCell>\r\n        {headRows.map(row => (\r\n          <TableCell\r\n            key={row.id}\r\n            align={row.numeric ? 'right' : 'left'}\r\n            padding={row.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === row.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === row.id}\r\n              direction={order}\r\n              onClick={createSortHandler(row.id)}\r\n            >\r\n              {row.label}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.string.isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n  };\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  spacer: {\r\n    flex: '1 1 100%',\r\n  },\r\n  actions: {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  title: {\r\n    flex: '0 0 auto',\r\n  },\r\n}));\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable(props) {\r\n  const { listTen, addSymbol, setChartsTicker } = props\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('marketCap');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  function handleRequestSort(event, property) {\r\n    const isDesc = orderBy === property && order === 'desc';\r\n    setOrder(isDesc ? 'asc' : 'desc');\r\n    setOrderBy(property);\r\n  }\r\n\r\n\r\n  function handleSelectAllClick(event) {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows(listTen).map(n => n.symbol);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  }\r\n\r\n  function handleClick(event, symbol) {\r\n\r\n    const selectedIndex = selected.indexOf(symbol);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, symbol);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  }\r\n\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  }\r\n\r\n  function handleChangeDense(event) {\r\n    setDense(event.target.checked);\r\n  }\r\n\r\n  const isSelected = symbol => selected.indexOf(symbol) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows(listTen).length - page * rowsPerPage);\r\nconsole.log(selected)\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              // onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows(listTen).length}\r\n            />\r\n            \r\n            <TableBody>\r\n              {stableSort(rows(listTen), getSorting(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.symbol);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={event => handleClick(event, row.symbol)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.symbol}\r\n                      selected={isItemSelected}\r\n                      setChartsTicker={setChartsTicker}\r\n                      addSymbol={addSymbol}\r\n                    >\r\n                      <TableCell padding=\"\">\r\n                        <button onClick={(e)=>{addSymbol(row.symbol)}} style={{marginRight:\"10px\", width:\"80px\"}}>\r\n                          \r\n                          + add {/*here is end*/}\r\n                          \r\n                        </button>\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        <Link \r\n                          style={{textDecoration:\"none\", color:\"rgb(28, 104, 243)\"}}\r\n                          onClick={(e)=>{setChartsTicker(row.symbol)}}\r\n                          to={`/dashboard/lookup/summary/${row.symbol}`}\r\n                        >\r\n                          {row.symbol}\r\n                        </Link>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.latestPrice}</TableCell>\r\n                      <TableCell align=\"right\">{row.marketCap}</TableCell>\r\n                      <TableCell align=\"right\">{row.avgTotalVolume}</TableCell>\r\n                      <TableCell align=\"right\">{row.peRatio}</TableCell>\r\n                      <TableCell align=\"right\">{row.week52Low}</TableCell>\r\n                      <TableCell align=\"right\">{row.week52High}</TableCell>\r\n                      <TableCell align=\"right\">{row.change}</TableCell>\r\n                      <TableCell align=\"right\">{row.changePercent}</TableCell>\r\n                      <TableCell align=\"right\">{row.ytdChange}</TableCell>\r\n                      <TableCell align=\"right\">{row.open}</TableCell>\r\n                      <TableCell align=\"right\">{row.close}</TableCell>\r\n                      <TableCell align=\"right\">{row.low}</TableCell>\r\n                      <TableCell align=\"right\">{row.high}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 49 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows(listTen).length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          backIconButtonProps={{\r\n            'aria-label': 'Previous Page',\r\n          }}\r\n          nextIconButtonProps={{\r\n            'aria-label': 'Next Page',\r\n          }}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}