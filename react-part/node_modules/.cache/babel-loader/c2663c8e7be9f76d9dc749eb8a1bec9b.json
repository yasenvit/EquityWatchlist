{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/yavit/OneDrive/Desktop/finProject/proreplica/proreplica_react/src/components/QuoteGrid.js\";\nimport React, { Component, Fragment } from 'react';\nimport apiCall from '../util/apiCall';\nimport '../styles/style.css';\nimport '../styles/quoteBlock.css';\nimport Quotes from '../quoteGrid/Quotes';\nimport Gainers from '../quoteGrid/Gainers';\nimport Mostactive from '../quoteGrid/Mostactive';\nimport Losers from '../quoteGrid/Losers';\nimport Positions from '../portfolioGrid/Positions';\nimport Trades from '../portfolioGrid/Trades';\nimport Account from '../portfolioGrid/Account';\nimport SelectBox from '../features/select-box/Tags';\nimport SelectList from '../features/select-box/ListTen';\nexport default class QuoteGrid extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      quotes: {\n        page: \"US Equities\",\n        tags: [{\n          tag: 'In Focus',\n          id: 1\n        }, {\n          tag: 'Mostactive',\n          id: 2\n        }, {\n          tag: 'Gainers',\n          id: 3\n        }, {\n          tag: 'Losers',\n          id: 4\n        }]\n      },\n      portfolio: {\n        page: \"Portfolio\",\n        tags: [{\n          tag: 'Account',\n          id: 1\n        }, {\n          tag: 'Positions',\n          id: 2\n        }, {\n          tag: 'Trades',\n          id: 3\n        }]\n      },\n      selectedPage: \"US Equities\",\n      selectedTag: \"In Focus\",\n      activeTickers: []\n    };\n\n    this.selectItem = obj => {\n      this.setState({\n        selectedTag: obj.tag\n      });\n    };\n\n    this.selectPage = obj => {\n      this.setState({\n        selectedPage: obj.page,\n        selectedTag: obj.tags[0].tag\n      });\n    };\n\n    this.delSymbol = symbol => {\n      console.log(\"deleting\", symbol);\n      const endpoint = \"/api/active/delete/\".concat(symbol);\n      const promise = apiCall(endpoint, 'get');\n      promise.then(blob => blob.json()).then(json => {\n        this.setState({\n          activeTickers: json.symbols\n        });\n      });\n    };\n  }\n\n  /**************************************************************************/\n  addSymbol(symbol) {\n    const endpoint = \"/api/active/add/\".concat(symbol);\n    const promise = apiCall(endpoint, 'get');\n    promise.then(blob => blob.json()).then(json => {\n      if (json.error.length > 0) {\n        alert(json.error);\n      } else {\n        this.setState({\n          activeTickers: json.symbols\n        });\n      }\n    });\n  }\n\n  /***********************************************************************/\n  checkList() {\n    const endpoint = \"/api/active/list\";\n    const promise = apiCall(endpoint, 'get');\n    promise.then(blob => blob.json()).then(json => {\n      this.setState({\n        activeTickers: json.symbols\n      });\n    });\n  }\n\n  componentWillMount() {\n    this.checkList();\n  }\n  /************************************************************************/\n\n\n  render() {\n    console.log(\"QuoteGrid render page-------------\", this.state.selectedPage);\n    console.log(\"QuoteGrid render item-------------\", this.state.selectedTag);\n    let outpTable = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    });\n\n    if (this.state.selectedPage === \"US Equities\" && this.state.selectedTag === \"In Focus\") {\n      outpTable = React.createElement(Quotes, {\n        setChartsTicker: this.props.setChartsTicker,\n        activeTickers: this.state.activeTickers,\n        delSymbol: this.delSymbol,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      });\n    } else if (this.state.selectedPage === \"US Equities\" && this.state.selectedTag === \"Mostactive\") {\n      outpTable = React.createElement(Mostactive, {\n        addSymbol: this.addSymbol,\n        activeTickers: this.state.activeTickers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      });\n    } else if (this.state.selectedPage === \"US Equities\" && this.state.selectedTag === \"Gainers\") {\n      outpTable = React.createElement(Gainers, {\n        addSymbol: this.addSymbol,\n        activeTickers: this.state.activeTickers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      });\n    } else if (this.state.selectedPage === \"US Equities\" && this.state.selectedTag === \"Losers\") {\n      outpTable = React.createElement(Losers, {\n        addSymbol: this.addSymbol,\n        activeTickers: this.state.activeTickers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      });\n    } else if (this.state.selectedPage === \"Portfolio\" && this.state.selectedTag === \"Account\") {\n      outpTable = React.createElement(Account, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      });\n    } else if (this.state.selectedPage === \"Portfolio\" && this.state.selectedTag === \"Positions\") {\n      outpTable = React.createElement(Positions, {\n        setChartsTicker: this.props.setChartsTicker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      });\n    } else if (this.state.selectedPage === \"Portfolio\" && this.state.selectedTag === \"Trades\") {\n      outpTable = React.createElement(Trades, {\n        setChartsTicker: this.props.setChartsTicker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      });\n    }\n    /************************************************/\n\n\n    let addTickerButton = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    });\n    let outputPageOption = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    });\n\n    if (this.state.selectedPage === \"US Equities\") {\n      addTickerButton = React.createElement(\"div\", {\n        className: \"table-header-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"input-adding\",\n        id: \"symbol\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"button-adding\",\n        onClick: event => {\n          this.addSymbol(document.getElementById('symbol').value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"add symbol\"));\n      outputPageOption = React.createElement(SelectBox, {\n        items: this.state.quotes.tags,\n        selectItem: this.selectItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      });\n    } else if (this.state.selectedPage === \"Portfolio\") {\n      outputPageOption = React.createElement(SelectBox, {\n        items: this.state.portfolio.tags,\n        selectItem: this.selectItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      });\n    }\n\n    let selectFor = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    });\n\n    if (this.state.selectedPage === \"Portfolio\" && this.state.selectedTag === \"Positions\") {\n      selectFor = React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"flex-end\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"position for : \"), React.createElement(\"input\", {\n        className: \"input-adding\",\n        id: \"positionfor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"button-adding\",\n        onClick: event => {\n          this.addSymbol(document.getElementById('positionfor').value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"show\"));\n    } else if (this.state.selectedPage === \"Portfolio\" && this.state.selectedTag === \"Trades\") {\n      selectFor = React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"flex-end\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"trades for : \"), React.createElement(\"input\", {\n        className: \"input-adding\",\n        id: \"tradesfor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"button-adding\",\n        onClick: event => {\n          this.addSymbol(document.getElementById('tradesfor').value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"show\"));\n    }\n\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"collar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => {\n        this.selectPage(this.state.quotes);\n      },\n      className: this.state.selectedPage === \"US Equities\" ? \"tag-on\" : \"tag-off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Quote Grid\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => {\n        this.selectPage(this.state.portfolio);\n      },\n      className: this.state.selectedPage === \"Portfolio\" ? \"tag-on\" : \"tag-off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Portfolio\"))), React.createElement(\"div\", {\n      className: \"tag-ext\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"table-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"table-header-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, addTickerButton), React.createElement(\"div\", {\n      className: \"table-header-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: \"100px\",\n        backgroundColor: \"red\",\n        margin: '0px',\n        position: 'relative'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, outputPageOption)), React.createElement(\"div\", {\n      className: \"table-header-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, selectFor)), React.createElement(\"div\", {\n      className: \"split\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'scroll-box',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, outpTable)));\n  }\n\n}","map":{"version":3,"sources":["/mnt/c/Users/yavit/OneDrive/Desktop/finProject/proreplica/proreplica_react/src/components/QuoteGrid.js"],"names":["React","Component","Fragment","apiCall","Quotes","Gainers","Mostactive","Losers","Positions","Trades","Account","SelectBox","SelectList","QuoteGrid","state","quotes","page","tags","tag","id","portfolio","selectedPage","selectedTag","activeTickers","selectItem","obj","setState","selectPage","delSymbol","symbol","console","log","endpoint","promise","then","blob","json","symbols","addSymbol","error","length","alert","checkList","componentWillMount","render","outpTable","props","setChartsTicker","addTickerButton","outputPageOption","event","document","getElementById","value","selectFor","display","flexDirection","justifyContent","alignItems","width","backgroundColor","margin","position"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport apiCall from '../util/apiCall';\r\nimport '../styles/style.css';\r\nimport '../styles/quoteBlock.css';\r\nimport Quotes from '../quoteGrid/Quotes'\r\nimport Gainers from '../quoteGrid/Gainers'\r\nimport Mostactive from '../quoteGrid/Mostactive'\r\nimport Losers from '../quoteGrid/Losers'\r\nimport Positions from '../portfolioGrid/Positions'\r\nimport Trades from '../portfolioGrid/Trades'\r\nimport Account from '../portfolioGrid/Account'\r\nimport SelectBox from '../features/select-box/Tags'\r\nimport SelectList from '../features/select-box/ListTen'\r\n\r\nexport default class QuoteGrid extends Component {\r\n  state = {\r\n    quotes:{\r\n      page: \"US Equities\",\r\n      tags:[\r\n      { tag:'In Focus', id: 1 },\r\n      { tag:'Mostactive', id: 2 },\r\n      { tag:'Gainers', id: 3 },\r\n      { tag:'Losers', id: 4 },\r\n    ]},\r\n\r\n    portfolio : {\r\n      page: \"Portfolio\",\r\n      tags : [\r\n        { tag: 'Account', id: 1 },\r\n        { tag: 'Positions', id: 2 },\r\n        { tag: 'Trades', id: 3 }\r\n      ]},\r\n      selectedPage: \"US Equities\",\r\n      selectedTag: \"In Focus\",\r\n      activeTickers: []\r\n  }\r\n\r\n  selectItem = (obj) => {\r\n    this.setState({\r\n      selectedTag: obj.tag,\r\n    })\r\n  }\r\n  selectPage = (obj) => {\r\n    this.setState({\r\n      selectedPage: obj.page,\r\n      selectedTag : obj.tags[0].tag\r\n    })\r\n  }\r\n  /**************************************************************************/\r\n  addSymbol(symbol) {\r\n    const endpoint = `/api/active/add/${symbol}`\r\n    const promise = apiCall(endpoint,'get')\r\n    promise.then(blob => blob.json()).then(json => {\r\n      if (json.error.length > 0) {\r\n        alert(json.error)\r\n      } else {\r\n        this.setState({activeTickers: json.symbols})\r\n      }\r\n    })\r\n  }\r\n  delSymbol = (symbol) => {\r\n    console.log(\"deleting\",symbol)\r\n    const endpoint = `/api/active/delete/${symbol}`\r\n    const promise = apiCall(endpoint,'get')\r\n    promise.then(blob => blob.json()).then(json => {\r\n    this.setState({activeTickers: json.symbols})\r\n      })\r\n  }\r\n  /***********************************************************************/\r\n  checkList() {\r\n    const endpoint = `/api/active/list`\r\n    const promise = apiCall(endpoint,'get')\r\n    promise.then(blob => blob.json()).then(json => {\r\n      this.setState({\r\n        activeTickers: json.symbols\r\n      })\r\n    })\r\n  }\r\n  componentWillMount() {\r\n    this.checkList();\r\n  }\r\n/************************************************************************/\r\n\r\n  render() {\r\n  console.log(\"QuoteGrid render page-------------\", this.state.selectedPage)\r\n  console.log(\"QuoteGrid render item-------------\", this.state.selectedTag)\r\n  let outpTable = (<div></div>)\r\n  if(this.state.selectedPage === \"US Equities\" && this.state.selectedTag === \"In Focus\") {\r\n    outpTable = (\r\n      <Quotes\r\n        setChartsTicker={this.props.setChartsTicker}\r\n        activeTickers = {this.state.activeTickers}\r\n        delSymbol = {this.delSymbol}\r\n      />\r\n    )\r\n    } else if(this.state.selectedPage === \"US Equities\" && this.state.selectedTag === \"Mostactive\") {\r\n      outpTable = (\r\n        <Mostactive addSymbol = {this.addSymbol} activeTickers = {this.state.activeTickers}/>\r\n      )\r\n    } else if (this.state.selectedPage === \"US Equities\" && this.state.selectedTag === \"Gainers\") {\r\n      outpTable = (\r\n        <Gainers addSymbol = {this.addSymbol} activeTickers = {this.state.activeTickers}/>\r\n      )\r\n    } else if (this.state.selectedPage === \"US Equities\" && this.state.selectedTag === \"Losers\") {\r\n      outpTable = (\r\n        <Losers addSymbol = {this.addSymbol} activeTickers = {this.state.activeTickers}/>\r\n      )\r\n    } else if(this.state.selectedPage === \"Portfolio\" && this.state.selectedTag === \"Account\") {\r\n      outpTable = (\r\n        <Account/>\r\n      )\r\n    } else if(this.state.selectedPage === \"Portfolio\" && this.state.selectedTag === \"Positions\") {\r\n      outpTable = (\r\n        <Positions setChartsTicker={this.props.setChartsTicker}/>\r\n      )\r\n    } else if(this.state.selectedPage === \"Portfolio\" && this.state.selectedTag === \"Trades\") {\r\n      outpTable = (\r\n        <Trades setChartsTicker={this.props.setChartsTicker}/>\r\n      )\r\n    }\r\n/************************************************/  \r\n  let addTickerButton = (<div></div>)\r\n  let outputPageOption = (<div></div>)\r\n  if(this.state.selectedPage === \"US Equities\"){\r\n    addTickerButton = (\r\n      <div className=\"table-header-left\">\r\n        <input className=\"input-adding\"id=\"symbol\"></input>\r\n          <button className = \"button-adding\" onClick={(event)=>{\r\n            this.addSymbol(document.getElementById('symbol').value)                      \r\n        }}>add symbol</button>\r\n      </div>\r\n    )\r\n    outputPageOption = (\r\n      <SelectBox\r\n        items={this.state.quotes.tags}\r\n        selectItem={this.selectItem}\r\n      />\r\n    )    \r\n  } else if(this.state.selectedPage === \"Portfolio\"){\r\n    outputPageOption = (\r\n      <SelectBox\r\n        items={this.state.portfolio.tags}\r\n        selectItem={this.selectItem}\r\n      />\r\n    )\r\n  }\r\n  let selectFor = (<div></div>)\r\n  if(this.state.selectedPage===\"Portfolio\" && this.state.selectedTag===\"Positions\"){\r\n    selectFor = (\r\n    <div style={{display:\"flex\",flexDirection:\"row\", justifyContent:\"flex-end\", alignItems:\"center\"}}>\r\n        <div>position for : </div>\r\n        <input className=\"input-adding\"id=\"positionfor\"></input>\r\n          <button className = \"button-adding\" onClick={(event)=>{\r\n            this.addSymbol(document.getElementById('positionfor').value)                      \r\n        }}>show</button>\r\n    </div>\r\n  )\r\n} else if(this.state.selectedPage===\"Portfolio\" && this.state.selectedTag===\"Trades\"){\r\n  selectFor = (\r\n    <div style={{display:\"flex\",flexDirection:\"row\", justifyContent:\"flex-end\", alignItems:\"center\"}}>\r\n        <div>trades for : </div>\r\n        <input className=\"input-adding\"id=\"tradesfor\"></input>\r\n          <button className = \"button-adding\" onClick={(event)=>{\r\n            this.addSymbol(document.getElementById('tradesfor').value)                      \r\n        }}>show</button>\r\n    </div>\r\n  ) \r\n} \r\n    return (\r\n      <Fragment>\r\n        <div className=\"collar\">\r\n                <div><button onClick={()=>{this.selectPage(this.state.quotes)}} className={this.state.selectedPage===\"US Equities\"?\"tag-on\":\"tag-off\"}><p>Quote Grid</p></button></div>\r\n                <div><button onClick={()=>{this.selectPage(this.state.portfolio)}} className={this.state.selectedPage===\"Portfolio\"?\"tag-on\":\"tag-off\"}><p>Portfolio</p></button></div>\r\n                <div className=\"tag-ext\"></div>\r\n              </div>\r\n          <div className=\"table-header\">\r\n          <div className=\"table-header-left\">\r\n            {addTickerButton}\r\n          </div>\r\n            <div className=\"table-header-center\" >\r\n             <div style={{width: \"100px\",backgroundColor:\"red\",margin: '0px', position: 'relative'}}>\r\n             {outputPageOption}\r\n            </div>\r\n          </div>\r\n        \r\n          <div className=\"table-header-right\">\r\n          \r\n              {selectFor}\r\n          \r\n          </div>\r\n        </div>\r\n        <div className=\"split\">\r\n          <div className={'scroll-box'}>\r\n            {outpTable}\r\n          </div>\r\n        </div>\r\n      </Fragment>    \r\n    )\r\n  }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}