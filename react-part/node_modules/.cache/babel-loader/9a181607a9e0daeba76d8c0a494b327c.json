{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/yavit/OneDrive/Desktop/EquityEcho/WatchlistFundamentals/react-part/src/components/Lookup.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Route, NavLink, Redirect } from 'react-router-dom';\nimport Chart from './Ticker/Chart';\nimport Summary from './Ticker/Summary';\nimport Statistic from './Ticker/Statistic';\nimport '../styles/style.css';\nimport '../styles/dash.css';\nexport default class Lookup extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lookupTicker: null,\n      symbolPickedChart: null\n    };\n\n    this.pickHandle = symbol => {\n      this.setState({\n        symbolPickedChart: symbol\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      lookupTicker: this.props.lookupTicker\n    });\n  } // componentDidUpdate(prevState) {\n  //     if(this.state.activeTickers){\n  //       if(!this.state.activeQuotes || this.state.activeQuotes.length===0) {\n  //         this.getQuotes(this.state.activeTickers)\n  //       }\n  //     } \n  //   }\n\n\n  render() {\n    console.log(\"-->\", this.state.lookupTicker, \"<--\");\n    console.log(\"-->\", this.state.symbolPickedChart, \"<--\");\n    let secondRouteList = [];\n    let linkToSummary;\n    let linkToChart;\n    let linkToStatistic;\n\n    if (this.state.symbolPickedChart) {\n      secondRouteList = [React.createElement(Route, {\n        exact: true,\n        path: \"/dashboard/lookup\",\n        render: props => React.createElement(Redirect, {\n          to: \"/dashboard/lookup/chart\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/dashboard/lookup/summary/:symbol?\",\n        render: props => React.createElement(Summary, Object.assign({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/dashboard/lookup/chart/:symbol?\",\n        render: props => React.createElement(Chart, Object.assign({\n          pickHandle: this.pickHandle\n        }, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/dashboard/lookup/statistic/:symbol?\",\n        render: props => React.createElement(Statistic, Object.assign({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })];\n      linkToSummary = \"/dashboard/lookup/summary/\".concat(this.state.symbolPickedChart);\n      linkToChart = \"/dashboard/lookup/chart/\".concat(this.state.symbolPickedChart);\n      linkToStatistic = \"/dashboard/lookup/statistic/\".concat(this.state.symbolPickedChart);\n    } else {\n      secondRouteList = [React.createElement(Route, {\n        exact: true,\n        path: \"/dashboard/lookup\",\n        render: props => React.createElement(Redirect, {\n          to: \"/dashboard/lookup/summary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/dashboard/lookup/summary/:symbol?\",\n        render: props => React.createElement(Summary, Object.assign({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/dashboard/lookup/chart/:symbol?\",\n        render: props => React.createElement(Chart, Object.assign({\n          pickHandle: this.pickHandle\n        }, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/dashboard/lookup/statistic/:symbol?\",\n        render: props => React.createElement(Statistic, Object.assign({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })];\n      linkToSummary = this.state.lookupTicker ? \"/dashboard/lookup/summary/\".concat(this.state.lookupTicker) : \"/dashboard/lookup/summary\";\n      linkToChart = this.state.lookupTicker ? \"/dashboard/lookup/chart/\".concat(this.state.lookupTicker) : \"/dashboard/lookup/chart\";\n      linkToStatistic = this.state.lookupTicker ? \"/dashboard/lookup/statistic/\".concat(this.state.lookupTicker) : \"/dashboard/lookup/statistic\";\n    }\n\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navheader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      exact: true,\n      to: linkToSummary,\n      style: {\n        textDecoration: \"none\",\n        color: \"rgb(28, 104, 243)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Summary\")), React.createElement(\"div\", {\n      className: \"tag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      exact: true,\n      to: linkToChart,\n      style: {\n        textDecoration: \"none\",\n        color: \"rgb(28, 104, 243)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Chart\")), React.createElement(\"div\", {\n      className: \"tag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      exact: true,\n      to: linkToStatistic,\n      style: {\n        textDecoration: \"none\",\n        color: \"rgb(28, 104, 243)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Statistic\"))), React.createElement(\"div\", {\n      className: \"lookup-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, secondRouteList));\n  }\n\n}","map":{"version":3,"sources":["/mnt/c/Users/yavit/OneDrive/Desktop/EquityEcho/WatchlistFundamentals/react-part/src/components/Lookup.js"],"names":["React","Component","Fragment","Route","NavLink","Redirect","Chart","Summary","Statistic","Lookup","state","lookupTicker","symbolPickedChart","pickHandle","symbol","setState","componentDidMount","props","render","console","log","secondRouteList","linkToSummary","linkToChart","linkToStatistic","textDecoration","color"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport {Route, NavLink, Redirect} from 'react-router-dom'\r\nimport Chart from './Ticker/Chart'\r\nimport Summary from './Ticker/Summary'\r\nimport Statistic from './Ticker/Statistic'\r\nimport '../styles/style.css';\r\nimport '../styles/dash.css';\r\n\r\nexport default class Lookup extends Component {\r\n    state = {\r\n        lookupTicker: null,\r\n        symbolPickedChart: null\r\n    }\r\n    pickHandle = (symbol) => {\r\n        this.setState({\r\n            symbolPickedChart: symbol,\r\n        })\r\n    }\r\n    componentDidMount () {\r\n        this.setState({lookupTicker: this.props.lookupTicker})\r\n    }\r\n    // componentDidUpdate(prevState) {\r\n    //     if(this.state.activeTickers){\r\n    //       if(!this.state.activeQuotes || this.state.activeQuotes.length===0) {\r\n    //         this.getQuotes(this.state.activeTickers)\r\n    //       }\r\n    //     } \r\n    //   }\r\n    render() {\r\n        console.log(\"-->\",this.state.lookupTicker,\"<--\")\r\n        console.log(\"-->\",this.state.symbolPickedChart,\"<--\")\r\n\r\n        let secondRouteList=[]\r\n        let linkToSummary\r\n        let linkToChart\r\n        let linkToStatistic\r\n\r\n    if(this.state.symbolPickedChart) {\r\n        secondRouteList = [\r\n            <Route exact path=\"/dashboard/lookup\" render={(props)=><Redirect to=\"/dashboard/lookup/chart\"/>}/>,\r\n\r\n            <Route exact path=\"/dashboard/lookup/summary/:symbol?\" render={(props)=>\r\n                <Summary {...props} />}/>,\r\n            <Route exact path=\"/dashboard/lookup/chart/:symbol?\" render={(props)=>\r\n                <Chart pickHandle = {this.pickHandle} {...props} />}/>,\r\n            <Route exact path=\"/dashboard/lookup/statistic/:symbol?\" render={(props)=>\r\n                <Statistic {...props} />}/>,\r\n        ]\r\n        linkToSummary = `/dashboard/lookup/summary/${this.state.symbolPickedChart}`\r\n        linkToChart = `/dashboard/lookup/chart/${this.state.symbolPickedChart}`\r\n        linkToStatistic = `/dashboard/lookup/statistic/${this.state.symbolPickedChart}`\r\n    } else {        \r\n        secondRouteList = [\r\n            <Route exact path=\"/dashboard/lookup\" render={(props)=><Redirect to=\"/dashboard/lookup/summary\"/>}/>,\r\n\r\n            <Route exact path=\"/dashboard/lookup/summary/:symbol?\" render={(props)=>\r\n                <Summary {...props} />}/>,\r\n            <Route exact path=\"/dashboard/lookup/chart/:symbol?\" render={(props)=>\r\n                <Chart pickHandle = {this.pickHandle} {...props} />}/>,\r\n            <Route exact path=\"/dashboard/lookup/statistic/:symbol?\" render={(props)=>\r\n                <Statistic {...props} />}/>,\r\n        ]\r\n        linkToSummary = this.state.lookupTicker?`/dashboard/lookup/summary/${this.state.lookupTicker}`:`/dashboard/lookup/summary`\r\n        linkToChart = this.state.lookupTicker?`/dashboard/lookup/chart/${this.state.lookupTicker}`:`/dashboard/lookup/chart`\r\n        linkToStatistic = this.state.lookupTicker?`/dashboard/lookup/statistic/${this.state.lookupTicker}`:`/dashboard/lookup/statistic`\r\n    }\r\n    \r\n        \r\n        return (\r\n            <Fragment>\r\n                <div className=\"navheader\">\r\n                    <div className={\"tag\"}>\r\n                        <NavLink\r\n                            exact to={linkToSummary}\r\n                            style={{textDecoration:\"none\", color:\"rgb(28, 104, 243)\"}}\r\n                            >Summary\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={\"tag\"}>\r\n                        <NavLink\r\n                            exact to={linkToChart}\r\n                            style={{textDecoration:\"none\", color:\"rgb(28, 104, 243)\"}}\r\n                            >Chart\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={\"tag\"}>\r\n                        <NavLink\r\n                            exact to={linkToStatistic}\r\n                            style={{textDecoration:\"none\", color:\"rgb(28, 104, 243)\"}}\r\n                            >Statistic\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n                <div className={\"lookup-field\"}>\r\n                    {secondRouteList}\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}